# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: ubuntu
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
services:
    - id: mysql
      env: 
        MYSQL_DATABASE: test
        MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    - id: postgres
      env:
        POSTGRES_DB: test
        POSTGRES_USER: test
        POSTGRES_PASSWORD: test
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    - script:
        name: initialize system
        code: |
            apt-get update
            apt-get install -y build-essential clang g++ valgrind cmake git lcov ruby-coveralls libmysqlclient-dev libsqlite3-dev libpq-dev postgresql-server-dev-all
    - script:
        name: initialize git submodules
        code: |
            git submodule update --init --recursive
    - script:
         name: env
         code: env            
    - script: 
        name: "Wait for MariaDB connection" 
        code: | 
        while ! nc -q 1 $MARIADB_PORT_3306_TCP_ADDR $MARIADB_PORT_3306_TCP_PORT </dev/null; do sleep 3; done
    - script:
        name: compile gcc
        code: |
            mkdir release-gcc
            cd release-gcc
            cmake -DCMAKE_BUILD_TYPE=Release -DCODE_COVERAGE=ON -DMEMORY_CHECK=ON ..
            make
            make test ARGS=-V
    - script:
        name: compile clang
        code: |
            mkdir release-clang
            cd release-clang
            cmake -DCMAKE_BUILD_TYPE=Release -DCODE_COVERAGE=ON -DMEMORY_CHECK=ON ..
            make
            make test ARGS=-V
