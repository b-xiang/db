!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
//apple_ref/c/data/sql_null	html/sql_value_h/index.html	/^<a name="\/\/apple_ref\/c\/data\/sql_null"><\/a>$/;"	a
//apple_ref/c/econst/Debug	html/sqldb_h/index.html	/^<dt><a name="\/\/apple_ref\/c\/econst\/Debug"><code>Debug<\/code><\/a><\/dt><dd><p>debug, info, warning and error messages will be logged<\/dd>$/;"	a
//apple_ref/c/econst/Error	html/sqldb_h/index.html	/^<dt><a name="\/\/apple_ref\/c\/econst\/Error"><code>Error<\/code><\/a><\/dt><dd><p>only error messages will be logged<\/dd>$/;"	a
//apple_ref/c/econst/Info	html/sqldb_h/index.html	/^<dt><a name="\/\/apple_ref\/c\/econst\/Info"><code>Info<\/code><\/a><\/dt><dd><p>info, warning, and error messages will be logged<\/dd>$/;"	a
//apple_ref/c/econst/None	html/sqldb_h/index.html	/^<dt><a name="\/\/apple_ref\/c\/econst\/None"><code>None<\/code><\/a><\/dt><dd><p>logging is disabled<\/dd>$/;"	a
//apple_ref/c/econst/Trace	html/sqldb_h/index.html	/^<dt><a name="\/\/apple_ref\/c\/econst\/Trace"><code>Trace<\/code><\/a><\/dt><dd><p>trace, debug, info, warning and error messages will be logged<\/dd>$/;"	a
//apple_ref/c/econst/Warn	html/sqldb_h/index.html	/^<dt><a name="\/\/apple_ref\/c\/econst\/Warn"><code>Warn<\/code><\/a><\/dt><dd><p>warnings and errors will be logged<\/dd>$/;"	a
//apple_ref/c/func/c_alloc	html/alloc_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/c_alloc"><\/a>$/;"	a
//apple_ref/c/func/c_alloc_DONTLINK_1	html/alloc_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/c_alloc_DONTLINK_1"><\/a>$/;"	a
//apple_ref/c/func/c_alloc_DONTLINK_2	html/alloc_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/c_alloc_DONTLINK_2"><\/a>$/;"	a
//apple_ref/c/func/find_all	html/base_record_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/find_all"><\/a>$/;"	a
//apple_ref/c/func/join_csv	html/query_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/join_csv"><\/a>$/;"	a
//apple_ref/c/func/join_params	html/query_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/join_params"><\/a>$/;"	a
//apple_ref/c/func/operator%3C%3C	html/join_clause_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/operator%3C%3C"><\/a>$/;"	a
//apple_ref/c/func/operator__join	html/join_clause_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/operator__join"><\/a>$/;"	a
//apple_ref/c/func/operator_uri	html/sqldb_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/operator_uri"><\/a>$/;"	a
//apple_ref/c/func/operator_vector	html/base_record_h/index.html	/^<a name="\/\/apple_ref\/c\/func\/operator_vector"><\/a>$/;"	a
//apple_ref/c/tag/column_definition	html/schema_h/index.html	/^<a name="\/\/apple_ref\/c\/tag\/column_definition"><\/a>$/;"	a
//apple_ref/c/tdef/Level	html/sqldb_h/index.html	/^<a name="\/\/apple_ref\/c\/tdef\/Level"><\/a>$/;"	a
//apple_ref/c/tdef/type	html/join_clause_h/index.html	/^<a name="\/\/apple_ref\/c\/tdef\/type"><\/a>$/;"	a
//apple_ref/cpp/cl/ARG3_DB_SELECT_QUERY_H_multideclaration_block	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/ARG3_DB_SELECT_QUERY_H_multideclaration_block"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr>$/;"	a
//apple_ref/cpp/cl/ARG3_DB_SELECT_QUERY_H_multideclaration_block/select_query	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/Classes/select_query/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/ARG3_DB_SELECT_QUERY_H_multideclaration_block\/select_query"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr>$/;"	a
//apple_ref/cpp/cl/ARG3_DB_SQLDB_H_multideclaration_block	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/ARG3_DB_SQLDB_H_multideclaration_block"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr>$/;"	a
//apple_ref/cpp/cl/arg3	html/select_query_h/Classes/arg3/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/arg3"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr>$/;"	a
//apple_ref/cpp/cl/arg3	html/sqldb_h/Classes/arg3/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/arg3"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr>$/;"	a
//apple_ref/cpp/cl/bindable	html/bindable_h/Classes/bindable/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/bindable"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/column	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/column"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/column_impl	html/column_h/Classes/column_impl/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/column_impl"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/delete_query	html/modify_query_h/Classes/delete_query/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/delete_query"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/insert_query	html/modify_query_h/Classes/insert_query/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/insert_query"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/join_clause	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/join_clause"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/modify_query	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/modify_query"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_binding	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_binding"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_cached_column	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_cached_column"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_cached_resultset	html/mysql_resultset_h/Classes/mysql_cached_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_cached_resultset"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_cached_row	html/mysql_row_h/Classes/mysql_cached_row/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_cached_row"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_column	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_column"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_db	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_db"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_resultset	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_resultset"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_row	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_row"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_statement	html/mysql_statement_h/Classes/mysql_statement/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_statement"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_stmt_column	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_stmt_column"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_stmt_resultset	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_stmt_resultset"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/mysql_stmt_row	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/mysql_stmt_row"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/postgres_cached_column	html/postgres_column_h/Classes/postgres_cached_column/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/postgres_cached_column"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/postgres_cached_resultset	html/postgres_resultset_h/Classes/postgres_cached_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/postgres_cached_resultset"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/postgres_cached_row	html/postgres_row_h/Classes/postgres_cached_row/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/postgres_cached_row"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/postgres_column	html/postgres_column_h/Classes/postgres_column/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/postgres_column"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/postgres_db	html/postgres_db_h/Classes/postgres_db/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/postgres_db"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/postgres_resultset	html/postgres_resultset_h/Classes/postgres_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/postgres_resultset"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/postgres_row	html/postgres_row_h/Classes/postgres_row/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/postgres_row"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/postgres_statement	html/postgres_statement_h/Classes/postgres_statement/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/postgres_statement"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/query	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/query"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/resultset	html/resultset_h/Classes/resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/resultset"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/resultset_impl	html/resultset_h/Classes/resultset_impl/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/resultset_impl"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/resultset_iterator	html/resultset_h/Classes/resultset_iterator/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/resultset_iterator"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/row	html/row_h/Classes/row/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/row"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/row_impl	html/row_h/Classes/row_impl/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/row_impl"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/row_iterator	html/row_h/Classes/row_iterator/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/row_iterator"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/schema	html/schema_h/Classes/schema/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/schema"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/schema_factory	html/schema_factory_h/Classes/schema_factory/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/schema_factory"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/select_query	html/select_query_h/Classes/select_query/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/select_query"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sql_value	html/sql_value_h/Classes/sql_value/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sql_value"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sqldb	html/sqldb_h/Classes/sqldb/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sqldb"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sqlite3_cached_column	html/sqlite3_column_h/Classes/sqlite3_cached_column/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sqlite3_cached_column"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sqlite3_cached_resultset	html/sqlite3_resultset_h/Classes/sqlite3_cached_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sqlite3_cached_resultset"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sqlite3_cached_row	html/sqlite3_row_h/Classes/sqlite3_cached_row/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sqlite3_cached_row"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sqlite3_column	html/sqlite3_column_h/Classes/sqlite3_column/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sqlite3_column"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sqlite3_db	html/sqlite3_db_h/Classes/sqlite3_db/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sqlite3_db"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sqlite3_resultset	html/sqlite3_resultset_h/Classes/sqlite3_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sqlite3_resultset"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sqlite3_row	html/sqlite3_row_h/Classes/sqlite3_row/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sqlite3_row"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/sqlite3_statement	html/sqlite3_statement_h/Classes/sqlite3_statement/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/sqlite3_statement"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/statement	html/statement_h/Classes/statement/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/statement"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/update_query	html/modify_query_h/Classes/update_query/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/update_query"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/cl/where_clause	html/where_clause_h/Classes/where_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/cl\/where_clause"><\/a><table id="hd_outermost_table" height="100%" width="100%"><tr><td valign='top' id='tocMenu' src='toc.html'><\/td>$/;"	a
//apple_ref/cpp/clconst/modify_query/BATCH	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/clconst\/modify_query\/BATCH"><\/a>$/;"	a
//apple_ref/cpp/instm/ARG3_DB_SQLDB_H_multideclaration_block/operator_uri//(parse,uri,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string)	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^<!-- headerDoc=instm;  uid=\/\/apple_ref\/cpp\/instm\/ARG3_DB_SQLDB_H_multideclaration_block\/operator_uri\/\/(parse,uri,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string);   name=ARG3_DB_SQLDB_H_multideclaration_block::operator uri --><a name="\/\/apple_ref\/cpp\/instm\/ARG3_DB_SQLDB_H_multideclaration_block\/operator_uri\/\/(parse,uri,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string)"><\/a>$/;"	a
//apple_ref/cpp/instm/column/column//(column%26%26)	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column\/column\/\/(column%26%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/column/column//(constcolumn%26)	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column\/column\/\/(constcolumn%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/column/column//(conststd::shared_ptr%26)	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column\/column\/\/(conststd::shared_ptr%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/column/impl/std::shared_ptr/()	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column\/impl\/std::shared_ptr\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/column/is_valid/bool/()	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column\/is_valid\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/column/name/std::string/()	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column\/name\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/column/operator%3D/column/(column%26%26)	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column\/operator%3D\/column\/(column%26%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/column/operator%3D/column/(constcolumn%26)	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column\/operator%3D\/column\/(constcolumn%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/column/to_value/sql_value/()	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column\/to_value\/sql_value\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/column_impl/is_valid/bool/()	html/column_h/Classes/column_impl/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column_impl\/is_valid\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/column_impl/name/std::string/()	html/column_h/Classes/column_impl/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column_impl\/name\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/column_impl/to_value/sql_value/()	html/column_h/Classes/column_impl/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/column_impl\/to_value\/sql_value\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/delete_query/to_string/std::string/()	html/modify_query_h/Classes/delete_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/delete_query\/to_string\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/insert_query/execute/int/()	html/modify_query_h/Classes/insert_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/insert_query\/execute\/int\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/insert_query/last_insert_id/longlong/()	html/modify_query_h/Classes/insert_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/insert_query\/last_insert_id\/longlong\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/insert_query/to_string/std::string/()	html/modify_query_h/Classes/insert_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/insert_query\/to_string\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/empty/bool/()	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/empty\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/join_clause//()	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/join_clause\/\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/join_clause//(constjoin_clause%26)	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/join_clause\/\/(constjoin_clause%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/join_clause/explicit/(conststd::string%26,join::type)	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/join_clause\/explicit\/(conststd::string%26,join::type)"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/on/join_clause%26/(constwhere_clause%26)	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/on\/join_clause%26\/(constwhere_clause%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/on/where_clause%26/(conststd::string%26)	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/on\/where_clause%26\/(conststd::string%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/operator_std::string/explicit/()	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/operator_std::string\/explicit\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/reset/void/()	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/reset\/void\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/set_table_name/join_clause%26/(conststd::string%26)	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/set_table_name\/join_clause%26\/(conststd::string%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/set_type/join_clause%26/(join::type)	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/set_type\/join_clause%26\/(join::type)"><\/a>$/;"	a
//apple_ref/cpp/instm/join_clause/to_string/std::string/()	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/join_clause\/to_string\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/execute/int/()	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/execute\/int\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/last_number_of_changes/int/()	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/last_number_of_changes\/int\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/modify_query//(conststd::shared_ptr%26)	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/modify_query\/\/(conststd::shared_ptr%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/modify_query//(conststd::shared_ptr%26,conststd::vector%26)	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/modify_query\/\/(conststd::shared_ptr%26,conststd::vector%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/modify_query//(sqldb*,conststd::string%26)	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/modify_query\/\/(sqldb*,conststd::string%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/modify_query//(sqldb*,conststd::string%26,conststd::vector%26)	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/modify_query\/\/(sqldb*,conststd::string%26,conststd::vector%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/set_flags/modify_query%26/(int)	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/set_flags\/modify_query%26\/(int)"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/table_name/modify_query%26/(conststd::string%26)	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/table_name\/modify_query%26\/(conststd::string%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/table_name/std::string/()	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/table_name\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/modify_query/to_string/std::string/()	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/modify_query\/to_string\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/bind/mysql_binding%26/(size_t,int)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/bind\/mysql_binding%26\/(size_t,int)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/bind_params/void/(MYSQL_STMT*)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/bind_params\/void\/(MYSQL_STMT*)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/bind_result/void/(MYSQL_STMT*)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/bind_result\/void\/(MYSQL_STMT*)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/get/MYSQL_BIND*/(size_t)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/get\/MYSQL_BIND*\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/mysql_binding//()	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/mysql_binding\/\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/mysql_binding//(MYSQL_BIND*,size_t)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/mysql_binding\/\/(MYSQL_BIND*,size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/mysql_binding//(MYSQL_FIELD*,size_t)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/mysql_binding\/\/(MYSQL_FIELD*,size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/mysql_binding//(constMYSQL_BIND%26)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/mysql_binding\/\/(constMYSQL_BIND%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/mysql_binding//(size_t)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/mysql_binding\/\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/reset/void/()	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/reset\/void\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/size/size_t/()	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/size\/size_t\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/sql_type/int/(size_t)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/sql_type\/int\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_binding/to_value/sql_value/(size_t)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_binding\/to_value\/sql_value\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_cached_column/is_valid/bool/()	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_cached_column\/is_valid\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_cached_column/mysql_cached_column//(conststd::shared_ptr%26,MYSQL_ROW,size_t)	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_cached_column\/mysql_cached_column\/\/(conststd::shared_ptr%26,MYSQL_ROW,size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_cached_column/mysql_cached_column//(conststd::string%26,mysql_binding%26,size_t)	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_cached_column\/mysql_cached_column\/\/(conststd::string%26,mysql_binding%26,size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_cached_column/name/std::string/()	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_cached_column\/name\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_cached_column/sql_type/int/()	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_cached_column\/sql_type\/int\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_cached_column/to_value/sql_value/()	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_cached_column\/to_value\/sql_value\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_column/is_valid/bool/()	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_column\/is_valid\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_column/mysql_column//(constshared_ptr%26,MYSQL_ROW,size_t)	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_column\/mysql_column\/\/(constshared_ptr%26,MYSQL_ROW,size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_column/name/std::string/()	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_column\/name\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_column/sql_type/int/()	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_column\/sql_type\/int\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_column/to_value/sql_value/()	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_column\/to_value\/sql_value\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/close/void/()	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/close\/void\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/create_statement/shared_ptr/()	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/create_statement\/shared_ptr\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/execute/resultset/(conststring%26,bool)	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/execute\/resultset\/(conststring%26,bool)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/is_open/bool/()	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/is_open\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/last_error/string/()	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/last_error\/string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/last_insert_id/longlong/()	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/last_insert_id\/longlong\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/last_number_of_changes/int/()	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/last_number_of_changes\/int\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/mysql_db//(consturi%26)	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/mysql_db\/\/(consturi%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/open/void/()	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/open\/void\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_db/query_schema/void/(conststring%26,std::vector%26)	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_db\/query_schema\/void\/(conststring%26,std::vector%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_resultset/current_row/row/()	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_resultset\/current_row\/row\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_resultset/is_valid/bool/()	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_resultset\/is_valid\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_resultset/mysql_resultset//(mysql_db*,conststd::shared_ptr%26)	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_resultset\/mysql_resultset\/\/(mysql_db*,conststd::shared_ptr%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_resultset/next/bool/()	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_resultset\/next\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_resultset/reset/void/()	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_resultset\/reset\/void\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_resultset/size/size_t/()	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_resultset\/size\/size_t\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_row/column/column_type/(conststd::string%26)	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_row\/column\/column_type\/(conststd::string%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_row/column/column_type/(size_t)	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_row\/column\/column_type\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_row/column_name/std::string/(size_t)	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_row\/column_name\/std::string\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_row/is_valid/bool/()	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_row\/is_valid\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_row/mysql_row//(mysql_db*,conststd::shared_ptr%26,MYSQL_ROW)	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_row\/mysql_row\/\/(mysql_db*,conststd::shared_ptr%26,MYSQL_ROW)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_row/size/size_t/()	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_row\/size\/size_t\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_column/is_valid/bool/()	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_column\/is_valid\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_column/mysql_stmt_column//(conststd::string%26,constshared_ptr%26,size_t)	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_column\/mysql_stmt_column\/\/(conststd::string%26,constshared_ptr%26,size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_column/name/std::string/()	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_column\/name\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_column/sql_type/int/()	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_column\/sql_type\/int\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_column/to_value/sql_value/()	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_column\/to_value\/sql_value\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_resultset/current_row/row/()	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_resultset\/current_row\/row\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_resultset/is_valid/bool/()	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_resultset\/is_valid\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_resultset/mysql_stmt_resultset//(mysql_db*,conststd::shared_ptr%26)	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_resultset\/mysql_stmt_resultset\/\/(mysql_db*,conststd::shared_ptr%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_resultset/next/bool/()	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_resultset\/next\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_resultset/reset/void/()	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_resultset\/reset\/void\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_resultset/size/size_t/()	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_resultset\/size\/size_t\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_row/column/column_type/(conststd::string%26)	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_row\/column\/column_type\/(conststd::string%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_row/column/column_type/(size_t)	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_row\/column\/column_type\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_row/column_name/std::string/(size_t)	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_row\/column_name\/std::string\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_row/is_valid/bool/()	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_row\/is_valid\/bool\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_row/mysql_stmt_row//(mysql_db*,conststd::shared_ptr%26,conststd::shared_ptr%26,conststd::shared_ptr%26)	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_row\/mysql_stmt_row\/\/(mysql_db*,conststd::shared_ptr%26,conststd::shared_ptr%26,conststd::shared_ptr%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/mysql_stmt_row/size/size_t/()	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/mysql_stmt_row\/size\/size_t\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/query/assert_binding_index/size_t/(size_t)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/assert_binding_index\/size_t\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/bind/query%26/(size_t)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/bind\/query%26\/(size_t)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/bind/query%26/(size_t,constsql_blob%26)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/bind\/query%26\/(size_t,constsql_blob%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/bind/query%26/(size_t,constsql_null_t%26)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/bind\/query%26\/(size_t,constsql_null_t%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/bind/query%26/(size_t,conststd::string%26,int)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/bind\/query%26\/(size_t,conststd::string%26,int)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/bind/query%26/(size_t,conststd::wstring%26,int)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/bind\/query%26\/(size_t,conststd::wstring%26,int)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/bind/query%26/(size_t,double)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/bind\/query%26\/(size_t,double)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/bind/query%26/(size_t,int)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/bind\/query%26\/(size_t,int)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/bind/query%26/(size_t,longlong)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/bind\/query%26\/(size_t,longlong)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/bind_value/query%26/(size_t,constsql_value%26)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/bind_value\/query%26\/(size_t,constsql_value%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/last_error/std::string/()	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/last_error\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/query/operator%3D/query/(constquery%26)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/operator%3D\/query\/(constquery%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/operator%3D/query/(query%26%26)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/operator%3D\/query\/(query%26%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/query//(constquery%26)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/query\/\/(constquery%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/query//(query%26%26)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/query\/\/(query%26%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/query/query//(sqldb*)	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/query\/query\/\/(sqldb*)"><\/a>$/;"	a
//apple_ref/cpp/instm/select_query/execute_scalar/templateT/()	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/Classes/select_query/index.html	/^<!-- headerDoc=instm;  uid=\/\/apple_ref\/cpp\/instm\/select_query\/execute_scalar\/templateT\/();   name=select_query::execute_scalar --><a name="\/\/apple_ref\/cpp\/instm\/select_query\/execute_scalar\/templateT\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/select_query/execute_scalar/templateT/()	html/select_query_h/Classes/select_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/select_query\/execute_scalar\/templateT\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/update_query/to_string/std::string/()	html/modify_query_h/Classes/update_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/update_query\/to_string\/std::string\/()"><\/a>$/;"	a
//apple_ref/cpp/instm/update_query/where/update_query%26/(constwhere_clause%26)	html/modify_query_h/Classes/update_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/update_query\/where\/update_query%26\/(constwhere_clause%26)"><\/a>$/;"	a
//apple_ref/cpp/instm/update_query/where/where_clause%26/(conststring%26)	html/modify_query_h/Classes/update_query/index.html	/^<a name="\/\/apple_ref\/cpp\/instm\/update_query\/where\/where_clause%26\/(conststring%26)"><\/a>$/;"	a
//apple_ref/doc/functionparam/ARG3_DB_SQLDB_H_multideclaration_block/operator_uri/url	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/ARG3_DB_SQLDB_H_multideclaration_block\/operator_uri\/url"><\/a>$/;"	a
//apple_ref/doc/functionparam/c_alloc/num	html/alloc_h/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/c_alloc\/num"><\/a>$/;"	a
//apple_ref/doc/functionparam/c_alloc/size	html/alloc_h/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/c_alloc\/size"><\/a>$/;"	a
//apple_ref/doc/functionparam/c_alloc/value	html/alloc_h/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/c_alloc\/value"><\/a>$/;"	a
//apple_ref/doc/functionparam/column/column/impl	html/column_h/Classes/column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/column\/column\/impl"><\/a>$/;"	a
//apple_ref/doc/functionparam/find_all/funk	html/base_record_h/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/find_all\/funk"><\/a>$/;"	a
//apple_ref/doc/functionparam/find_all/schema	html/base_record_h/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/find_all\/schema"><\/a>$/;"	a
//apple_ref/doc/functionparam/join_clause/join_clause/joinType	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/join_clause\/join_clause\/joinType"><\/a>$/;"	a
//apple_ref/doc/functionparam/join_clause/join_clause/tableName	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/join_clause\/join_clause\/tableName"><\/a>$/;"	a
//apple_ref/doc/functionparam/join_clause/on/value	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/join_clause\/on\/value"><\/a>$/;"	a
//apple_ref/doc/functionparam/join_clause/set_table_name/value	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/join_clause\/set_table_name\/value"><\/a>$/;"	a
//apple_ref/doc/functionparam/join_clause/set_type/value	html/join_clause_h/Classes/join_clause/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/join_clause\/set_type\/value"><\/a>$/;"	a
//apple_ref/doc/functionparam/modify_query/modify_query/column	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/modify_query\/modify_query\/column"><\/a>$/;"	a
//apple_ref/doc/functionparam/modify_query/modify_query/columns	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/modify_query\/modify_query\/columns"><\/a>$/;"	a
//apple_ref/doc/functionparam/modify_query/modify_query/db	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/modify_query\/modify_query\/db"><\/a>$/;"	a
//apple_ref/doc/functionparam/modify_query/modify_query/schema	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/modify_query\/modify_query\/schema"><\/a>$/;"	a
//apple_ref/doc/functionparam/modify_query/modify_query/tableName	html/modify_query_h/Classes/modify_query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/modify_query\/modify_query\/tableName"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_binding/bind_params/stmt	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_binding\/bind_params\/stmt"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_binding/bind_result/stmt	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_binding\/bind_result\/stmt"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_binding/get/index	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_binding\/get\/index"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_binding/mysql_binding/fields	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_binding\/mysql_binding\/fields"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_binding/mysql_binding/size	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_binding\/mysql_binding\/size"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_binding/mysql_binding/value	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_binding\/mysql_binding\/value"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_binding/sql_type/index	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_binding\/sql_type\/index"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_binding/to_value/index	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_binding\/to_value\/index"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_cached_column/mysql_cached_column/bindings	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_cached_column\/mysql_cached_column\/bindings"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_cached_column/mysql_cached_column/index	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_cached_column\/mysql_cached_column\/index"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_cached_column/mysql_cached_column/name	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_cached_column\/mysql_cached_column\/name"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_cached_column/mysql_cached_column/position	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_cached_column\/mysql_cached_column\/position"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_cached_column/mysql_cached_column/res	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_cached_column\/mysql_cached_column\/res"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_cached_column/mysql_cached_column/value	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_cached_column\/mysql_cached_column\/value"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_column/mysql_column/index	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_column\/mysql_column\/index"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_column/mysql_column/res	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_column\/mysql_column\/res"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_column/mysql_column/value	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_column\/mysql_column\/value"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_db/mysql_db/connInfo	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_db\/mysql_db\/connInfo"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_db/query_schema/column	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_db\/query_schema\/column"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_db/query_schema/tablename	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_db\/query_schema\/tablename"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_resultset/mysql_resultset/db	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_resultset\/mysql_resultset\/db"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_resultset/mysql_resultset/res	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_resultset\/mysql_resultset\/res"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_row/column/name	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_row\/column\/name"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_row/column/position	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_row\/column\/position"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_row/column_name/position	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_row\/column_name\/position"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_row/mysql_row/db	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_row\/mysql_row\/db"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_row/mysql_row/res	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_row\/mysql_row\/res"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_row/mysql_row/row	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_row\/mysql_row\/row"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_column/mysql_stmt_column/bindings	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_column\/mysql_stmt_column\/bindings"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_column/mysql_stmt_column/name	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_column\/mysql_stmt_column\/name"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_column/mysql_stmt_column/position	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_column\/mysql_stmt_column\/position"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_resultset/mysql_stmt_resultset/db	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_resultset\/mysql_stmt_resultset\/db"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_resultset/mysql_stmt_resultset/stmt	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_resultset\/mysql_stmt_resultset\/stmt"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_row/column/nPosition	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_row\/column\/nPosition"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_row/column/name	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_row\/column\/name"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_row/column_name/position	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_row\/column_name\/position"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_row/mysql_stmt_row/db	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_row\/mysql_stmt_row\/db"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_row/mysql_stmt_row/fields	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_row\/mysql_stmt_row\/fields"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_row/mysql_stmt_row/metadata	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_row\/mysql_stmt_row\/metadata"><\/a>$/;"	a
//apple_ref/doc/functionparam/mysql_stmt_row/mysql_stmt_row/stmt	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/mysql_stmt_row\/mysql_stmt_row\/stmt"><\/a>$/;"	a
//apple_ref/doc/functionparam/operator_uri/url	html/sqldb_h/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/operator_uri\/url"><\/a>$/;"	a
//apple_ref/doc/functionparam/operator_vector/schema	html/base_record_h/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/operator_vector\/schema"><\/a>$/;"	a
//apple_ref/doc/functionparam/query/assert_binding_index/index	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/query\/assert_binding_index\/index"><\/a>$/;"	a
//apple_ref/doc/functionparam/query/operator%3D/other	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/query\/operator%3D\/other"><\/a>$/;"	a
//apple_ref/doc/functionparam/query/query/db	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/query\/query\/db"><\/a>$/;"	a
//apple_ref/doc/functionparam/query/query/other	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/query\/query\/other"><\/a>$/;"	a
//apple_ref/doc/functionparam/query/query/tableName	html/query_h/Classes/query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/query\/query\/tableName"><\/a>$/;"	a
//apple_ref/doc/functionparam/update_query/where/value	html/modify_query_h/Classes/update_query/index.html	/^<a name="\/\/apple_ref\/doc\/functionparam\/update_query\/where\/value"><\/a>$/;"	a
//apple_ref/doc/header/alloc.h	html/alloc_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/alloc.h"><\/a>$/;"	a
//apple_ref/doc/header/base_record.h	html/base_record_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/base_record.h"><\/a>$/;"	a
//apple_ref/doc/header/bindable.h	html/bindable_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/bindable.h"><\/a>$/;"	a
//apple_ref/doc/header/column.h	html/column_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/column.h"><\/a>$/;"	a
//apple_ref/doc/header/exception.h	html/exception_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/exception.h"><\/a>$/;"	a
//apple_ref/doc/header/join_clause.h	html/join_clause_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/join_clause.h"><\/a>$/;"	a
//apple_ref/doc/header/log.h	html/log_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/log.h"><\/a>$/;"	a
//apple_ref/doc/header/modify_query.h	html/modify_query_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/modify_query.h"><\/a>$/;"	a
//apple_ref/doc/header/mysql_binding.h	html/mysql_binding_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/mysql_binding.h"><\/a>$/;"	a
//apple_ref/doc/header/mysql_column.h	html/mysql_column_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/mysql_column.h"><\/a>$/;"	a
//apple_ref/doc/header/mysql_db.h	html/mysql_db_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/mysql_db.h"><\/a>$/;"	a
//apple_ref/doc/header/mysql_resultset.h	html/mysql_resultset_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/mysql_resultset.h"><\/a>$/;"	a
//apple_ref/doc/header/mysql_row.h	html/mysql_row_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/mysql_row.h"><\/a>$/;"	a
//apple_ref/doc/header/mysql_statement.h	html/mysql_statement_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/mysql_statement.h"><\/a>$/;"	a
//apple_ref/doc/header/postgres_binding.h	html/postgres_binding_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/postgres_binding.h"><\/a>$/;"	a
//apple_ref/doc/header/postgres_column.h	html/postgres_column_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/postgres_column.h"><\/a>$/;"	a
//apple_ref/doc/header/postgres_db.h	html/postgres_db_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/postgres_db.h"><\/a>$/;"	a
//apple_ref/doc/header/postgres_resultset.h	html/postgres_resultset_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/postgres_resultset.h"><\/a>$/;"	a
//apple_ref/doc/header/postgres_row.h	html/postgres_row_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/postgres_row.h"><\/a>$/;"	a
//apple_ref/doc/header/postgres_statement.h	html/postgres_statement_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/postgres_statement.h"><\/a>$/;"	a
//apple_ref/doc/header/query.h	html/query_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/query.h"><\/a>$/;"	a
//apple_ref/doc/header/resultset.h	html/resultset_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/resultset.h"><\/a>$/;"	a
//apple_ref/doc/header/row.h	html/row_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/row.h"><\/a>$/;"	a
//apple_ref/doc/header/schema.h	html/schema_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/schema.h"><\/a>$/;"	a
//apple_ref/doc/header/schema_factory.h	html/schema_factory_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/schema_factory.h"><\/a>$/;"	a
//apple_ref/doc/header/select_query.h	html/select_query_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/select_query.h"><\/a>$/;"	a
//apple_ref/doc/header/sql_value.h	html/sql_value_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/sql_value.h"><\/a>$/;"	a
//apple_ref/doc/header/sqldb.h	html/sqldb_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/sqldb.h"><\/a>$/;"	a
//apple_ref/doc/header/sqlite3_column.h	html/sqlite3_column_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/sqlite3_column.h"><\/a>$/;"	a
//apple_ref/doc/header/sqlite3_db.h	html/sqlite3_db_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/sqlite3_db.h"><\/a>$/;"	a
//apple_ref/doc/header/sqlite3_resultset.h	html/sqlite3_resultset_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/sqlite3_resultset.h"><\/a>$/;"	a
//apple_ref/doc/header/sqlite3_row.h	html/sqlite3_row_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/sqlite3_row.h"><\/a>$/;"	a
//apple_ref/doc/header/sqlite3_statement.h	html/sqlite3_statement_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/sqlite3_statement.h"><\/a>$/;"	a
//apple_ref/doc/header/statement.h	html/statement_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/statement.h"><\/a>$/;"	a
//apple_ref/doc/header/where_clause.h	html/where_clause_h/index.html	/^<a name="\/\/apple_ref\/doc\/header\/where_clause.h"><\/a>$/;"	a
1	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="1"><span class="lineNum">       1 <\/span>            : #include &quot;binary.h&quot;<\/a>$/;"	a
1	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1"><span class="lineNum">       1 <\/span>            : #ifndef ARG3_VARIANT_H_<\/a>$/;"	a
1	libs/variant/coverage/src/variant.h.gcov.html	/^<a name="1"><span class="lineNum">       1 <\/span>            : <\/a>$/;"	a
1002	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1002"><span class="lineNum">    1002 <\/span>            :     }<\/a>$/;"	a
1007	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1007"><span class="lineNum">    1007 <\/span>            :     }<\/a>$/;"	a
101	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="101"><span class="lineNum">     101 <\/span>            :     }<\/a>$/;"	a
101	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="101"><span class="lineNum">     101 <\/span><span class="lineCov">          6 :     }<\/span><\/a>$/;"	a
1012	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1012"><span class="lineNum">    1012 <\/span>            :     }<\/a>$/;"	a
1017	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1017"><span class="lineNum">    1017 <\/span>            :     }<\/a>$/;"	a
1022	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1022"><span class="lineNum">    1022 <\/span>            :     }<\/a>$/;"	a
1027	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1027"><span class="lineNum">    1027 <\/span>            :     }<\/a>$/;"	a
1032	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1032"><span class="lineNum">    1032 <\/span>            :     }<\/a>$/;"	a
1037	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1037"><span class="lineNum">    1037 <\/span>            :     }<\/a>$/;"	a
1042	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1042"><span class="lineNum">    1042 <\/span>            :     }<\/a>$/;"	a
1047	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1047"><span class="lineNum">    1047 <\/span>            :     }<\/a>$/;"	a
1052	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1052"><span class="lineNum">    1052 <\/span>            :     }<\/a>$/;"	a
1057	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1057"><span class="lineNum">    1057 <\/span>            :     }<\/a>$/;"	a
106	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="106"><span class="lineNum">     106 <\/span>            :     }<\/a>$/;"	a
106	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="106"><span class="lineNum">     106 <\/span>            : <\/a>$/;"	a
1062	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1062"><span class="lineNum">    1062 <\/span>            :     }<\/a>$/;"	a
1067	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1067"><span class="lineNum">    1067 <\/span>            :     }<\/a>$/;"	a
1072	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1072"><span class="lineNum">    1072 <\/span>            :     }<\/a>$/;"	a
1077	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1077"><span class="lineNum">    1077 <\/span>            :     }<\/a>$/;"	a
1082	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1082"><span class="lineNum">    1082 <\/span>            :     }<\/a>$/;"	a
1087	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1087"><span class="lineNum">    1087 <\/span>            :     }<\/a>$/;"	a
1092	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1092"><span class="lineNum">    1092 <\/span>            :     }<\/a>$/;"	a
1100	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="1100"><span class="lineNum">    1100 <\/span>            : namespace std<\/a>$/;"	a
111	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="111"><span class="lineNum">     111 <\/span><span class="lineCov">         10 :     }<\/span><\/a>$/;"	a
116	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="116"><span class="lineNum">     116 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
117	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="117"><span class="lineNum">     117 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
12	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="12"><span class="lineNum">      12 <\/span>            :     const char *const variant::TYPE_NAMES[] = {&quot;nulltype&quot;, &quot;number&quot;, &quot;unumber&quot;, &quot;real&quot;, &quot;binary&quot;, &quot;string&quot;, &quot;wstring&quot;, &quot;char&quot;, &quot;wchar&quot;, &quot;bool&quot;};<\/a>$/;"	a
122	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="122"><span class="lineNum">     122 <\/span>            :     }<\/a>$/;"	a
122	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="122"><span class="lineNum">     122 <\/span>            :     }<\/a>$/;"	a
124	libs/variant/coverage/src/variant.h.gcov.html	/^<a name="124"><span class="lineNum">     124 <\/span>            : <\/a>$/;"	a
127	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="127"><span class="lineNum">     127 <\/span>            :     }<\/a>$/;"	a
128	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="128"><span class="lineNum">     128 <\/span>            :     }<\/a>$/;"	a
132	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="132"><span class="lineNum">     132 <\/span>            :     }<\/a>$/;"	a
133	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="133"><span class="lineNum">     133 <\/span><span class="lineCov">        254 :     }<\/span><\/a>$/;"	a
137	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="137"><span class="lineNum">     137 <\/span>            :     }<\/a>$/;"	a
14	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="14"><span class="lineNum">      14 <\/span>            : namespace arg3<\/a>$/;"	a
14	libs/variant/coverage/src/variant.h.gcov.html	/^<a name="14"><span class="lineNum">      14 <\/span>            : namespace arg3<\/a>$/;"	a
142	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="142"><span class="lineNum">     142 <\/span>            :     }<\/a>$/;"	a
147	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="147"><span class="lineNum">     147 <\/span>            :     }<\/a>$/;"	a
149	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="149"><span class="lineNum">     149 <\/span>            :         }<\/a>$/;"	a
154	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="154"><span class="lineNum">     154 <\/span>            :     }<\/a>$/;"	a
159	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="159"><span class="lineNum">     159 <\/span>            :     }<\/a>$/;"	a
16	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="16"><span class="lineNum">      16 <\/span><span class="lineCov">         18 :     }<\/span><\/a>$/;"	a
164	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="164"><span class="lineNum">     164 <\/span>            :     }<\/a>$/;"	a
169	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="169"><span class="lineNum">     169 <\/span>            :     }<\/a>$/;"	a
17	libs/variant/coverage/src/variant.h.gcov.html	/^<a name="17"><span class="lineNum">      17 <\/span>            :     {<\/a>$/;"	a
18	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="18"><span class="lineNum">      18 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
180	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="180"><span class="lineNum">     180 <\/span><span class="lineCov">          6 :         return *this;<\/span><\/a>$/;"	a
20	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="20"><span class="lineNum">      20 <\/span><span class="lineCov">         12 :     }<\/span><\/a>$/;"	a
20	libs/variant/coverage/src/variant.h.gcov.html	/^<a name="20"><span class="lineNum">      20 <\/span><span class="lineCov">         66 :         {<\/span><\/a>$/;"	a
212	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="212"><span class="lineNum">     212 <\/span>            :     }<\/a>$/;"	a
226	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="226"><span class="lineNum">     226 <\/span><span class="lineCov">          3 :     }<\/span><\/a>$/;"	a
23	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="23"><span class="lineNum">      23 <\/span><span class="lineCov">          3 :         copy_mem(p, sz, construct, copy);<\/span><\/a>$/;"	a
231	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="231"><span class="lineNum">     231 <\/span>            :     }<\/a>$/;"	a
237	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="237"><span class="lineNum">     237 <\/span>            : <\/a>$/;"	a
24	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="24"><span class="lineNum">      24 <\/span><span class="lineCov">          4 :     }<\/span><\/a>$/;"	a
242	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="242"><span class="lineNum">     242 <\/span>            :     }<\/a>$/;"	a
247	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="247"><span class="lineNum">     247 <\/span>            :     }<\/a>$/;"	a
252	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="252"><span class="lineNum">     252 <\/span>            :     }<\/a>$/;"	a
257	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="257"><span class="lineNum">     257 <\/span>            :     }<\/a>$/;"	a
262	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="262"><span class="lineNum">     262 <\/span>            :     }<\/a>$/;"	a
266	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="266"><span class="lineNum">     266 <\/span><span class="lineCov">          1 :         return to_ulong();<\/span><\/a>$/;"	a
271	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="271"><span class="lineNum">     271 <\/span>            :     }<\/a>$/;"	a
276	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="276"><span class="lineNum">     276 <\/span>            :     }<\/a>$/;"	a
28	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="28"><span class="lineNum">      28 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
28	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="28"><span class="lineNum">      28 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
281	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="281"><span class="lineNum">     281 <\/span>            :     }<\/a>$/;"	a
286	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="286"><span class="lineNum">     286 <\/span>            :     }<\/a>$/;"	a
291	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="291"><span class="lineNum">     291 <\/span>            :     }<\/a>$/;"	a
296	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="296"><span class="lineNum">     296 <\/span>            :     }<\/a>$/;"	a
301	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="301"><span class="lineNum">     301 <\/span>            :     }<\/a>$/;"	a
306	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="306"><span class="lineNum">     306 <\/span>            :     }<\/a>$/;"	a
311	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="311"><span class="lineNum">     311 <\/span>            :     }<\/a>$/;"	a
316	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="316"><span class="lineNum">     316 <\/span>            :     }<\/a>$/;"	a
32	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="32"><span class="lineNum">      32 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
321	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="321"><span class="lineNum">     321 <\/span>            :     }<\/a>$/;"	a
326	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="326"><span class="lineNum">     326 <\/span>            :     }<\/a>$/;"	a
331	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="331"><span class="lineNum">     331 <\/span>            :     }<\/a>$/;"	a
336	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="336"><span class="lineNum">     336 <\/span>            :     }<\/a>$/;"	a
341	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="341"><span class="lineNum">     341 <\/span>            :     }<\/a>$/;"	a
346	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="346"><span class="lineNum">     346 <\/span>            :     }<\/a>$/;"	a
351	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="351"><span class="lineNum">     351 <\/span>            :     }<\/a>$/;"	a
356	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="356"><span class="lineNum">     356 <\/span>            :     }<\/a>$/;"	a
36	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="36"><span class="lineNum">      36 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
361	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="361"><span class="lineNum">     361 <\/span>            :     }<\/a>$/;"	a
366	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="366"><span class="lineNum">     366 <\/span>            :     }<\/a>$/;"	a
37	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="37"><span class="lineNum">      37 <\/span><span class="lineCov">          1 :         p.cmp_ = NULL;<\/span><\/a>$/;"	a
371	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="371"><span class="lineNum">     371 <\/span>            :     }<\/a>$/;"	a
376	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="376"><span class="lineNum">     376 <\/span>            :     }<\/a>$/;"	a
381	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="381"><span class="lineNum">     381 <\/span>            :     }<\/a>$/;"	a
386	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="386"><span class="lineNum">     386 <\/span>            :     }<\/a>$/;"	a
391	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="391"><span class="lineNum">     391 <\/span>            :     }<\/a>$/;"	a
40	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="40"><span class="lineNum">      40 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
401	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="401"><span class="lineNum">     401 <\/span><span class="lineCov">          1 :     }<\/span><\/a>$/;"	a
411	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="411"><span class="lineNum">     411 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
415	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="415"><span class="lineNum">     415 <\/span><span class="lineNoCov">          0 :         return !operator==(other);<\/span><\/a>$/;"	a
420	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="420"><span class="lineNum">     420 <\/span>            :     }<\/a>$/;"	a
425	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="425"><span class="lineNum">     425 <\/span>            :     }<\/a>$/;"	a
43	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="43"><span class="lineNum">      43 <\/span><span class="lineCov">          4 :         }<\/span><\/a>$/;"	a
430	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="430"><span class="lineNum">     430 <\/span>            :     }<\/a>$/;"	a
435	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="435"><span class="lineNum">     435 <\/span>            :     }<\/a>$/;"	a
44	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="44"><span class="lineNum">      44 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
440	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="440"><span class="lineNum">     440 <\/span>            :     }<\/a>$/;"	a
445	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="445"><span class="lineNum">     445 <\/span>            :     }<\/a>$/;"	a
450	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="450"><span class="lineNum">     450 <\/span>            :     }<\/a>$/;"	a
455	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="455"><span class="lineNum">     455 <\/span>            :     }<\/a>$/;"	a
460	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="460"><span class="lineNum">     460 <\/span>            :     }<\/a>$/;"	a
465	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="465"><span class="lineNum">     465 <\/span>            :     }<\/a>$/;"	a
470	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="470"><span class="lineNum">     470 <\/span>            :     }<\/a>$/;"	a
475	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="475"><span class="lineNum">     475 <\/span>            :     }<\/a>$/;"	a
48	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="48"><span class="lineNum">      48 <\/span><span class="lineCov">         18 :     }<\/span><\/a>$/;"	a
480	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="480"><span class="lineNum">     480 <\/span>            :     }<\/a>$/;"	a
485	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="485"><span class="lineNum">     485 <\/span>            :     }<\/a>$/;"	a
490	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="490"><span class="lineNum">     490 <\/span>            :     }<\/a>$/;"	a
495	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="495"><span class="lineNum">     495 <\/span>            :     }<\/a>$/;"	a
500	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="500"><span class="lineNum">     500 <\/span>            :     }<\/a>$/;"	a
52	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="52"><span class="lineNum">      52 <\/span><span class="lineCov">          6 :     }<\/span><\/a>$/;"	a
527	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="527"><span class="lineNum">     527 <\/span><span class="lineCov">         13 :     }<\/span><\/a>$/;"	a
532	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="532"><span class="lineNum">     532 <\/span>            :     }<\/a>$/;"	a
542	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="542"><span class="lineNum">     542 <\/span><span class="lineCov">         54 :     }<\/span><\/a>$/;"	a
55	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="55"><span class="lineNum">      55 <\/span>            :     }<\/a>$/;"	a
552	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="552"><span class="lineNum">     552 <\/span><span class="lineCov">         23 :     }<\/span><\/a>$/;"	a
56	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="56"><span class="lineNum">      56 <\/span><span class="lineCov">          4 :     }<\/span><\/a>$/;"	a
567	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="567"><span class="lineNum">     567 <\/span><span class="lineCov">        106 :     }<\/span><\/a>$/;"	a
577	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="577"><span class="lineNum">     577 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
58	libs/variant/coverage/src/variant.h.gcov.html	/^<a name="58"><span class="lineNum">      58 <\/span>            : <\/a>$/;"	a
587	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="587"><span class="lineNum">     587 <\/span><span class="lineCov">         54 :     }<\/span><\/a>$/;"	a
599	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="599"><span class="lineNum">     599 <\/span><span class="lineCov">          4 :     }<\/span><\/a>$/;"	a
60	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="60"><span class="lineNum">      60 <\/span><span class="lineCov">          4 :     }<\/span><\/a>$/;"	a
613	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="613"><span class="lineNum">     613 <\/span><span class="lineCov">          1 :     }<\/span><\/a>$/;"	a
622	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="622"><span class="lineNum">     622 <\/span>            :         }<\/a>$/;"	a
630	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="630"><span class="lineNum">     630 <\/span><span class="lineCov">          1 :         }<\/span><\/a>$/;"	a
64	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="64"><span class="lineNum">      64 <\/span><span class="lineCov">          6 :     }<\/span><\/a>$/;"	a
657	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="657"><span class="lineNum">     657 <\/span>            :         }<\/a>$/;"	a
666	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="666"><span class="lineNum">     666 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
68	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="68"><span class="lineNum">      68 <\/span><span class="lineCov">         10 :     }<\/span><\/a>$/;"	a
684	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="684"><span class="lineNum">     684 <\/span><span class="lineCov">          3 :     }<\/span><\/a>$/;"	a
692	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="692"><span class="lineNum">     692 <\/span><span class="lineCov">          1 :         }<\/span><\/a>$/;"	a
7	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="7"><span class="lineNum">       7 <\/span>            : namespace std<\/a>$/;"	a
709	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="709"><span class="lineNum">     709 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
718	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="718"><span class="lineNum">     718 <\/span><span class="lineCov">          2 :     }<\/span><\/a>$/;"	a
72	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="72"><span class="lineNum">      72 <\/span>            :     }<\/a>$/;"	a
72	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="72"><span class="lineNum">      72 <\/span><span class="lineCov">          4 :     }<\/span><\/a>$/;"	a
741	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="741"><span class="lineNum">     741 <\/span><span class="lineCov">         13 :     }<\/span><\/a>$/;"	a
746	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="746"><span class="lineNum">     746 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
755	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="755"><span class="lineNum">     755 <\/span><span class="lineCov">         11 :     }<\/span><\/a>$/;"	a
76	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="76"><span class="lineNum">      76 <\/span><span class="lineCov">          4 :     }<\/span><\/a>$/;"	a
764	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="764"><span class="lineNum">     764 <\/span><span class="lineCov">          8 :     }<\/span><\/a>$/;"	a
769	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="769"><span class="lineNum">     769 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
778	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="778"><span class="lineNum">     778 <\/span><span class="lineCov">          5 :     }<\/span><\/a>$/;"	a
783	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="783"><span class="lineNum">     783 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
792	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="792"><span class="lineNum">     792 <\/span><span class="lineCov">          6 :     }<\/span><\/a>$/;"	a
797	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="797"><span class="lineNum">     797 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
80	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="80"><span class="lineNum">      80 <\/span><span class="lineCov">          6 :     }<\/span><\/a>$/;"	a
806	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="806"><span class="lineNum">     806 <\/span><span class="lineCov">          8 :     }<\/span><\/a>$/;"	a
811	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="811"><span class="lineNum">     811 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
819	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="819"><span class="lineNum">     819 <\/span><span class="lineCov">          3 :         }<\/span><\/a>$/;"	a
824	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="824"><span class="lineNum">     824 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
833	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="833"><span class="lineNum">     833 <\/span><span class="lineCov">          4 :     }<\/span><\/a>$/;"	a
838	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="838"><span class="lineNum">     838 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
847	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="847"><span class="lineNum">     847 <\/span><span class="lineCov">          6 :     }<\/span><\/a>$/;"	a
85	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="85"><span class="lineNum">      85 <\/span><span class="lineCov">          6 :     }<\/span><\/a>$/;"	a
851	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="851"><span class="lineNum">     851 <\/span><span class="lineCov">         12 :         return convert&lt;long double, long double&gt;(stold, stold);<\/span><\/a>$/;"	a
86	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="86"><span class="lineNum">      86 <\/span><span class="lineCov">          4 :     }<\/span><\/a>$/;"	a
876	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="876"><span class="lineNum">     876 <\/span><span class="lineCov">         12 :     }<\/span><\/a>$/;"	a
885	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="885"><span class="lineNum">     885 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
89	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="89"><span class="lineNum">      89 <\/span><span class="lineCov">         80 :     }<\/span><\/a>$/;"	a
890	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="890"><span class="lineNum">     890 <\/span><span class="lineNoCov">          0 :     }<\/span><\/a>$/;"	a
898	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="898"><span class="lineNum">     898 <\/span><span class="lineCov">          1 :         }<\/span><\/a>$/;"	a
91	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="91"><span class="lineNum">      91 <\/span>            :     }<\/a>$/;"	a
913	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="913"><span class="lineNum">     913 <\/span><span class="lineNoCov">          0 :         throw illegal_conversion(&quot;no conversion found&quot;);<\/span><\/a>$/;"	a
921	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="921"><span class="lineNum">     921 <\/span><span class="lineNoCov">          0 :         }<\/span><\/a>$/;"	a
93	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="93"><span class="lineNum">      93 <\/span><span class="lineCov">         40 :     }<\/span><\/a>$/;"	a
939	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="939"><span class="lineNum">     939 <\/span>            :     \/\/ for streams<\/a>$/;"	a
947	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="947"><span class="lineNum">     947 <\/span>            :     \/\/ utility operators<\/a>$/;"	a
952	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="952"><span class="lineNum">     952 <\/span>            :     }<\/a>$/;"	a
957	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="957"><span class="lineNum">     957 <\/span>            :     }<\/a>$/;"	a
96	libs/variant/coverage/src/binary.cpp.gcov.html	/^<a name="96"><span class="lineNum">      96 <\/span>            :     }<\/a>$/;"	a
962	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="962"><span class="lineNum">     962 <\/span>            :     }<\/a>$/;"	a
967	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="967"><span class="lineNum">     967 <\/span>            :     }<\/a>$/;"	a
97	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="97"><span class="lineNum">      97 <\/span><span class="lineCov">          4 :     }<\/span><\/a>$/;"	a
972	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="972"><span class="lineNum">     972 <\/span>            :     }<\/a>$/;"	a
977	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="977"><span class="lineNum">     977 <\/span>            :     }<\/a>$/;"	a
98	libs/variant/coverage/src/variant.h.gcov.html	/^<a name="98"><span class="lineNum">      98 <\/span>            : <\/a>$/;"	a
982	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="982"><span class="lineNum">     982 <\/span>            :     }<\/a>$/;"	a
987	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="987"><span class="lineNum">     987 <\/span>            :     }<\/a>$/;"	a
992	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="992"><span class="lineNum">     992 <\/span>            :     }<\/a>$/;"	a
997	libs/variant/coverage/src/variant.cpp.gcov.html	/^<a name="997"><span class="lineNum">     997 <\/span>            :     }<\/a>$/;"	a
ARCHITECTURE_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARG3_BINARY_H_	libs/variant/src/binary.h	/^#define ARG3_BINARY_H_$/;"	d
ARG3_DB_ALLOC_H	src/alloc.h	/^#define ARG3_DB_ALLOC_H$/;"	d
ARG3_DB_BASE_RECORD_H	src/record.h	/^#define ARG3_DB_BASE_RECORD_H$/;"	d
ARG3_DB_BINDABLE_H	src/bindable.h	/^#define ARG3_DB_BINDABLE_H$/;"	d
ARG3_DB_COLUMN_VALUE_H	src/column.h	/^#define ARG3_DB_COLUMN_VALUE_H$/;"	d
ARG3_DB_DELETE_QUERY_H	src/delete_query.h	/^#define ARG3_DB_DELETE_QUERY_H$/;"	d
ARG3_DB_EXCEPTION_H	src/exception.h	/^#define ARG3_DB_EXCEPTION_H$/;"	d
ARG3_DB_INSERT_QUERY_H	src/insert_query.h	/^#define ARG3_DB_INSERT_QUERY_H$/;"	d
ARG3_DB_JOIN_CLAUSE_H	src/join_clause.h	/^#define ARG3_DB_JOIN_CLAUSE_H$/;"	d
ARG3_DB_LOG_H	src/log.h	/^#define ARG3_DB_LOG_H$/;"	d
ARG3_DB_MODIFY_QUERY_H	src/modify_query.h	/^#define ARG3_DB_MODIFY_QUERY_H$/;"	d
ARG3_DB_MYSQL_BINDING_H	src/mysql/binding.h	/^#define ARG3_DB_MYSQL_BINDING_H$/;"	d
ARG3_DB_MYSQL_COLUMN_H	src/mysql/column.h	/^#define ARG3_DB_MYSQL_COLUMN_H$/;"	d
ARG3_DB_MYSQL_RESULTSET_H	src/mysql/resultset.h	/^#define ARG3_DB_MYSQL_RESULTSET_H$/;"	d
ARG3_DB_MYSQL_ROW_H	src/mysql/row.h	/^#define ARG3_DB_MYSQL_ROW_H$/;"	d
ARG3_DB_MYSQL_SQLDB_H	src/mysql/db.h	/^#define ARG3_DB_MYSQL_SQLDB_H$/;"	d
ARG3_DB_MYSQL_STATEMENT_H	src/mysql/statement.h	/^#define ARG3_DB_MYSQL_STATEMENT_H$/;"	d
ARG3_DB_POSTGRES_BINDING_H	src/postgres/binding.h	/^#define ARG3_DB_POSTGRES_BINDING_H$/;"	d
ARG3_DB_POSTGRES_COLUMN_H	src/postgres/column.h	/^#define ARG3_DB_POSTGRES_COLUMN_H$/;"	d
ARG3_DB_POSTGRES_RESULTSET_H	src/postgres/resultset.h	/^#define ARG3_DB_POSTGRES_RESULTSET_H$/;"	d
ARG3_DB_POSTGRES_ROW_H	src/postgres/row.h	/^#define ARG3_DB_POSTGRES_ROW_H$/;"	d
ARG3_DB_POSTGRES_STATEMENT_H	src/postgres/statement.h	/^#define ARG3_DB_POSTGRES_STATEMENT_H$/;"	d
ARG3_DB_QUERY_H	src/query.h	/^#define ARG3_DB_QUERY_H$/;"	d
ARG3_DB_RESULTSET_H	src/resultset.h	/^#define ARG3_DB_RESULTSET_H$/;"	d
ARG3_DB_ROW_H	src/row.h	/^#define ARG3_DB_ROW_H$/;"	d
ARG3_DB_SCHEMA_FACTORY_H	src/schema_factory.h	/^#define ARG3_DB_SCHEMA_FACTORY_H$/;"	d
ARG3_DB_SCHEMA_H	src/schema.h	/^#define ARG3_DB_SCHEMA_H$/;"	d
ARG3_DB_SELECT_QUERY_H	src/select_query.h	/^#define ARG3_DB_SELECT_QUERY_H$/;"	d
ARG3_DB_SELECT_QUERY_H_multideclaration_block	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/index.html	/^<h1><a name="ARG3_DB_SELECT_QUERY_H_multideclaration_block">ARG3_DB_SELECT_QUERY_H_multideclaration_block<\/a><\/h1>$/;"	a
ARG3_DB_SQLDB_H	src/sqldb.h	/^#define ARG3_DB_SQLDB_H$/;"	d
ARG3_DB_SQLDB_H_multideclaration_block	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^<h1><a name="ARG3_DB_SQLDB_H_multideclaration_block">ARG3_DB_SQLDB_H_multideclaration_block<\/a><\/h1>$/;"	a
ARG3_DB_SQLITE_COLUMN_H	src/sqlite/column.h	/^#define ARG3_DB_SQLITE_COLUMN_H$/;"	d
ARG3_DB_SQLITE_RESULTSET_H	src/sqlite/resultset.h	/^#define ARG3_DB_SQLITE_RESULTSET_H$/;"	d
ARG3_DB_SQLITE_ROW_H	src/sqlite/row.h	/^#define ARG3_DB_SQLITE_ROW_H$/;"	d
ARG3_DB_SQLITE_SQLDB_H	src/sqlite/db.h	/^#define ARG3_DB_SQLITE_SQLDB_H$/;"	d
ARG3_DB_SQLITE_STATEMENT_H	src/sqlite/statement.h	/^#define ARG3_DB_SQLITE_STATEMENT_H$/;"	d
ARG3_DB_SQL_VALUE_H	src/sql_value.h	/^#define ARG3_DB_SQL_VALUE_H$/;"	d
ARG3_DB_STATEMENT_H	src/statement.h	/^#define ARG3_DB_STATEMENT_H$/;"	d
ARG3_DB_UPDATE_QUERY_H	src/update_query.h	/^#define ARG3_DB_UPDATE_QUERY_H$/;"	d
ARG3_DB_WHERE_CLAUSE_H	src/where_clause.h	/^#define ARG3_DB_WHERE_CLAUSE_H$/;"	d
ARG3_DECLARE_EXCEPTION	src/exception.h	/^#define ARG3_DECLARE_EXCEPTION(/;"	d
ARG3_IMPLEMENT_EXCEPTION	src/exception.h	/^#define ARG3_IMPLEMENT_EXCEPTION(/;"	d
ARG3_TEST_DB_H	tests/db.test.h	/^#define ARG3_TEST_DB_H$/;"	d
ARG3_VARIANT_H_	libs/variant/src/variant.h	/^#define ARG3_VARIANT_H_$/;"	d
ARG_IGNORE	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  ARG_IGNORE,$/;"	e	enum:option::ArgStatus
ARG_IGNORE	tests/vendor/bandit/bandit/external/optionparser.h	/^  ARG_IGNORE,$/;"	e	enum:option::ArgStatus
ARG_ILLEGAL	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  ARG_ILLEGAL$/;"	e	enum:option::ArgStatus
ARG_ILLEGAL	tests/vendor/bandit/bandit/external/optionparser.h	/^  ARG_ILLEGAL$/;"	e	enum:option::ArgStatus
ARG_NONE	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  ARG_NONE,$/;"	e	enum:option::ArgStatus
ARG_NONE	tests/vendor/bandit/bandit/external/optionparser.h	/^  ARG_NONE,$/;"	e	enum:option::ArgStatus
ARG_OK	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  ARG_OK,$/;"	e	enum:option::ArgStatus
ARG_OK	tests/vendor/bandit/bandit/external/optionparser.h	/^  ARG_OK,$/;"	e	enum:option::ArgStatus
Action	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^struct Parser::Action$/;"	s	class:option::Parser
Action	tests/vendor/bandit/bandit/external/optionparser.h	/^struct Parser::Action$/;"	s	class:option::Parser
Additional Inherited Members	html/latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	html/latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	html/latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	html/latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1postgres__cached__row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1postgres__row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1sqlite3__cached__row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1sqlite3__db.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1sqlite3__row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1statement.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
Additional Inherited Members	latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection*{Additional Inherited Members}$/;"	b
All	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, AllOperatorNode>::t> All()$/;"	f	struct:snowhouse::ExpressionBuilder
All	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, AllOperatorNode>::t> All()$/;"	f	struct:snowhouse::ExpressionBuilder
AllOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^   struct AllOperator : public CollectionOperator$/;"	s	namespace:snowhouse
AllOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^   struct AllOperator : public CollectionOperator$/;"	s	namespace:snowhouse
AllOperatorNode	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<AllOperator, Nil> AllOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
AllOperatorNode	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<AllOperator, Nil> AllOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
And	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, AndOperatorNode>::t> And()$/;"	f	struct:snowhouse::ExpressionBuilder
And	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, AndOperatorNode>::t> And()$/;"	f	struct:snowhouse::ExpressionBuilder
AndExpression	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    AndExpression(const LeftExpression& left, const RightExpression& right)$/;"	f	struct:snowhouse::AndExpression
AndExpression	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^  struct AndExpression : Expression< AndExpression<LeftExpression, RightExpression> >$/;"	s	namespace:snowhouse
AndExpression	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    AndExpression(const LeftExpression& left, const RightExpression& right)$/;"	f	struct:snowhouse::AndExpression
AndExpression	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^  struct AndExpression : Expression< AndExpression<LeftExpression, RightExpression> >$/;"	s	namespace:snowhouse
AndOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^  struct AndOperator : public ConstraintOperator$/;"	s	namespace:snowhouse
AndOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^  struct AndOperator : public ConstraintOperator$/;"	s	namespace:snowhouse
AndOperatorNode	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<AndOperator, Nil> AndOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
AndOperatorNode	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<AndOperator, Nil> AndOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
Arg	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^struct Arg$/;"	s	namespace:option
Arg	tests/vendor/bandit/bandit/external/optionparser.h	/^struct Arg$/;"	s	namespace:option
ArgStatus	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^enum ArgStatus$/;"	g	namespace:option
ArgStatus	tests/vendor/bandit/bandit/external/optionparser.h	/^enum ArgStatus$/;"	g	namespace:option
Assert	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^   typedef ConfigurableAssert<DefaultFailureHandler> Assert;$/;"	t	namespace:snowhouse
Assert	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^   class Assert$/;"	c	namespace:snowhouse
AssertTestFails	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/tests.h	/^#define AssertTestFails(/;"	d
AssertTestFails	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/tests.h	/^#define AssertTestFails(/;"	d
AssertThat	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertmacro.h	/^#define AssertThat(/;"	d
AssertThat	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertmacro.h	/^#define AssertThat(/;"	d
AssertThrows	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^#define AssertThrows(/;"	d
AssertThrows	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^#define AssertThrows(/;"	d
AssertionException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      AssertionException(const std::string& message)$/;"	f	class:snowhouse::AssertionException
AssertionException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      AssertionException(const std::string& message, const std::string& fileName, unsigned int line)$/;"	f	class:snowhouse::AssertionException
AssertionException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^  class AssertionException : public std::exception$/;"	c	namespace:snowhouse
AssertionException	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      AssertionException(const std::string& message)$/;"	f	class:snowhouse::AssertionException
AssertionException	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      AssertionException(const std::string& message, const std::string& fileName, unsigned int line)$/;"	f	class:snowhouse::AssertionException
AssertionException	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^  class AssertionException : public std::exception$/;"	c	namespace:snowhouse
AtLeast	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, AtLeastOperatorNode>::t> AtLeast(unsigned int expected)$/;"	f	struct:snowhouse::ExpressionBuilder
AtLeast	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, AtLeastOperatorNode>::t> AtLeast(unsigned int expected)$/;"	f	struct:snowhouse::ExpressionBuilder
AtLeastOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^      AtLeastOperator(unsigned int expected) : m_expected(expected) {}$/;"	f	struct:snowhouse::AtLeastOperator
AtLeastOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^   struct AtLeastOperator : public CollectionOperator$/;"	s	namespace:snowhouse
AtLeastOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^      AtLeastOperator(unsigned int expected) : m_expected(expected) {}$/;"	f	struct:snowhouse::AtLeastOperator
AtLeastOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^   struct AtLeastOperator : public CollectionOperator$/;"	s	namespace:snowhouse
AtLeastOperatorNode	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<AtLeastOperator, Nil> AtLeastOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
AtLeastOperatorNode	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<AtLeastOperator, Nil> AtLeastOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
AtMost	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, AtMostOperatorNode>::t> AtMost(unsigned int expected)$/;"	f	struct:snowhouse::ExpressionBuilder
AtMost	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, AtMostOperatorNode>::t> AtMost(unsigned int expected)$/;"	f	struct:snowhouse::ExpressionBuilder
AtMostOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^      AtMostOperator(unsigned int expected) : m_expected(expected) {}$/;"	f	struct:snowhouse::AtMostOperator
AtMostOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^   struct AtMostOperator : public CollectionOperator$/;"	s	namespace:snowhouse
AtMostOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^      AtMostOperator(unsigned int expected) : m_expected(expected) {}$/;"	f	struct:snowhouse::AtMostOperator
AtMostOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^   struct AtMostOperator : public CollectionOperator$/;"	s	namespace:snowhouse
AtMostOperatorNode	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<AtMostOperator, Nil> AtMostOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
AtMostOperatorNode	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<AtMostOperator, Nil> AtMostOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
BANDIT_ADAPTERS_H	libs/variant/tests/vendor/bandit/bandit/adapters/adapters.h	/^#define BANDIT_ADAPTERS_H$/;"	d
BANDIT_ADAPTERS_H	tests/vendor/bandit/bandit/adapters/adapters.h	/^#define BANDIT_ADAPTERS_H$/;"	d
BANDIT_ADAPTERS_SNOWHOUSE_H	libs/variant/tests/vendor/bandit/bandit/adapters/snowhouse.h	/^#define BANDIT_ADAPTERS_SNOWHOUSE_H$/;"	d
BANDIT_ADAPTERS_SNOWHOUSE_H	tests/vendor/bandit/bandit/adapters/snowhouse.h	/^#define BANDIT_ADAPTERS_SNOWHOUSE_H$/;"	d
BANDIT_ADAPTER_H	libs/variant/tests/vendor/bandit/bandit/adapters/adapter.h	/^#define BANDIT_ADAPTER_H$/;"	d
BANDIT_ADAPTER_H	tests/vendor/bandit/bandit/adapters/adapter.h	/^#define BANDIT_ADAPTER_H$/;"	d
BANDIT_ALWAYS_INCLUDE_POLICY_H	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^#define BANDIT_ALWAYS_INCLUDE_POLICY_H$/;"	d
BANDIT_ALWAYS_INCLUDE_POLICY_H	tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^#define BANDIT_ALWAYS_INCLUDE_POLICY_H$/;"	d
BANDIT_ALWAYS_RUN_POLICY_H	libs/variant/tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^#define BANDIT_ALWAYS_RUN_POLICY_H$/;"	d
BANDIT_ALWAYS_RUN_POLICY_H	tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^#define BANDIT_ALWAYS_RUN_POLICY_H$/;"	d
BANDIT_ALWAYS_SKIP_POLICY_H	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^#define BANDIT_ALWAYS_SKIP_POLICY_H$/;"	d
BANDIT_ALWAYS_SKIP_POLICY_H	tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^#define BANDIT_ALWAYS_SKIP_POLICY_H$/;"	d
BANDIT_ASSERTION_EXCEPTION_H	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^#define BANDIT_ASSERTION_EXCEPTION_H$/;"	d
BANDIT_ASSERTION_EXCEPTION_H	tests/vendor/bandit/bandit/assertion_exception.h	/^#define BANDIT_ASSERTION_EXCEPTION_H$/;"	d
BANDIT_BANDIT_H	libs/variant/tests/vendor/bandit/bandit/bandit.h	/^#define BANDIT_BANDIT_H$/;"	d
BANDIT_BANDIT_H	tests/vendor/bandit/bandit/bandit.h	/^#define BANDIT_BANDIT_H$/;"	d
BANDIT_BANDIT_RUN_POLICY_H	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^#define BANDIT_BANDIT_RUN_POLICY_H$/;"	d
BANDIT_BANDIT_RUN_POLICY_H	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^#define BANDIT_BANDIT_RUN_POLICY_H$/;"	d
BANDIT_BECLOSETO_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^#define BANDIT_BECLOSETO_H$/;"	d
BANDIT_BECLOSETO_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^#define BANDIT_BECLOSETO_H$/;"	d
BANDIT_BEEMPTY_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^#define BANDIT_BEEMPTY_H$/;"	d
BANDIT_BEEMPTY_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^#define BANDIT_BEEMPTY_H$/;"	d
BANDIT_BEFALSY_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^#define BANDIT_BEFALSY_H$/;"	d
BANDIT_BEFALSY_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^#define BANDIT_BEFALSY_H$/;"	d
BANDIT_BEGREATERTHANOREQUAL_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^#define BANDIT_BEGREATERTHANOREQUAL_H$/;"	d
BANDIT_BEGREATERTHANOREQUAL_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^#define BANDIT_BEGREATERTHANOREQUAL_H$/;"	d
BANDIT_BEGREATERTHAN_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^#define BANDIT_BEGREATERTHAN_H$/;"	d
BANDIT_BEGREATERTHAN_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^#define BANDIT_BEGREATERTHAN_H$/;"	d
BANDIT_BELESSTHANOREQUAL_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^#define BANDIT_BELESSTHANOREQUAL_H$/;"	d
BANDIT_BELESSTHANOREQUAL_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^#define BANDIT_BELESSTHANOREQUAL_H$/;"	d
BANDIT_BELESSTHAN_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^#define BANDIT_BELESSTHAN_H$/;"	d
BANDIT_BELESSTHAN_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^#define BANDIT_BELESSTHAN_H$/;"	d
BANDIT_BENULL_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^#define BANDIT_BENULL_H$/;"	d
BANDIT_BENULL_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^#define BANDIT_BENULL_H$/;"	d
BANDIT_BETRUTHY_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^#define BANDIT_BETRUTHY_H$/;"	d
BANDIT_BETRUTHY_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^#define BANDIT_BETRUTHY_H$/;"	d
BANDIT_CONTAIN_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^#define BANDIT_CONTAIN_H$/;"	d
BANDIT_CONTAIN_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^#define BANDIT_CONTAIN_H$/;"	d
BANDIT_CONTEXT_H	libs/variant/tests/vendor/bandit/bandit/context.h	/^#define BANDIT_CONTEXT_H$/;"	d
BANDIT_CONTEXT_H	tests/vendor/bandit/bandit/context.h	/^#define BANDIT_CONTEXT_H$/;"	d
BANDIT_DEFAULT_FAILURE_FORMATTER_H	libs/variant/tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^#define BANDIT_DEFAULT_FAILURE_FORMATTER_H$/;"	d
BANDIT_DEFAULT_FAILURE_FORMATTER_H	tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^#define BANDIT_DEFAULT_FAILURE_FORMATTER_H$/;"	d
BANDIT_DOTS_REPORTER_H	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^#define BANDIT_DOTS_REPORTER_H$/;"	d
BANDIT_DOTS_REPORTER_H	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^#define BANDIT_DOTS_REPORTER_H$/;"	d
BANDIT_EQUAL_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^#define BANDIT_EQUAL_H$/;"	d
BANDIT_EQUAL_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^#define BANDIT_EQUAL_H$/;"	d
BANDIT_FAILURE_FORMATTERS	libs/variant/tests/vendor/bandit/bandit/failure_formatters/failure_formatters.h	/^#define BANDIT_FAILURE_FORMATTERS$/;"	d
BANDIT_FAILURE_FORMATTERS	tests/vendor/bandit/bandit/failure_formatters/failure_formatters.h	/^#define BANDIT_FAILURE_FORMATTERS$/;"	d
BANDIT_FAILURE_FORMATTER_H	libs/variant/tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^#define BANDIT_FAILURE_FORMATTER_H$/;"	d
BANDIT_FAILURE_FORMATTER_H	tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^#define BANDIT_FAILURE_FORMATTER_H$/;"	d
BANDIT_FAKE_CONTEXT_H	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^#define BANDIT_FAKE_CONTEXT_H$/;"	d
BANDIT_FAKE_CONTEXT_H	tests/vendor/bandit/specs/fakes/fake_context.h	/^#define BANDIT_FAKE_CONTEXT_H$/;"	d
BANDIT_GRAMMAR_H	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^#define BANDIT_GRAMMAR_H$/;"	d
BANDIT_GRAMMAR_H	tests/vendor/bandit/bandit/grammar.h	/^#define BANDIT_GRAMMAR_H$/;"	d
BANDIT_INFO_REPORTER_H	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^#define BANDIT_INFO_REPORTER_H$/;"	d
BANDIT_INFO_REPORTER_H	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^#define BANDIT_INFO_REPORTER_H$/;"	d
BANDIT_LISTENER_H	libs/variant/tests/vendor/bandit/bandit/listener.h	/^#define BANDIT_LISTENER_H$/;"	d
BANDIT_LISTENER_H	tests/vendor/bandit/bandit/listener.h	/^#define BANDIT_LISTENER_H$/;"	d
BANDIT_MATCHERS_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/matchers.h	/^#define BANDIT_MATCHERS_H$/;"	d
BANDIT_MATCHERS_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/matchers.h	/^#define BANDIT_MATCHERS_H$/;"	d
BANDIT_MATCHER_EXCEPTION_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^#define BANDIT_MATCHER_EXCEPTION_H$/;"	d
BANDIT_MATCHER_EXCEPTION_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^#define BANDIT_MATCHER_EXCEPTION_H$/;"	d
BANDIT_MATCHER_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^#define BANDIT_MATCHER_H$/;"	d
BANDIT_MATCHER_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^#define BANDIT_MATCHER_H$/;"	d
BANDIT_MATCHPROXY_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^#define BANDIT_MATCHPROXY_H$/;"	d
BANDIT_MATCHPROXY_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^#define BANDIT_MATCHPROXY_H$/;"	d
BANDIT_MUST_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^#define BANDIT_MUST_H$/;"	d
BANDIT_MUST_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^#define BANDIT_MUST_H$/;"	d
BANDIT_NAME_CONTAINS_SKIP_POLICY_H	libs/variant/tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^#define BANDIT_NAME_CONTAINS_SKIP_POLICY_H$/;"	d
BANDIT_NAME_CONTAINS_SKIP_POLICY_H	tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^#define BANDIT_NAME_CONTAINS_SKIP_POLICY_H$/;"	d
BANDIT_NEVER_RUN_POLICY_H	libs/variant/tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^#define BANDIT_NEVER_RUN_POLICY_H$/;"	d
BANDIT_NEVER_RUN_POLICY_H	tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^#define BANDIT_NEVER_RUN_POLICY_H$/;"	d
BANDIT_OPTIONS_H	libs/variant/tests/vendor/bandit/bandit/options.h	/^#define BANDIT_OPTIONS_H$/;"	d
BANDIT_OPTIONS_H	tests/vendor/bandit/bandit/options.h	/^#define BANDIT_OPTIONS_H$/;"	d
BANDIT_PROGRESS_REPORTER_H	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^#define BANDIT_PROGRESS_REPORTER_H$/;"	d
BANDIT_PROGRESS_REPORTER_H	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^#define BANDIT_PROGRESS_REPORTER_H$/;"	d
BANDIT_REGISTRAR_H	libs/variant/tests/vendor/bandit/bandit/registration/registrar.h	/^#define BANDIT_REGISTRAR_H$/;"	d
BANDIT_REGISTRAR_H	tests/vendor/bandit/bandit/registration/registrar.h	/^#define BANDIT_REGISTRAR_H$/;"	d
BANDIT_REGISTRATION_H	libs/variant/tests/vendor/bandit/bandit/registration/registration.h	/^#define BANDIT_REGISTRATION_H$/;"	d
BANDIT_REGISTRATION_H	tests/vendor/bandit/bandit/registration/registration.h	/^#define BANDIT_REGISTRATION_H$/;"	d
BANDIT_REPORTERS_COLORIZER_H	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^#define BANDIT_REPORTERS_COLORIZER_H$/;"	d
BANDIT_REPORTERS_COLORIZER_H	tests/vendor/bandit/bandit/reporters/colorizer.h	/^#define BANDIT_REPORTERS_COLORIZER_H$/;"	d
BANDIT_REPORTERS_H	libs/variant/tests/vendor/bandit/bandit/reporters/reporters.h	/^#define BANDIT_REPORTERS_H$/;"	d
BANDIT_REPORTERS_H	tests/vendor/bandit/bandit/reporters/reporters.h	/^#define BANDIT_REPORTERS_H$/;"	d
BANDIT_REPORTERS_SINGLE_LINE_REPORTER_H	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^#define BANDIT_REPORTERS_SINGLE_LINE_REPORTER_H$/;"	d
BANDIT_REPORTERS_SINGLE_LINE_REPORTER_H	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^#define BANDIT_REPORTERS_SINGLE_LINE_REPORTER_H$/;"	d
BANDIT_REPORTERS_XUNIT_REPORTER_H	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^#define BANDIT_REPORTERS_XUNIT_REPORTER_H$/;"	d
BANDIT_REPORTERS_XUNIT_REPORTER_H	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^#define BANDIT_REPORTERS_XUNIT_REPORTER_H$/;"	d
BANDIT_RUNNER_H	libs/variant/tests/vendor/bandit/bandit/runner.h	/^#define BANDIT_RUNNER_H$/;"	d
BANDIT_RUNNER_H	tests/vendor/bandit/bandit/runner.h	/^#define BANDIT_RUNNER_H$/;"	d
BANDIT_RUN_POLICIES_H	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policies.h	/^#define BANDIT_RUN_POLICIES_H$/;"	d
BANDIT_RUN_POLICIES_H	tests/vendor/bandit/bandit/run_policies/run_policies.h	/^#define BANDIT_RUN_POLICIES_H$/;"	d
BANDIT_RUN_POLICY_H	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^#define BANDIT_RUN_POLICY_H$/;"	d
BANDIT_RUN_POLICY_H	tests/vendor/bandit/bandit/run_policies/run_policy.h	/^#define BANDIT_RUN_POLICY_H$/;"	d
BANDIT_SKIP_POLICIES	libs/variant/tests/vendor/bandit/bandit/skip_policies/skip_policies.h	/^#define BANDIT_SKIP_POLICIES$/;"	d
BANDIT_SKIP_POLICIES	tests/vendor/bandit/bandit/skip_policies/skip_policies.h	/^#define BANDIT_SKIP_POLICIES$/;"	d
BANDIT_SKIP_POLICY_H	libs/variant/tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^#define BANDIT_SKIP_POLICY_H$/;"	d
BANDIT_SKIP_POLICY_H	tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^#define BANDIT_SKIP_POLICY_H$/;"	d
BANDIT_SPECS	libs/variant/tests/vendor/bandit/specs/specs.h	/^#define BANDIT_SPECS$/;"	d
BANDIT_SPECS	tests/vendor/bandit/specs/specs.h	/^#define BANDIT_SPECS$/;"	d
BANDIT_SPECS_ARGV_HELPER_H	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^#define BANDIT_SPECS_ARGV_HELPER_H$/;"	d
BANDIT_SPECS_ARGV_HELPER_H	tests/vendor/bandit/specs/util/argv_helper.h	/^#define BANDIT_SPECS_ARGV_HELPER_H$/;"	d
BANDIT_SPECS_FAKES_H	libs/variant/tests/vendor/bandit/specs/fakes/fakes.h	/^#define BANDIT_SPECS_FAKES_H$/;"	d
BANDIT_SPECS_FAKES_H	tests/vendor/bandit/specs/fakes/fakes.h	/^#define BANDIT_SPECS_FAKES_H$/;"	d
BANDIT_SPECS_FAKE_REPORTER_H	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^#define BANDIT_SPECS_FAKE_REPORTER_H$/;"	d
BANDIT_SPECS_FAKE_REPORTER_H	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^#define BANDIT_SPECS_FAKE_REPORTER_H$/;"	d
BANDIT_SPECS_LOGGING_FAKE_H	libs/variant/tests/vendor/bandit/specs/fakes/logging_fake.h	/^#define BANDIT_SPECS_LOGGING_FAKE_H$/;"	d
BANDIT_SPECS_LOGGING_FAKE_H	tests/vendor/bandit/specs/fakes/logging_fake.h	/^#define BANDIT_SPECS_LOGGING_FAKE_H$/;"	d
BANDIT_SPECS_UTIL_H	libs/variant/tests/vendor/bandit/specs/util/util.h	/^#define BANDIT_SPECS_UTIL_H$/;"	d
BANDIT_SPECS_UTIL_H	tests/vendor/bandit/specs/util/util.h	/^#define BANDIT_SPECS_UTIL_H$/;"	d
BANDIT_SPEC_REGISTRY_H	libs/variant/tests/vendor/bandit/bandit/registration/spec_registry.h	/^#define BANDIT_SPEC_REGISTRY_H$/;"	d
BANDIT_SPEC_REGISTRY_H	tests/vendor/bandit/bandit/registration/spec_registry.h	/^#define BANDIT_SPEC_REGISTRY_H$/;"	d
BANDIT_SPEC_REPORTER_H	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^#define BANDIT_SPEC_REPORTER_H$/;"	d
BANDIT_SPEC_REPORTER_H	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^#define BANDIT_SPEC_REPORTER_H$/;"	d
BANDIT_TEST_RUN_ERROR	libs/variant/tests/vendor/bandit/bandit/test_run_error.h	/^#define BANDIT_TEST_RUN_ERROR$/;"	d
BANDIT_TEST_RUN_ERROR	tests/vendor/bandit/bandit/test_run_error.h	/^#define BANDIT_TEST_RUN_ERROR$/;"	d
BANDIT_TEST_RUN_SUMMARY_H	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^#define BANDIT_TEST_RUN_SUMMARY_H$/;"	d
BANDIT_TEST_RUN_SUMMARY_H	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^#define BANDIT_TEST_RUN_SUMMARY_H$/;"	d
BANDIT_THROWEXCEPTION_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^#define BANDIT_THROWEXCEPTION_H$/;"	d
BANDIT_THROWEXCEPTION_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^#define BANDIT_THROWEXCEPTION_H$/;"	d
BANDIT_VALUEPROXY_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^#define BANDIT_VALUEPROXY_H$/;"	d
BANDIT_VALUEPROXY_H	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^#define BANDIT_VALUEPROXY_H$/;"	d
BANDIT_VERSION	libs/variant/tests/vendor/bandit/bandit/bandit.h	/^#define BANDIT_VERSION /;"	d
BANDIT_VERSION	tests/vendor/bandit/bandit/bandit.h	/^#define BANDIT_VERSION /;"	d
BANDIT_VISUAL_STUDIO_FAILURE_FORMATTER_H	libs/variant/tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^#define BANDIT_VISUAL_STUDIO_FAILURE_FORMATTER_H$/;"	d
BANDIT_VISUAL_STUDIO_FAILURE_FORMATTER_H	tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^#define BANDIT_VISUAL_STUDIO_FAILURE_FORMATTER_H$/;"	d
BASE	libs/variant/src/variant.h	/^        static const int BASE = 0;  \/\/ autodetect$/;"	m	class:arg3::variant
BATCH	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="BATCH">BATCH<\/a><\/h3>$/;"	a
BINARY	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
BOOL	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
BREAK_ON_FAILURE	libs/variant/tests/vendor/bandit/bandit/options.h	/^          FORMATTER, SKIP, ONLY, BREAK_ON_FAILURE };$/;"	e	enum:bandit::detail::options::option_index
BasicAssertions	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/basic_assertions.cpp	/^void BasicAssertions()$/;"	f
BasicAssertions	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/basic_assertions.cpp	/^void BasicAssertions()$/;"	f
Batch	src/modify_query.h	/^            constexpr static const int Batch = (1 << 0);$/;"	m	class:arg3::db::modify_query
BeCloseTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        explicit BeCloseTo(const T& expectedValue): Matcher(), _expectedValue(expectedValue), _threshold(0.01) {}$/;"	f	class:bandit::Matchers::BeCloseTo
BeCloseTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^    class BeCloseTo : public Matcher$/;"	c	namespace:bandit::Matchers
BeCloseTo	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        explicit BeCloseTo(const T& expectedValue): Matcher(), _expectedValue(expectedValue), _threshold(0.01) {}$/;"	f	class:bandit::Matchers::BeCloseTo
BeCloseTo	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^    class BeCloseTo : public Matcher$/;"	c	namespace:bandit::Matchers
BeEmpty	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^        explicit BeEmpty() : Matcher() {}$/;"	f	class:bandit::Matchers::BeEmpty
BeEmpty	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^    class BeEmpty : public Matcher$/;"	c	namespace:bandit::Matchers
BeEmpty	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^        BeEmpty() : Matcher() {}$/;"	f	class:bandit::Matchers::BeEmpty
BeEmpty	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^    class BeEmpty : public Matcher$/;"	c	namespace:bandit::Matchers
BeFalsy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^        explicit BeFalsy() : Matcher() {}$/;"	f	class:bandit::Matchers::BeFalsy
BeFalsy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^    class BeFalsy : public Matcher$/;"	c	namespace:bandit::Matchers
BeFalsy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^        BeFalsy() : Matcher() {}$/;"	f	class:bandit::Matchers::BeFalsy
BeFalsy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^    class BeFalsy : public Matcher$/;"	c	namespace:bandit::Matchers
BeGTE	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^        explicit BeGTE(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::BeGTE
BeGTE	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^    class BeGTE : public Matcher$/;"	c	namespace:bandit::Matchers
BeGTE	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^        explicit BeGTE(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::BeGTE
BeGTE	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^    class BeGTE : public Matcher$/;"	c	namespace:bandit::Matchers
BeGreaterThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^        explicit BeGreaterThan(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::BeGreaterThan
BeGreaterThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^    class BeGreaterThan : public Matcher$/;"	c	namespace:bandit::Matchers
BeGreaterThan	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^        explicit BeGreaterThan(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::BeGreaterThan
BeGreaterThan	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^    class BeGreaterThan : public Matcher$/;"	c	namespace:bandit::Matchers
BeLTE	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^        explicit BeLTE(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::BeLTE
BeLTE	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^    class BeLTE : public Matcher$/;"	c	namespace:bandit::Matchers
BeLTE	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^        explicit BeLTE(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::BeLTE
BeLTE	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^    class BeLTE : public Matcher$/;"	c	namespace:bandit::Matchers
BeLessThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^        explicit BeLessThan(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::BeLessThan
BeLessThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^    class BeLessThan : public Matcher$/;"	c	namespace:bandit::Matchers
BeLessThan	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^        explicit BeLessThan(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::BeLessThan
BeLessThan	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^    class BeLessThan : public Matcher$/;"	c	namespace:bandit::Matchers
BeNull	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^        BeNull() : Matcher() {}$/;"	f	class:bandit::Matchers::BeNull
BeNull	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^    class BeNull : public Matcher$/;"	c	namespace:bandit::Matchers
BeNull	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^        BeNull() : Matcher() {}$/;"	f	class:bandit::Matchers::BeNull
BeNull	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^    class BeNull : public Matcher$/;"	c	namespace:bandit::Matchers
BeTruthy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^        BeTruthy() : Matcher() {}$/;"	f	class:bandit::Matchers::BeTruthy
BeTruthy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^    class BeTruthy : public Matcher$/;"	c	namespace:bandit::Matchers
BeTruthy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^        BeTruthy() : Matcher() {}$/;"	f	class:bandit::Matchers::BeTruthy
BeTruthy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^    class BeTruthy : public Matcher$/;"	c	namespace:bandit::Matchers
BooleanOperators	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/boolean_operators.cpp	/^void BooleanOperators()$/;"	f
BooleanOperators	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/boolean_operators.cpp	/^void BooleanOperators()$/;"	f
CHAR	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
CMAKE_BINARY_DIR	.vagrant-build/Makefile	/^CMAKE_BINARY_DIR = \/vagrant\/.vagrant-build$/;"	m
CMAKE_BINARY_DIR	.vagrant-build/libs/variant/Makefile	/^CMAKE_BINARY_DIR = \/vagrant\/.vagrant-build$/;"	m
CMAKE_BINARY_DIR	.vagrant-build/libs/variant/src/Makefile	/^CMAKE_BINARY_DIR = \/vagrant\/.vagrant-build$/;"	m
CMAKE_BINARY_DIR	.vagrant-build/libs/variant/tests/Makefile	/^CMAKE_BINARY_DIR = \/vagrant\/.vagrant-build$/;"	m
CMAKE_BINARY_DIR	.vagrant-build/src/Makefile	/^CMAKE_BINARY_DIR = \/vagrant\/.vagrant-build$/;"	m
CMAKE_BINARY_DIR	.vagrant-build/tests/Makefile	/^CMAKE_BINARY_DIR = \/vagrant\/.vagrant-build$/;"	m
CMAKE_BINARY_DIR	debug/Makefile	/^CMAKE_BINARY_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db\/debug$/;"	m
CMAKE_BINARY_DIR	debug/libs/variant/Makefile	/^CMAKE_BINARY_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db\/debug$/;"	m
CMAKE_BINARY_DIR	debug/libs/variant/src/Makefile	/^CMAKE_BINARY_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db\/debug$/;"	m
CMAKE_BINARY_DIR	debug/libs/variant/tests/Makefile	/^CMAKE_BINARY_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db\/debug$/;"	m
CMAKE_BINARY_DIR	debug/src/Makefile	/^CMAKE_BINARY_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db\/debug$/;"	m
CMAKE_BINARY_DIR	debug/tests/Makefile	/^CMAKE_BINARY_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db\/debug$/;"	m
CMAKE_COMMAND	.vagrant-build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	.vagrant-build/libs/variant/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	.vagrant-build/libs/variant/src/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	.vagrant-build/libs/variant/tests/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	.vagrant-build/src/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	.vagrant-build/tests/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	debug/Makefile	/^CMAKE_COMMAND = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake$/;"	m
CMAKE_COMMAND	debug/libs/variant/Makefile	/^CMAKE_COMMAND = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake$/;"	m
CMAKE_COMMAND	debug/libs/variant/src/Makefile	/^CMAKE_COMMAND = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake$/;"	m
CMAKE_COMMAND	debug/libs/variant/tests/Makefile	/^CMAKE_COMMAND = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake$/;"	m
CMAKE_COMMAND	debug/src/Makefile	/^CMAKE_COMMAND = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake$/;"	m
CMAKE_COMMAND	debug/tests/Makefile	/^CMAKE_COMMAND = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake$/;"	m
CMAKE_CONFIG_H	.vagrant-build/gen/config.h	/^#define CMAKE_CONFIG_H$/;"	d
CMAKE_CONFIG_H	debug/gen/config.h	/^#define CMAKE_CONFIG_H$/;"	d
CMAKE_SOURCE_DIR	.vagrant-build/Makefile	/^CMAKE_SOURCE_DIR = \/vagrant$/;"	m
CMAKE_SOURCE_DIR	.vagrant-build/libs/variant/Makefile	/^CMAKE_SOURCE_DIR = \/vagrant$/;"	m
CMAKE_SOURCE_DIR	.vagrant-build/libs/variant/src/Makefile	/^CMAKE_SOURCE_DIR = \/vagrant$/;"	m
CMAKE_SOURCE_DIR	.vagrant-build/libs/variant/tests/Makefile	/^CMAKE_SOURCE_DIR = \/vagrant$/;"	m
CMAKE_SOURCE_DIR	.vagrant-build/src/Makefile	/^CMAKE_SOURCE_DIR = \/vagrant$/;"	m
CMAKE_SOURCE_DIR	.vagrant-build/tests/Makefile	/^CMAKE_SOURCE_DIR = \/vagrant$/;"	m
CMAKE_SOURCE_DIR	debug/Makefile	/^CMAKE_SOURCE_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db$/;"	m
CMAKE_SOURCE_DIR	debug/libs/variant/Makefile	/^CMAKE_SOURCE_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db$/;"	m
CMAKE_SOURCE_DIR	debug/libs/variant/src/Makefile	/^CMAKE_SOURCE_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db$/;"	m
CMAKE_SOURCE_DIR	debug/libs/variant/tests/Makefile	/^CMAKE_SOURCE_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db$/;"	m
CMAKE_SOURCE_DIR	debug/src/Makefile	/^CMAKE_SOURCE_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db$/;"	m
CMAKE_SOURCE_DIR	debug/tests/Makefile	/^CMAKE_SOURCE_DIR = \/Users\/ryan\/devel\/libarg3\/src\/db$/;"	m
COMPILER_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_MAJOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPLEX	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
CheckArg	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^typedef ArgStatus (*CheckArg)(const Option& option, bool msg);$/;"	t	namespace:option
CheckArg	tests/vendor/bandit/bandit/external/optionparser.h	/^typedef ArgStatus (*CheckArg)(const Option& option, bool msg);$/;"	t	namespace:option
Class Documentation	html/latex/refman.tex	/^\\chapter{Class Documentation}$/;"	c
Class Documentation	latex/refman.tex	/^\\chapter{Class Documentation}$/;"	c
Class Hierarchy	html/latex/hierarchy.tex	/^\\section{Class Hierarchy}$/;"	s
Class Hierarchy	latex/hierarchy.tex	/^\\section{Class Hierarchy}$/;"	s
Class Index	html/latex/refman.tex	/^\\chapter{Class Index}$/;"	c
Class Index	latex/refman.tex	/^\\chapter{Class Index}$/;"	c
Class List	html/latex/annotated.tex	/^\\section{Class List}$/;"	s
Class List	latex/annotated.tex	/^\\section{Class List}$/;"	s
ClassWithExceptions	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^class ClassWithExceptions$/;"	c	file:
ClassWithExceptions	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^class ClassWithExceptions$/;"	c	file:
Classes	html/latex/schema_8h.tex	/^\\subsection*{Classes}$/;"	b
Classes	latex/namespacearg3_1_1db_1_1postgres_1_1helper.tex	/^\\subsection*{Classes}$/;"	b
Classes	latex/schema_8h.tex	/^\\subsection*{Classes}$/;"	b
CollectionConstraintEvaluator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^struct CollectionConstraintEvaluator$/;"	s	namespace:snowhouse
CollectionConstraintEvaluator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^struct CollectionConstraintEvaluator<ConstraintListType, std::string>$/;"	s	namespace:snowhouse
CollectionConstraintEvaluator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^struct CollectionConstraintEvaluator$/;"	s	namespace:snowhouse
CollectionConstraintEvaluator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^struct CollectionConstraintEvaluator<ConstraintListType, std::string>$/;"	s	namespace:snowhouse
CollectionOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^   struct CollectionOperator : public ConstraintOperator$/;"	s	namespace:snowhouse
CollectionOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^   struct CollectionOperator : public ConstraintOperator$/;"	s	namespace:snowhouse
Column	src/sqlite/db.h	/^                typedef enum { None, ResultSet, Row, Column } level;$/;"	e	enum:arg3::db::sqlite::cache::__anon9
Concatenate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    static ResultList Concatenate(const LeftList& left, const RightList& right)$/;"	f	struct:snowhouse::ListConcat
Concatenate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    static ResultList Concatenate(const Nil&, const Nil&)$/;"	f	struct:snowhouse::ListConcat
Concatenate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    static ResultList Concatenate(const Nil&, const RightList& right)$/;"	f	struct:snowhouse::ListConcat
Concatenate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  inline typename type_concat<L1, L2>::t Concatenate(const L1& list1, const L2& list2)$/;"	f	namespace:snowhouse
Concatenate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    static ResultList Concatenate(const LeftList& left, const RightList& right)$/;"	f	struct:snowhouse::ListConcat
Concatenate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    static ResultList Concatenate(const Nil&, const Nil&)$/;"	f	struct:snowhouse::ListConcat
Concatenate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    static ResultList Concatenate(const Nil&, const RightList& right)$/;"	f	struct:snowhouse::ListConcat
Concatenate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  inline typename type_concat<L1, L2>::t Concatenate(const L1& list1, const L2& list2)$/;"	f	namespace:snowhouse
ConfigurableAssert	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^   class ConfigurableAssert$/;"	c	namespace:snowhouse
ConstraintAdapter	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^    ConstraintAdapter(const ConstraintType& constraint) : m_constraint(constraint)$/;"	f	struct:snowhouse::ConstraintAdapter
ConstraintAdapter	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^  struct ConstraintAdapter$/;"	s	namespace:snowhouse
ConstraintAdapter	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^    ConstraintAdapter(const ConstraintType& constraint) : m_constraint(constraint)$/;"	f	struct:snowhouse::ConstraintAdapter
ConstraintAdapter	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^  struct ConstraintAdapter$/;"	s	namespace:snowhouse
ConstraintList	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    ConstraintList(const HeadType& head, const TailType& tail) $/;"	f	struct:snowhouse::ConstraintList
ConstraintList	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct ConstraintList$/;"	s	namespace:snowhouse
ConstraintList	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    ConstraintList(const HeadType& head, const TailType& tail) $/;"	f	struct:snowhouse::ConstraintList
ConstraintList	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct ConstraintList$/;"	s	namespace:snowhouse
ConstraintOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^  struct ConstraintOperator$/;"	s	namespace:snowhouse
ConstraintOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^  struct ConstraintOperator$/;"	s	namespace:snowhouse
Constructor Destructor Documentation	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	html/latex/structarg3_1_1db_1_1uri.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql_1_1column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql_1_1stmt__column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres_1_1column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1query.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1record.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1row.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1schema.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sql__value.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqlite_1_1cached__column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqlite_1_1column.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/structarg3_1_1db_1_1uri.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Constructor Destructor Documentation	latex/structarg3_1_1db_1_1uri__type.tex	/^\\subsection{Constructor \\& Destructor Documentation}$/;"	b
Contain	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^        explicit Contain(const T& element) : Matcher(), _element(element) {}$/;"	f	class:bandit::Matchers::Contain
Contain	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^    class Contain : public Matcher$/;"	c	namespace:bandit::Matchers
Contain	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^        explicit Contain(const T& element) : Matcher(), _element(element) {}$/;"	f	class:bandit::Matchers::Contain
Contain	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^    class Contain : public Matcher$/;"	c	namespace:bandit::Matchers
ContainerConstraints	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^void ContainerConstraints()$/;"	f
ContainerConstraints	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^void ContainerConstraints()$/;"	f
Containing	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      Containing(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
Containing	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    Containing(const char* expected)$/;"	f	struct:snowhouse::ExpressionBuilder
Containing	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      Containing(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
Containing	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    Containing(const char* expected)$/;"	f	struct:snowhouse::ExpressionBuilder
Contains	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  inline ContainsConstraint<ExpectedType> Contains(const ExpectedType& expected)$/;"	f	namespace:snowhouse
Contains	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  inline ContainsConstraint<std::string> Contains(const char* expected)$/;"	f	namespace:snowhouse
Contains	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  inline ContainsConstraint<ExpectedType> Contains(const ExpectedType& expected)$/;"	f	namespace:snowhouse
Contains	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  inline ContainsConstraint<std::string> Contains(const char* expected)$/;"	f	namespace:snowhouse
ContainsConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    ContainsConstraint(const ExpectedType& expected) $/;"	f	struct:snowhouse::ContainsConstraint
ContainsConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  struct ContainsConstraint : Expression< ContainsConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
ContainsConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    ContainsConstraint(const ExpectedType& expected) $/;"	f	struct:snowhouse::ContainsConstraint
ContainsConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  struct ContainsConstraint : Expression< ContainsConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
CountOptionsAction	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  CountOptionsAction(unsigned* buffer_max_) :$/;"	f	class:option::Stats::CountOptionsAction
CountOptionsAction	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^class Stats::CountOptionsAction: public Parser::Action$/;"	c	class:option::Stats
CountOptionsAction	tests/vendor/bandit/bandit/external/optionparser.h	/^  CountOptionsAction(unsigned* buffer_max_) :$/;"	f	class:option::Stats::CountOptionsAction
CountOptionsAction	tests/vendor/bandit/bandit/external/optionparser.h	/^class Stats::CountOptionsAction: public Parser::Action$/;"	c	class:option::Stats
CreateErrorText	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static std::string CreateErrorText(const ExpectedType& expected, const ActualType& actual)$/;"	f	class:snowhouse::Assert
CustomMatchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^void CustomMatchers()$/;"	f
CustomMatchers	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^void CustomMatchers()$/;"	f
DATE	src/sql_value.h	/^            typedef enum { DATE, TIME, TIMESTAMP, DATETIME } formats;$/;"	e	enum:arg3::db::sql_time::__anon7
DATETIME	src/sql_value.h	/^            typedef enum { DATE, TIME, TIMESTAMP, DATETIME } formats;$/;"	e	enum:arg3::db::sql_time::__anon7
DEC	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
DEC	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
Debug	src/sqldb.h	/^                Debug = 4,$/;"	e	enum:arg3::db::log::__anon8
DefaultFailureHandler	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^   struct DefaultFailureHandler$/;"	s	namespace:snowhouse
DefaultStringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct DefaultStringizer$/;"	s	namespace:snowhouse::detail
DefaultStringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct DefaultStringizer<T, false>$/;"	s	namespace:snowhouse::detail
DefaultStringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct DefaultStringizer$/;"	s	namespace:snowhouse::detail
DefaultStringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct DefaultStringizer<T, false>$/;"	s	namespace:snowhouse::detail
Descriptor	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^struct Descriptor$/;"	s	namespace:option
Descriptor	tests/vendor/bandit/bandit/external/optionparser.h	/^struct Descriptor$/;"	s	namespace:option
Detailed Description	html/latex/alloc_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1bindable.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1join__clause.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1resultset__iterator.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1schema.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1schema__factory.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/classarg3_1_1db_1_1where__clause.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/exception_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/log_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/mysql__binding_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/mysql__column_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/mysql__db_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/mysql__resultset_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/mysql__row_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/mysql__statement_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/postgres__binding_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/postgres__column_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/postgres__db_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/postgres__resultset_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/postgres__row_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/postgres__statement_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/schema_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/structarg3_1_1db_1_1column__definition.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	html/latex/structarg3_1_1db_1_1uri.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/alloc_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1join__clause.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql_1_1column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql_1_1stmt__column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__cached__column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres_1_1column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres__cached__resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres__cached__row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres__resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres__row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1record.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1resultset__iterator.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1schema.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1schema__factory.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sql__value.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite3__cached__column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite3__cached__resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite3__cached__row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite3__column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite3__db.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite3__resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite3__row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite_1_1cached__column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite_1_1column.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1statement.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/classarg3_1_1db_1_1where__clause.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/exception_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/log_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/namespacearg3_1_1db_1_1postgres_1_1helper.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/schema_8h.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/structarg3_1_1db_1_1column__definition.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/structarg3_1_1db_1_1helper_1_1mysql__res__delete.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/structarg3_1_1db_1_1mysql_1_1helper_1_1res__delete.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/structarg3_1_1db_1_1sqlite3__stmt__delete.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/structarg3_1_1db_1_1sqlite_1_1helper_1_1stmt__delete.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/structarg3_1_1db_1_1uri.tex	/^\\subsection{Detailed Description}$/;"	b
Detailed Description	latex/structarg3_1_1db_1_1uri__type.tex	/^\\subsection{Detailed Description}$/;"	b
Directories	latex/dir_68267d1309a1af8e8297ef4c3efbcdba.tex	/^\\subsection*{Directories}$/;"	b
EQUALS	.vagrant-build/Makefile	/^EQUALS = =$/;"	m
EQUALS	.vagrant-build/libs/variant/Makefile	/^EQUALS = =$/;"	m
EQUALS	.vagrant-build/libs/variant/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	.vagrant-build/libs/variant/tests/Makefile	/^EQUALS = =$/;"	m
EQUALS	.vagrant-build/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	.vagrant-build/tests/Makefile	/^EQUALS = =$/;"	m
EQUALS	debug/Makefile	/^EQUALS = =$/;"	m
EQUALS	debug/libs/variant/Makefile	/^EQUALS = =$/;"	m
EQUALS	debug/libs/variant/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	debug/libs/variant/tests/Makefile	/^EQUALS = =$/;"	m
EQUALS	debug/src/Makefile	/^EQUALS = =$/;"	m
EQUALS	debug/tests/Makefile	/^EQUALS = =$/;"	m
Empty	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      Empty()$/;"	f	struct:snowhouse::ExpressionBuilder
Empty	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      Empty()$/;"	f	struct:snowhouse::ExpressionBuilder
EndingWith	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EndingWith(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EndingWith	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EndingWith(const char* expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EndingWith	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EndingWith(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EndingWith	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EndingWith(const char* expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EndsWith	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^  inline EndsWithConstraint<ExpectedType> EndsWith(const ExpectedType& expected)$/;"	f	namespace:snowhouse
EndsWith	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^  inline EndsWithConstraint<std::string> EndsWith(const char* expected)$/;"	f	namespace:snowhouse
EndsWith	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^  inline EndsWithConstraint<ExpectedType> EndsWith(const ExpectedType& expected)$/;"	f	namespace:snowhouse
EndsWith	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^  inline EndsWithConstraint<std::string> EndsWith(const char* expected)$/;"	f	namespace:snowhouse
EndsWithConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^    EndsWithConstraint(const ExpectedType& expected) $/;"	f	struct:snowhouse::EndsWithConstraint
EndsWithConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^  struct EndsWithConstraint : Expression< EndsWithConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
EndsWithConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^    EndsWithConstraint(const ExpectedType& expected) $/;"	f	struct:snowhouse::EndsWithConstraint
EndsWithConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^  struct EndsWithConstraint : Expression< EndsWithConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
Equal	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^        explicit Equal(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::Equal
Equal	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    class Equal : public Matcher$/;"	c	namespace:bandit::Matchers
Equal	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^        explicit Equal(const T& expectedValue) : Matcher(), _expectedValue(expectedValue) {}$/;"	f	class:bandit::Matchers::Equal
Equal	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    class Equal : public Matcher$/;"	c	namespace:bandit::Matchers
EqualTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualTo(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EqualTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualTo(const char* expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EqualTo	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualTo(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EqualTo	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualTo(const char* expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EqualToContainer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualToContainer(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EqualToContainer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualToContainer(const ExpectedType& expected, const BinaryPredicate predicate)$/;"	f	struct:snowhouse::ExpressionBuilder
EqualToContainer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualToContainer(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
EqualToContainer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualToContainer(const ExpectedType& expected, const BinaryPredicate predicate)$/;"	f	struct:snowhouse::ExpressionBuilder
EqualToWithDelta	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualToWithDelta(const ExpectedType& expected, const DeltaType& delta)$/;"	f	struct:snowhouse::ExpressionBuilder
EqualToWithDelta	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      EqualToWithDelta(const ExpectedType& expected, const DeltaType& delta)$/;"	f	struct:snowhouse::ExpressionBuilder
Equals	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  inline EqualsConstraint<ExpectedType> Equals(const ExpectedType& expected)$/;"	f	namespace:snowhouse
Equals	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  inline EqualsConstraint<std::string> Equals(const char* expected)$/;"	f	namespace:snowhouse
Equals	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  inline EqualsConstraint<ExpectedType> Equals(const ExpectedType& expected)$/;"	f	namespace:snowhouse
Equals	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  inline EqualsConstraint<std::string> Equals(const char* expected)$/;"	f	namespace:snowhouse
EqualsConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    EqualsConstraint(const ExpectedType& expected)$/;"	f	struct:snowhouse::EqualsConstraint
EqualsConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  struct EqualsConstraint : Expression< EqualsConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
EqualsConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    EqualsConstraint(const ExpectedType& expected)$/;"	f	struct:snowhouse::EqualsConstraint
EqualsConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  struct EqualsConstraint : Expression< EqualsConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
EqualsContainer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    inline EqualsContainerConstraint<ExpectedType, BinaryPredicate> EqualsContainer(const ExpectedType& expected, const BinaryPredicate predicate)$/;"	f	namespace:snowhouse
EqualsContainer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    inline EqualsContainerConstraint<ExpectedType, bool (*)(const typename ExpectedType::value_type&, const typename ExpectedType::value_type&)> EqualsContainer(const ExpectedType& expected)$/;"	f	namespace:snowhouse
EqualsContainer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    inline EqualsContainerConstraint<ExpectedType, BinaryPredicate> EqualsContainer(const ExpectedType& expected, const BinaryPredicate predicate)$/;"	f	namespace:snowhouse
EqualsContainer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    inline EqualsContainerConstraint<ExpectedType, bool (*)(const typename ExpectedType::value_type&, const typename ExpectedType::value_type&)> EqualsContainer(const ExpectedType& expected)$/;"	f	namespace:snowhouse
EqualsContainerConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    EqualsContainerConstraint(const ExpectedType& expected, const BinaryPredicate predicate)$/;"	f	struct:snowhouse::EqualsContainerConstraint
EqualsContainerConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    struct EqualsContainerConstraint : Expression< EqualsContainerConstraint<ExpectedType, BinaryPredicate> >$/;"	s	namespace:snowhouse
EqualsContainerConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    EqualsContainerConstraint(const ExpectedType& expected, const BinaryPredicate predicate)$/;"	f	struct:snowhouse::EqualsContainerConstraint
EqualsContainerConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    struct EqualsContainerConstraint : Expression< EqualsContainerConstraint<ExpectedType, BinaryPredicate> >$/;"	s	namespace:snowhouse
EqualsWithDelta	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^  inline EqualsWithDeltaConstraint<ExpectedType, DeltaType> EqualsWithDelta(const ExpectedType& expected, const DeltaType& delta)$/;"	f	namespace:snowhouse
EqualsWithDelta	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^  inline EqualsWithDeltaConstraint<ExpectedType, DeltaType> EqualsWithDelta(const ExpectedType& expected, const DeltaType& delta)$/;"	f	namespace:snowhouse
EqualsWithDeltaConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    EqualsWithDeltaConstraint(const ExpectedType& expected, const DeltaType& delta)$/;"	f	struct:snowhouse::EqualsWithDeltaConstraint
EqualsWithDeltaConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^  struct EqualsWithDeltaConstraint : Expression< EqualsWithDeltaConstraint<ExpectedType, DeltaType> >$/;"	s	namespace:snowhouse
EqualsWithDeltaConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    EqualsWithDeltaConstraint(const ExpectedType& expected, const DeltaType& delta)$/;"	f	struct:snowhouse::EqualsWithDeltaConstraint
EqualsWithDeltaConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^  struct EqualsWithDeltaConstraint : Expression< EqualsWithDeltaConstraint<ExpectedType, DeltaType> >$/;"	s	namespace:snowhouse
Error	src/sqldb.h	/^                Error = 1,$/;"	e	enum:arg3::db::log::__anon8
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^    void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::ConstraintAdapter
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    void Evaluate(ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::ExpressionBuilder
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^    void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::AndOperator
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::AllOperator
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::AtLeastOperator
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::AtMostOperator
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static unsigned int Evaluate(const ConstraintOperator& op,$/;"	f	struct:snowhouse::CollectionConstraintEvaluator
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::ExactlyOperator
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::NoneOperator
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^    void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::NotOperator
Evaluate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^    void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::OrOperator
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^    void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::ConstraintAdapter
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    void Evaluate(ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::ExpressionBuilder
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^    void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::AndOperator
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::AllOperator
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::AtLeastOperator
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::AtMostOperator
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static unsigned int Evaluate(const ConstraintOperator& op,$/;"	f	struct:snowhouse::CollectionConstraintEvaluator
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::ExactlyOperator
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^      void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::NoneOperator
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^    void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::NotOperator
Evaluate	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^    void Evaluate(ConstraintListType& list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	struct:snowhouse::OrOperator
EvaluateAllOperatorsOnStack	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^    static void EvaluateAllOperatorsOnStack(OperatorStack& operators, ResultStack& result)$/;"	f	struct:snowhouse::ConstraintOperator
EvaluateAllOperatorsOnStack	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^    static void EvaluateAllOperatorsOnStack(OperatorStack& operators, ResultStack& result)$/;"	f	struct:snowhouse::ConstraintOperator
EvaluateConstraintList	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  inline void EvaluateConstraintList(ConstraintListType& constraint_list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	namespace:snowhouse
EvaluateConstraintList	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  inline void EvaluateConstraintList(Nil&, ResultStack&, OperatorStack&, const ActualType&) {}$/;"	f	namespace:snowhouse
EvaluateConstraintList	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  inline void EvaluateConstraintList(ConstraintListType& constraint_list, ResultStack& result, OperatorStack& operators, const ActualType& actual)$/;"	f	namespace:snowhouse
EvaluateConstraintList	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  inline void EvaluateConstraintList(Nil&, ResultStack&, OperatorStack&, const ActualType&) {}$/;"	f	namespace:snowhouse
EvaluateElementAgainstRestOfExpression	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^    static bool EvaluateElementAgainstRestOfExpression(ConstraintListType& list, const ActualType& actual)$/;"	f	struct:snowhouse::ConstraintOperator
EvaluateElementAgainstRestOfExpression	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^    static bool EvaluateElementAgainstRestOfExpression(ConstraintListType& list, const ActualType& actual)$/;"	f	struct:snowhouse::ConstraintOperator
EvaluateOperatorsWithLessOrEqualPrecedence	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^    static void EvaluateOperatorsWithLessOrEqualPrecedence(const ConstraintOperator& op, OperatorStack& operators, ResultStack& result)$/;"	f	struct:snowhouse::ConstraintOperator
EvaluateOperatorsWithLessOrEqualPrecedence	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^    static void EvaluateOperatorsWithLessOrEqualPrecedence(const ConstraintOperator& op, OperatorStack& operators, ResultStack& result)$/;"	f	struct:snowhouse::ConstraintOperator
Exactly	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, ExactlyOperatorNode>::t> Exactly(unsigned int expected)$/;"	f	struct:snowhouse::ExpressionBuilder
Exactly	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, ExactlyOperatorNode>::t> Exactly(unsigned int expected)$/;"	f	struct:snowhouse::ExpressionBuilder
ExactlyOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^      ExactlyOperator(unsigned int expected) : m_expected(expected) {}$/;"	f	struct:snowhouse::ExactlyOperator
ExactlyOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^   struct ExactlyOperator : public CollectionOperator$/;"	s	namespace:snowhouse
ExactlyOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^      ExactlyOperator(unsigned int expected) : m_expected(expected) {}$/;"	f	struct:snowhouse::ExactlyOperator
ExactlyOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^   struct ExactlyOperator : public CollectionOperator$/;"	s	namespace:snowhouse
ExactlyOperatorNode	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<ExactlyOperator, Nil> ExactlyOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
ExactlyOperatorNode	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<ExactlyOperator, Nil> ExactlyOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
ExceptionStorage	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^  class ExceptionStorage$/;"	c	namespace:snowhouse
ExceptionStorage	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^  class ExceptionStorage$/;"	c	namespace:snowhouse
ExceptionTests	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^void ExceptionTests()$/;"	f
ExceptionTests	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^void ExceptionTests()$/;"	f
Expression	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^  struct Expression$/;"	s	namespace:snowhouse
Expression	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^  struct Expression$/;"	s	namespace:snowhouse
ExpressionBuilder	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder(const ConstraintListType& list) : m_constraint_list(list)$/;"	f	struct:snowhouse::ExpressionBuilder
ExpressionBuilder	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  struct ExpressionBuilder$/;"	s	namespace:snowhouse
ExpressionBuilder	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder(const ConstraintListType& list) : m_constraint_list(list)$/;"	f	struct:snowhouse::ExpressionBuilder
ExpressionBuilder	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  struct ExpressionBuilder$/;"	s	namespace:snowhouse
ExpressionErrorHandling	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/expression_error_handling.cpp	/^void ExpressionErrorHandling()$/;"	f
ExpressionErrorHandling	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/expression_error_handling.cpp	/^void ExpressionErrorHandling()$/;"	f
FORMATTER	libs/variant/tests/vendor/bandit/bandit/options.h	/^          FORMATTER, SKIP, ONLY, BREAK_ON_FAILURE };$/;"	e	enum:bandit::detail::options::option_index
FORMATTER	tests/vendor/bandit/bandit/options.h	/^          FORMATTER, SKIP, ONLY };$/;"	e	enum:bandit::detail::options::option_index
FORMATTER_DEFAULT	libs/variant/tests/vendor/bandit/bandit/options.h	/^        FORMATTER_DEFAULT,$/;"	e	enum:bandit::detail::options::__anon4
FORMATTER_DEFAULT	tests/vendor/bandit/bandit/options.h	/^        FORMATTER_DEFAULT,$/;"	e	enum:bandit::detail::options::__anon11
FORMATTER_UNKNOWN	libs/variant/tests/vendor/bandit/bandit/options.h	/^        FORMATTER_UNKNOWN$/;"	e	enum:bandit::detail::options::__anon4
FORMATTER_UNKNOWN	tests/vendor/bandit/bandit/options.h	/^        FORMATTER_UNKNOWN$/;"	e	enum:bandit::detail::options::__anon11
FORMATTER_VS	libs/variant/tests/vendor/bandit/bandit/options.h	/^        FORMATTER_VS,$/;"	e	enum:bandit::detail::options::__anon4
FORMATTER_VS	tests/vendor/bandit/bandit/options.h	/^        FORMATTER_VS,$/;"	e	enum:bandit::detail::options::__anon11
FULFILLSCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^#define FULFILLSCONSTRAINT_H$/;"	d
FULFILLSCONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^#define FULFILLSCONSTRAINT_H$/;"	d
Failure	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void Failure(const std::string& message)$/;"	f	class:snowhouse::ConfigurableAssert
Failure	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void Failure(const std::string& message)$/;"	f	class:snowhouse::Assert
False	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      False()$/;"	f	struct:snowhouse::ExpressionBuilder
False	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      False()$/;"	f	struct:snowhouse::ExpressionBuilder
File Documentation	html/latex/refman.tex	/^\\chapter{File Documentation}$/;"	c
File Documentation	latex/refman.tex	/^\\chapter{File Documentation}$/;"	c
File Index	html/latex/refman.tex	/^\\chapter{File Index}$/;"	c
File Index	latex/refman.tex	/^\\chapter{File Index}$/;"	c
File List	html/latex/files.tex	/^\\section{File List}$/;"	s
File List	latex/files.tex	/^\\section{File List}$/;"	s
Files	html/latex/dir_68267d1309a1af8e8297ef4c3efbcdba.tex	/^\\subsection*{Files}$/;"	b
Files	latex/dir_60069a2593ee8ad0d9786f72a1d3874d.tex	/^\\subsection*{Files}$/;"	b
Files	latex/dir_68267d1309a1af8e8297ef4c3efbcdba.tex	/^\\subsection*{Files}$/;"	b
Files	latex/dir_c2fdef15bfa3f58fa044504e43d14c93.tex	/^\\subsection*{Files}$/;"	b
Files	latex/dir_f4168869f34973b52812f2c13b570376.tex	/^\\subsection*{Files}$/;"	b
FindNewline	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static size_t FindNewline(const std::string& str, size_t start)$/;"	f	struct:snowhouse::StringLineParser
FindNewline	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static size_t FindNewline(const std::string& str, size_t start)$/;"	f	struct:snowhouse::StringLineParser
Friends	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsection*{Friends}$/;"	b
Friends	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsection*{Friends}$/;"	b
Friends	html/latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1column.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres__cached__resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres__cached__row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres__resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1postgres__row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1query.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite3__cached__resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite3__cached__row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite3__db.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite3__resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite3__row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsection*{Friends}$/;"	b
Friends	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsection*{Friends}$/;"	b
Fulfilling	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      Fulfilling(const MatcherType& matcher)$/;"	f	struct:snowhouse::ExpressionBuilder
Fulfilling	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      Fulfilling(const MatcherType& matcher)$/;"	f	struct:snowhouse::ExpressionBuilder
Fulfills	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^  inline FulfillsConstraint<MatcherType> Fulfills(const MatcherType& matcher)$/;"	f	namespace:snowhouse
Fulfills	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^  inline FulfillsConstraint<MatcherType> Fulfills(const MatcherType& matcher)$/;"	f	namespace:snowhouse
FulfillsConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^    FulfillsConstraint(const MatcherType& matcher)$/;"	f	struct:snowhouse::FulfillsConstraint
FulfillsConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^  struct FulfillsConstraint : Expression< FulfillsConstraint<MatcherType> >$/;"	s	namespace:snowhouse
FulfillsConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^    FulfillsConstraint(const MatcherType& matcher)$/;"	f	struct:snowhouse::FulfillsConstraint
FulfillsConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^  struct FulfillsConstraint : Expression< FulfillsConstraint<MatcherType> >$/;"	s	namespace:snowhouse
Function Documentation	html/latex/alloc_8h.tex	/^\\subsection{Function Documentation}$/;"	b
Function Documentation	latex/alloc_8h.tex	/^\\subsection{Function Documentation}$/;"	b
Function Documentation	latex/schema_8h.tex	/^\\subsection{Function Documentation}$/;"	b
FunctionWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    FunctionWriter(Function* w) :$/;"	f	struct:option::PrintUsageImplementation::FunctionWriter
FunctionWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  struct FunctionWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
FunctionWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^    FunctionWriter(Function* w) :$/;"	f	struct:option::PrintUsageImplementation::FunctionWriter
FunctionWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^  struct FunctionWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
Functions	html/latex/alloc_8h.tex	/^\\subsection*{Functions}$/;"	b
Functions	html/latex/exception_8h.tex	/^\\subsection*{Functions}$/;"	b
Functions	html/latex/log_8h.tex	/^\\subsection*{Functions}$/;"	b
Functions	html/latex/schema_8h.tex	/^\\subsection*{Functions}$/;"	b
Functions	latex/alloc_8h.tex	/^\\subsection*{Functions}$/;"	b
Functions	latex/exception_8h.tex	/^\\subsection*{Functions}$/;"	b
Functions	latex/log_8h.tex	/^\\subsection*{Functions}$/;"	b
Functions	latex/schema_8h.tex	/^\\subsection*{Functions}$/;"	b
GetFilename	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      std::string GetFilename() const$/;"	f	class:snowhouse::AssertionException
GetFilename	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      std::string GetFilename() const$/;"	f	class:snowhouse::AssertionException
GetLineNumber	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      unsigned int GetLineNumber() const$/;"	f	class:snowhouse::AssertionException
GetLineNumber	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      unsigned int GetLineNumber() const$/;"	f	class:snowhouse::AssertionException
GetMessage	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      std::string GetMessage() const$/;"	f	class:snowhouse::AssertionException
GetMessage	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      std::string GetMessage() const$/;"	f	class:snowhouse::AssertionException
GreaterThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^		GreaterThan(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
GreaterThan	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      GreaterThan(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
GreaterThanOrEqualTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^		GreaterThanOrEqualTo(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
HAVE_LIBCURL	.vagrant-build/gen/config.h	/^#define HAVE_LIBCURL	/;"	d
HAVE_LIBCURL	debug/gen/config.h	/^#define HAVE_LIBCURL	/;"	d
HAVE_LIBMYSQLCLIENT	.vagrant-build/gen/config.h	/^#define HAVE_LIBMYSQLCLIENT	/;"	d
HAVE_LIBMYSQLCLIENT	debug/gen/config.h	/^#define HAVE_LIBMYSQLCLIENT	/;"	d
HAVE_LIBPQ	.vagrant-build/gen/config.h	/^#define HAVE_LIBPQ	/;"	d
HAVE_LIBPQ	debug/gen/config.h	/^#define HAVE_LIBPQ	/;"	d
HAVE_LIBSQLITE3	.vagrant-build/gen/config.h	/^#define HAVE_LIBSQLITE3	/;"	d
HAVE_LIBSQLITE3	debug/gen/config.h	/^#define HAVE_LIBSQLITE3	/;"	d
HAVE_LIBSSL	.vagrant-build/gen/config.h	/^#define HAVE_LIBSSL	/;"	d
HAVE_LIBSSL	debug/gen/config.h	/^#define HAVE_LIBSSL	/;"	d
HELP	libs/variant/tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
HELP	tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
HEX	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
HEX	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
Handle	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/basic_assertions.cpp	/^   static void Handle(const ExpectedType&, const ActualType&, const char*, int)$/;"	f	struct:IgnoreErrors
Handle	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/basic_assertions.cpp	/^   static void Handle(const std::string&)$/;"	f	struct:IgnoreErrors
Handle	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void Handle(const ExpectedType& expected, const ActualType& actual, const char* file_name, int line_number)$/;"	f	struct:snowhouse::DefaultFailureHandler
Handle	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void Handle(const std::string& message)$/;"	f	struct:snowhouse::DefaultFailureHandler
Has	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/fluent.h	/^  inline ExpressionBuilder<Nil> Has()$/;"	f	namespace:snowhouse
Has	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/fluent.h	/^  inline ExpressionBuilder<Nil> Has()$/;"	f	namespace:snowhouse
HasLength	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  inline HasLengthConstraint<ExpectedType> HasLength(const ExpectedType& expected)$/;"	f	namespace:snowhouse
HasLength	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  inline HasLengthConstraint<std::string> HasLength(const char* expected)$/;"	f	namespace:snowhouse
HasLength	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  inline HasLengthConstraint<ExpectedType> HasLength(const ExpectedType& expected)$/;"	f	namespace:snowhouse
HasLength	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  inline HasLengthConstraint<std::string> HasLength(const char* expected)$/;"	f	namespace:snowhouse
HasLengthConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^    HasLengthConstraint(const ExpectedType& expected) $/;"	f	struct:snowhouse::HasLengthConstraint
HasLengthConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  struct HasLengthConstraint : Expression< HasLengthConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
HasLengthConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^    HasLengthConstraint(const ExpectedType& expected) $/;"	f	struct:snowhouse::HasLengthConstraint
HasLengthConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  struct HasLengthConstraint : Expression< HasLengthConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
HeadType	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    typedef HT HeadType;$/;"	t	struct:snowhouse::ConstraintList
HeadType	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    typedef HT HeadType;$/;"	t	struct:snowhouse::ConstraintList
HeaderDoc_classes	html/bindable_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/column_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/join_clause_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/modify_query_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/mysql_binding_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/mysql_column_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/mysql_db_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/mysql_resultset_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/mysql_row_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/mysql_statement_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/postgres_column_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/postgres_db_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/postgres_resultset_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/postgres_row_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/postgres_statement_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/query_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/resultset_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/row_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/schema_factory_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/schema_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/index.html	/^<br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/select_query_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/sql_value_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/sqldb_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/sqlite3_column_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/sqlite3_db_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/sqlite3_resultset_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/sqlite3_row_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/sqlite3_statement_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/statement_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_classes	html/where_clause_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_classes"><\/a>$/;"	a
HeaderDoc_constants	html/modify_query_h/Classes/modify_query/index.html	/^<a name="HeaderDoc_constants"><\/a>$/;"	a
HeaderDoc_constants	html/sql_value_h/index.html	/^<hr class="afterClassEmbeddedTOC"><br><a name="HeaderDoc_constants"><\/a>$/;"	a
HeaderDoc_datatypes	html/join_clause_h/index.html	/^<a name="HeaderDoc_datatypes"><\/a>$/;"	a
HeaderDoc_datatypes	html/sqldb_h/index.html	/^<a name="HeaderDoc_datatypes"><\/a>$/;"	a
HeaderDoc_functions	html/alloc_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/base_record_h/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/column_h/Classes/column/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/column_h/Classes/column_impl/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/join_clause_h/Classes/join_clause/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/join_clause_h/index.html	/^<hr class="afterClassEmbeddedTOC"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/modify_query_h/Classes/delete_query/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/modify_query_h/Classes/insert_query/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/modify_query_h/Classes/modify_query/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/modify_query_h/Classes/update_query/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/mysql_column_h/Classes/mysql_column/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/mysql_db_h/Classes/mysql_db/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/mysql_row_h/Classes/mysql_row/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/query_h/Classes/query/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/query_h/index.html	/^<hr class="afterClassEmbeddedTOC"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/Classes/select_query/index.html	/^<br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/select_query_h/Classes/select_query/index.html	/^<hr class="afterClassOrHeaderInfo"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^<br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_functions	html/sqldb_h/index.html	/^<hr class="afterClassEmbeddedTOC"><br><a name="HeaderDoc_functions"><\/a>$/;"	a
HeaderDoc_structs	html/schema_h/index.html	/^<hr class="afterClassEmbeddedTOC"><br><a name="HeaderDoc_structs"><\/a>$/;"	a
Hierarchical Index	html/latex/refman.tex	/^\\chapter{Hierarchical Index}$/;"	c
Hierarchical Index	latex/refman.tex	/^\\chapter{Hierarchical Index}$/;"	c
ID_VOID_MAIN	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
ID_VOID_MAIN	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
IGLOO_ALLOPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^#define IGLOO_ALLOPERATOR_H$/;"	d
IGLOO_ALLOPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^#define IGLOO_ALLOPERATOR_H$/;"	d
IGLOO_ANDEXPRESSION_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^#define IGLOO_ANDEXPRESSION_H$/;"	d
IGLOO_ANDEXPRESSION_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^#define IGLOO_ANDEXPRESSION_H$/;"	d
IGLOO_ANDOPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^#define IGLOO_ANDOPERATOR_H$/;"	d
IGLOO_ANDOPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^#define IGLOO_ANDOPERATOR_H$/;"	d
IGLOO_ASSERTIONEXCEPTION_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^#define IGLOO_ASSERTIONEXCEPTION_H$/;"	d
IGLOO_ASSERTIONEXCEPTION_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^#define IGLOO_ASSERTIONEXCEPTION_H$/;"	d
IGLOO_ASSERTMACRO_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertmacro.h	/^#define IGLOO_ASSERTMACRO_H$/;"	d
IGLOO_ASSERTMACRO_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertmacro.h	/^#define IGLOO_ASSERTMACRO_H$/;"	d
IGLOO_ASSERT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^#define IGLOO_ASSERT_H$/;"	d
IGLOO_ASSERT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^#define IGLOO_ASSERT_H$/;"	d
IGLOO_ATLEASTOPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^#define IGLOO_ATLEASTOPERATOR_H$/;"	d
IGLOO_ATLEASTOPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^#define IGLOO_ATLEASTOPERATOR_H$/;"	d
IGLOO_ATMOSTOPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^#define IGLOO_ATMOSTOPERATOR_H$/;"	d
IGLOO_ATMOSTOPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^#define IGLOO_ATMOSTOPERATOR_H$/;"	d
IGLOO_COLLECTIONCONSTRAINTEVALUATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^#define IGLOO_COLLECTIONCONSTRAINTEVALUATOR_H$/;"	d
IGLOO_COLLECTIONCONSTRAINTEVALUATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^#define IGLOO_COLLECTIONCONSTRAINTEVALUATOR_H$/;"	d
IGLOO_COLLECTIONOPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^#define IGLOO_COLLECTIONOPERATOR_H$/;"	d
IGLOO_COLLECTIONOPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^#define IGLOO_COLLECTIONOPERATOR_H$/;"	d
IGLOO_CONCAT	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^#define IGLOO_CONCAT(/;"	d
IGLOO_CONCAT	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^#define IGLOO_CONCAT(/;"	d
IGLOO_CONCAT2	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^#define IGLOO_CONCAT2(/;"	d
IGLOO_CONCAT2	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^#define IGLOO_CONCAT2(/;"	d
IGLOO_CONSTRAINTADAPTER_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^#define IGLOO_CONSTRAINTADAPTER_H$/;"	d
IGLOO_CONSTRAINTADAPTER_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^#define IGLOO_CONSTRAINTADAPTER_H$/;"	d
IGLOO_CONSTRAINTS_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/constraints.h	/^#define IGLOO_CONSTRAINTS_H$/;"	d
IGLOO_CONSTRAINTS_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/constraints.h	/^#define IGLOO_CONSTRAINTS_H$/;"	d
IGLOO_CONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^#define IGLOO_CONSTRAINT_H$/;"	d
IGLOO_CONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^#define IGLOO_CONSTRAINT_H$/;"	d
IGLOO_CONTAINSCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^#define IGLOO_CONTAINSCONSTRAINT_H$/;"	d
IGLOO_CONTAINSCONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^#define IGLOO_CONTAINSCONSTRAINT_H$/;"	d
IGLOO_CONTRAINTOPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^#define IGLOO_CONTRAINTOPERATOR_H$/;"	d
IGLOO_CONTRAINTOPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^#define IGLOO_CONTRAINTOPERATOR_H$/;"	d
IGLOO_ENDSWITHCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^#define IGLOO_ENDSWITHCONSTRAINT_H$/;"	d
IGLOO_ENDSWITHCONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^#define IGLOO_ENDSWITHCONSTRAINT_H$/;"	d
IGLOO_EQUALSCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^#define IGLOO_EQUALSCONSTRAINT_H$/;"	d
IGLOO_EQUALSCONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^#define IGLOO_EQUALSCONSTRAINT_H$/;"	d
IGLOO_EQUALSCONTAINERCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^#define IGLOO_EQUALSCONTAINERCONSTRAINT_H$/;"	d
IGLOO_EQUALSCONTAINERCONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^#define IGLOO_EQUALSCONTAINERCONSTRAINT_H$/;"	d
IGLOO_EQUALSWITHDELTACONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^#define IGLOO_EQUALSWITHDELTACONSTRAINT_H$/;"	d
IGLOO_EQUALSWITHDELTACONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^#define IGLOO_EQUALSWITHDELTACONSTRAINT_H$/;"	d
IGLOO_EXACTLYOPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^#define IGLOO_EXACTLYOPERATOR_H$/;"	d
IGLOO_EXACTLYOPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^#define IGLOO_EXACTLYOPERATOR_H$/;"	d
IGLOO_EXCEPTIONS_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^#define IGLOO_EXCEPTIONS_H$/;"	d
IGLOO_EXCEPTIONS_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^#define IGLOO_EXCEPTIONS_H$/;"	d
IGLOO_EXPRESSIONBUILDER_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^#define IGLOO_EXPRESSIONBUILDER_H$/;"	d
IGLOO_EXPRESSIONBUILDER_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^#define IGLOO_EXPRESSIONBUILDER_H$/;"	d
IGLOO_EXPRESSION_FWD_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression_fwd.h	/^#define IGLOO_EXPRESSION_FWD_H$/;"	d
IGLOO_EXPRESSION_FWD_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression_fwd.h	/^#define IGLOO_EXPRESSION_FWD_H$/;"	d
IGLOO_EXPRESSION_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^#define IGLOO_EXPRESSION_H$/;"	d
IGLOO_EXPRESSION_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^#define IGLOO_EXPRESSION_H$/;"	d
IGLOO_FLUENT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/fluent.h	/^#define IGLOO_FLUENT_H$/;"	d
IGLOO_FLUENT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/fluent.h	/^#define IGLOO_FLUENT_H$/;"	d
IGLOO_HASLENGTHCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^#define IGLOO_HASLENGTHCONSTRAINT_H$/;"	d
IGLOO_HASLENGTHCONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^#define IGLOO_HASLENGTHCONSTRAINT_H$/;"	d
IGLOO_INVALUDEXPRESSIONEXCEPTION_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/invalidexpressionexception.h	/^#define IGLOO_INVALUDEXPRESSIONEXCEPTION_H$/;"	d
IGLOO_ISGREATERTHANCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^#define IGLOO_ISGREATERTHANCONSTRAINT_H$/;"	d
IGLOO_ISGREATERTHANCONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^#define IGLOO_ISGREATERTHANCONSTRAINT_H$/;"	d
IGLOO_ISGREATERTHANOREQUALTOCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^#define IGLOO_ISGREATERTHANOREQUALTOCONSTRAINT_H$/;"	d
IGLOO_ISLESSTHANCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^#define IGLOO_ISLESSTHANCONSTRAINT_H$/;"	d
IGLOO_ISLESSTHANCONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^#define IGLOO_ISLESSTHANCONSTRAINT_H$/;"	d
IGLOO_ISLESSTHANOREQUALTOCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^#define IGLOO_ISLESSTHANOREQUALTOCONSTRAINT_H$/;"	d
IGLOO_NONEOPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^#define IGLOO_NONEOPERATOR_H$/;"	d
IGLOO_NONEOPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^#define IGLOO_NONEOPERATOR_H$/;"	d
IGLOO_NOTEXPRESSION_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^#define IGLOO_NOTEXPRESSION_H$/;"	d
IGLOO_NOTEXPRESSION_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^#define IGLOO_NOTEXPRESSION_H$/;"	d
IGLOO_NOTOPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^#define IGLOO_NOTOPERATOR_H$/;"	d
IGLOO_NOTOPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^#define IGLOO_NOTOPERATOR_H$/;"	d
IGLOO_OREXPRESSION_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^#define IGLOO_OREXPRESSION_H$/;"	d
IGLOO_OREXPRESSION_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^#define IGLOO_OREXPRESSION_H$/;"	d
IGLOO_OROPERATOR_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^#define IGLOO_OROPERATOR_H$/;"	d
IGLOO_OROPERATOR_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^#define IGLOO_OROPERATOR_H$/;"	d
IGLOO_STARTSWITHCONSTRAINT_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^#define IGLOO_STARTSWITHCONSTRAINT_H$/;"	d
IGLOO_STARTSWITHCONSTRAINT_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^#define IGLOO_STARTSWITHCONSTRAINT_H$/;"	d
IGLOO_STRINGIZERS_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^#define IGLOO_STRINGIZERS_H$/;"	d
IGLOO_STRINGIZERS_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^#define IGLOO_STRINGIZERS_H$/;"	d
IGLOO_STRINGIZE_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^#define IGLOO_STRINGIZE_H$/;"	d
IGLOO_STRINGIZE_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^#define IGLOO_STRINGIZE_H$/;"	d
IStringWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  struct IStringWriter$/;"	s	struct:option::PrintUsageImplementation
IStringWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^  struct IStringWriter$/;"	s	struct:option::PrintUsageImplementation
IgnoreErrors	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/basic_assertions.cpp	/^struct IgnoreErrors {$/;"	s	file:
Info	src/sqldb.h	/^                Info = 3,$/;"	e	enum:arg3::db::log::__anon8
InvalidExpressionException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/invalidexpressionexception.h	/^    InvalidExpressionException(const std::string& message) : m_message(message)$/;"	f	struct:snowhouse::InvalidExpressionException
InvalidExpressionException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/invalidexpressionexception.h	/^  struct InvalidExpressionException$/;"	s	namespace:snowhouse
InvalidExpressionException	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^    InvalidExpressionException(const std::string& message) : m_message(message)$/;"	f	struct:snowhouse::InvalidExpressionException
InvalidExpressionException	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^  struct InvalidExpressionException$/;"	s	namespace:snowhouse
Is	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/fluent.h	/^  inline ExpressionBuilder<Nil> Is()$/;"	f	namespace:snowhouse
Is	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/fluent.h	/^  inline ExpressionBuilder<Nil> Is()$/;"	f	namespace:snowhouse
IsEmpty	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  inline HasLengthConstraint<int> IsEmpty()$/;"	f	namespace:snowhouse
IsEmpty	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  inline HasLengthConstraint<int> IsEmpty()$/;"	f	namespace:snowhouse
IsEvenNumberNoStreamOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^struct IsEvenNumberNoStreamOperator$/;"	s	file:
IsEvenNumberNoStreamOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^struct IsEvenNumberNoStreamOperator$/;"	s	file:
IsEvenNumberWithStreamOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^struct IsEvenNumberWithStreamOperator$/;"	s	file:
IsEvenNumberWithStreamOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^struct IsEvenNumberWithStreamOperator$/;"	s	file:
IsFalse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  inline EqualsConstraint<bool> IsFalse()$/;"	f	namespace:snowhouse
IsFalse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  inline EqualsConstraint<bool> IsFalse()$/;"	f	namespace:snowhouse
IsGreaterThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^  inline IsGreaterThanConstraint<ExpectedType> IsGreaterThan(const ExpectedType& expected)$/;"	f	namespace:snowhouse
IsGreaterThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^  inline IsGreaterThanConstraint<std::string> IsGreaterThan(const char* expected)$/;"	f	namespace:snowhouse
IsGreaterThan	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^  inline IsGreaterThanConstraint<ExpectedType> IsGreaterThan(const ExpectedType& expected)$/;"	f	namespace:snowhouse
IsGreaterThan	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^  inline IsGreaterThanConstraint<std::string> IsGreaterThan(const char* expected)$/;"	f	namespace:snowhouse
IsGreaterThanConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^    IsGreaterThanConstraint(const ExpectedType& expected)$/;"	f	struct:snowhouse::IsGreaterThanConstraint
IsGreaterThanConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^  struct IsGreaterThanConstraint : Expression< IsGreaterThanConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
IsGreaterThanConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^    IsGreaterThanConstraint(const ExpectedType& expected)$/;"	f	struct:snowhouse::IsGreaterThanConstraint
IsGreaterThanConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^  struct IsGreaterThanConstraint : Expression< IsGreaterThanConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
IsGreaterThanOrEqualTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^  inline IsGreaterThanOrEqualToConstraint<ExpectedType> IsGreaterThanOrEqualTo(const ExpectedType& expected)$/;"	f	namespace:snowhouse
IsGreaterThanOrEqualTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^  inline IsGreaterThanOrEqualToConstraint<std::string> IsGreaterThanOrEqualTo(const char* expected)$/;"	f	namespace:snowhouse
IsGreaterThanOrEqualToConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^    IsGreaterThanOrEqualToConstraint(const ExpectedType& expected)$/;"	f	struct:snowhouse::IsGreaterThanOrEqualToConstraint
IsGreaterThanOrEqualToConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^  struct IsGreaterThanOrEqualToConstraint : Expression < IsGreaterThanOrEqualToConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
IsLessThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^  inline IsLessThanConstraint<ExpectedType> IsLessThan(const ExpectedType& expected)$/;"	f	namespace:snowhouse
IsLessThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^  inline IsLessThanConstraint<std::string> IsLessThan(const char* expected)$/;"	f	namespace:snowhouse
IsLessThan	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^  inline IsLessThanConstraint<ExpectedType> IsLessThan(const ExpectedType& expected)$/;"	f	namespace:snowhouse
IsLessThan	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^  inline IsLessThanConstraint<std::string> IsLessThan(const char* expected)$/;"	f	namespace:snowhouse
IsLessThanConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^    IsLessThanConstraint(const ExpectedType& expected)$/;"	f	struct:snowhouse::IsLessThanConstraint
IsLessThanConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^  struct IsLessThanConstraint : Expression< IsLessThanConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
IsLessThanConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^    IsLessThanConstraint(const ExpectedType& expected)$/;"	f	struct:snowhouse::IsLessThanConstraint
IsLessThanConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^  struct IsLessThanConstraint : Expression< IsLessThanConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
IsLessThanOrEqualTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^  inline IsLessThanOrEqualToConstraint<ExpectedType> IsLessThanOrEqualTo(const ExpectedType& expected)$/;"	f	namespace:snowhouse
IsLessThanOrEqualTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^  inline IsLessThanOrEqualToConstraint<std::string> IsLessThanOrEqualTo(const char* expected)$/;"	f	namespace:snowhouse
IsLessThanOrEqualToConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^    IsLessThanOrEqualToConstraint(const ExpectedType& expected)$/;"	f	struct:snowhouse::IsLessThanOrEqualToConstraint
IsLessThanOrEqualToConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^  struct IsLessThanOrEqualToConstraint : Expression < IsLessThanOrEqualToConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
IsNull	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  inline EqualsConstraint<std::nullptr_t> IsNull()$/;"	f	namespace:snowhouse
IsTrue	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  inline EqualsConstraint<bool> IsTrue()$/;"	f	namespace:snowhouse
IsTrue	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  inline EqualsConstraint<bool> IsTrue()$/;"	f	namespace:snowhouse
LastException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^  inline ExceptionType& LastException()$/;"	f	namespace:snowhouse
LastException	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^  inline ExceptionType& LastException()$/;"	f	namespace:snowhouse
LessThan	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    LessThan(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
LessThan	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    LessThan(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
LessThanOrEqualTo	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^		LessThanOrEqualTo(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
Level	html/sqldb_h/index.html	/^<h3><a name="Level">Level<\/a><\/h3>$/;"	a
LevelNames	src/log.cpp	/^            const char *LevelNames[] = {"UNKNOWN", "ERROR", "WARN", "INFO", "DEBUG", "TRACE"};$/;"	m	namespace:arg3::db::log	file:
LinePartIterator	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    LinePartIterator(const Descriptor usage[]) :$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
LinePartIterator	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  class LinePartIterator$/;"	c	struct:option::PrintUsageImplementation
LinePartIterator	tests/vendor/bandit/bandit/external/optionparser.h	/^    LinePartIterator(const Descriptor usage[]) :$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
LinePartIterator	tests/vendor/bandit/bandit/external/optionparser.h	/^  class LinePartIterator$/;"	c	struct:option::PrintUsageImplementation
LineWrapper	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    LineWrapper(int x1, int x2) :$/;"	f	class:option::PrintUsageImplementation::LineWrapper
LineWrapper	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  class LineWrapper$/;"	c	struct:option::PrintUsageImplementation
LineWrapper	tests/vendor/bandit/bandit/external/optionparser.h	/^    LineWrapper(int x1, int x2) :$/;"	f	class:option::PrintUsageImplementation::LineWrapper
LineWrapper	tests/vendor/bandit/bandit/external/optionparser.h	/^  class LineWrapper$/;"	c	struct:option::PrintUsageImplementation
ListConcat	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct ListConcat$/;"	s	namespace:snowhouse
ListConcat	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct ListConcat<Nil, Nil, ResultList>$/;"	s	namespace:snowhouse
ListConcat	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct ListConcat<Nil, RightList, ResultList>$/;"	s	namespace:snowhouse
ListConcat	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct ListConcat$/;"	s	namespace:snowhouse
ListConcat	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct ListConcat<Nil, Nil, ResultList>$/;"	s	namespace:snowhouse
ListConcat	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct ListConcat<Nil, RightList, ResultList>$/;"	s	namespace:snowhouse
LogicError	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^  int LogicError()$/;"	f	class:ClassWithExceptions
LogicError	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^  int LogicError()$/;"	f	class:ClassWithExceptions
MEMCHECK_FOUND	.vagrant-build/gen/config.h	/^#define	MEMCHECK_FOUND	/;"	d
MEMCHECK_FOUND	debug/gen/config.h	/^#define	MEMCHECK_FOUND	/;"	d
MSC_Builtin_CLZ	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^struct MSC_Builtin_CLZ$/;"	s	namespace:option
MSC_Builtin_CLZ	tests/vendor/bandit/bandit/external/optionparser.h	/^struct MSC_Builtin_CLZ$/;"	s	namespace:option
MYSQL_FOUND	.vagrant-build/gen/config.h	/^#define	MYSQL_FOUND	/;"	d
MYSQL_FOUND	debug/gen/config.h	/^#define	MYSQL_FOUND	/;"	d
MYTAG	html/masterTOC.html	/^<a name="MYTAG"><\/a>$/;"	a
Macro Definition Documentation	html/latex/exception_8h.tex	/^\\subsection{Macro Definition Documentation}$/;"	b
Macro Definition Documentation	latex/exception_8h.tex	/^\\subsection{Macro Definition Documentation}$/;"	b
Macros	html/latex/exception_8h.tex	/^\\subsection*{Macros}$/;"	b
Macros	html/latex/log_8h.tex	/^\\subsection*{Macros}$/;"	b
Macros	latex/exception_8h.tex	/^\\subsection*{Macros}$/;"	b
Macros	latex/log_8h.tex	/^\\subsection*{Macros}$/;"	b
MapTests	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/map_tests.cpp	/^void MapTests()$/;"	f
MapTests	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/map_tests.cpp	/^void MapTests()$/;"	f
MatchProxy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^        explicit MatchProxy(const ValueProxy<T>& value, bool negate_ = false) : _value(value), _negate(negate_) {}$/;"	f	class:bandit::Matchers::MatchProxy
MatchProxy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^    class MatchProxy$/;"	c	namespace:bandit::Matchers
MatchProxy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^        explicit MatchProxy(const ValueProxy<T>& value, bool negate_ = false) : _value(value), _negate(negate_) {}$/;"	f	class:bandit::Matchers::MatchProxy
MatchProxy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^    class MatchProxy$/;"	c	namespace:bandit::Matchers
Matcher	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^        Matcher() {}$/;"	f	class:bandit::Matchers::Matcher
Matcher	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^    class Matcher$/;"	c	namespace:bandit::Matchers
Matcher	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^        Matcher() {}$/;"	f	class:bandit::Matchers::Matcher
Matcher	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^    class Matcher$/;"	c	namespace:bandit::Matchers
MatcherException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^      MatcherException(const std::string& filename, const unsigned linenumber, const std::string& message) : detail::assertion_exception(message, filename, linenumber) {}$/;"	f	class:bandit::Matchers::MatcherException
MatcherException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^    class MatcherException : public detail::assertion_exception$/;"	c	namespace:bandit::Matchers
MatcherException	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^      MatcherException(const std::string& filename, const unsigned linenumber, const std::string& message) : _filename(filename), _linenumber(linenumber), _message(message) {}$/;"	f	class:bandit::Matchers::MatcherException
MatcherException	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^    class MatcherException : public std::exception$/;"	c	namespace:bandit::Matchers
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^namespace bandit { namespace Matchers$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^namespace bandit { namespace Matchers$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^namespace bandit { namespace Matchers$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^namespace bandit { namespace Matchers {$/;"	n	namespace:bandit
Matchers	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^namespace bandit { namespace Matchers$/;"	n	namespace:bandit
Matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^  bool Matches(const int actual) const$/;"	f	struct:IsEvenNumberNoStreamOperator
Matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^  bool Matches(const int actual) const$/;"	f	struct:IsEvenNumberWithStreamOperator
Matches	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^  bool Matches(const int actual) const$/;"	f	struct:IsEvenNumberNoStreamOperator
Matches	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^  bool Matches(const int actual) const$/;"	f	struct:IsEvenNumberWithStreamOperator
Member Data Documentation	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection{Member Data Documentation}$/;"	b
Member Data Documentation	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection{Member Data Documentation}$/;"	b
Member Enumeration Documentation	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection{Member Enumeration Documentation}$/;"	b
Member Enumeration Documentation	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsection{Member Enumeration Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	html/latex/structarg3_1_1db_1_1uri.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql_1_1column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql_1_1stmt__column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres_1_1column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1record.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1row.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1schema.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1schema__factory.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sql__value.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite3__cached__column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite3__column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite3__db.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite_1_1cached__column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite_1_1column.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1statement.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/structarg3_1_1db_1_1uri.tex	/^\\subsection{Member Function Documentation}$/;"	b
Member Function Documentation	latex/structarg3_1_1db_1_1uri__type.tex	/^\\subsection{Member Function Documentation}$/;"	b
Message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/invalidexpressionexception.h	/^    const std::string& Message() const$/;"	f	struct:snowhouse::InvalidExpressionException
Message	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^    const std::string& Message() const$/;"	f	struct:snowhouse::InvalidExpressionException
MoveToNextLine	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static size_t MoveToNextLine(const std::string& str, size_t newline)$/;"	f	struct:snowhouse::StringLineParser
MoveToNextLine	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static size_t MoveToNextLine(const std::string& str, size_t newline)$/;"	f	struct:snowhouse::StringLineParser
NOMINMAX	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^    #define NOMINMAX$/;"	d
NOMINMAX	tests/vendor/bandit/bandit/reporters/colorizer.h	/^    #define NOMINMAX$/;"	d
NO_COLOR	libs/variant/tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
NO_COLOR	tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
NULLTYPE	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
NUMBER	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
Namespace Documentation	latex/refman.tex	/^\\chapter{Namespace Documentation}$/;"	c
Namespace Index	latex/refman.tex	/^\\chapter{Namespace Index}$/;"	c
Namespace List	latex/namespaces.tex	/^\\section{Namespace List}$/;"	s
Nil	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    Nil() {}$/;"	f	struct:snowhouse::Nil
Nil	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    Nil(const Nil&) {}$/;"	f	struct:snowhouse::Nil
Nil	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct Nil $/;"	s	namespace:snowhouse
Nil	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    Nil() {}$/;"	f	struct:snowhouse::Nil
Nil	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    Nil(const Nil&) {}$/;"	f	struct:snowhouse::Nil
Nil	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct Nil $/;"	s	namespace:snowhouse
NoError	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^  void NoError()$/;"	f	class:ClassWithExceptions
NoError	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^  void NoError()$/;"	f	class:ClassWithExceptions
None	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, NoneOperatorNode>::t> None()$/;"	f	struct:snowhouse::ExpressionBuilder
None	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static ArgStatus None(const Option&, bool)$/;"	f	struct:option::Arg
None	src/sqldb.h	/^                None = 0,$/;"	e	enum:arg3::db::log::__anon8
None	src/sqlite/db.h	/^                typedef enum { None, ResultSet, Row, Column } level;$/;"	e	enum:arg3::db::sqlite::cache::__anon9
None	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, NoneOperatorNode>::t> None()$/;"	f	struct:snowhouse::ExpressionBuilder
None	tests/vendor/bandit/bandit/external/optionparser.h	/^  static ArgStatus None(const Option&, bool)$/;"	f	struct:option::Arg
NoneOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^   struct NoneOperator : public CollectionOperator$/;"	s	namespace:snowhouse
NoneOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^   struct NoneOperator : public CollectionOperator$/;"	s	namespace:snowhouse
NoneOperatorNode	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<NoneOperator, Nil> NoneOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
NoneOperatorNode	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<NoneOperator, Nil> NoneOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
Not	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, NotOperatorNode>::t> Not()$/;"	f	struct:snowhouse::ExpressionBuilder
Not	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, NotOperatorNode>::t> Not()$/;"	f	struct:snowhouse::ExpressionBuilder
NotExpression	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^    NotExpression(const ExpressionType& expression)$/;"	f	struct:snowhouse::NotExpression
NotExpression	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^  struct NotExpression : Expression< NotExpression<ExpressionType> >$/;"	s	namespace:snowhouse
NotExpression	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^    NotExpression(const ExpressionType& expression)$/;"	f	struct:snowhouse::NotExpression
NotExpression	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^  struct NotExpression : Expression< NotExpression<ExpressionType> >$/;"	s	namespace:snowhouse
NotOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^  struct NotOperator : public ConstraintOperator$/;"	s	namespace:snowhouse
NotOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^  struct NotOperator : public ConstraintOperator$/;"	s	namespace:snowhouse
NotOperatorNode	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<NotOperator, Nil> NotOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
NotOperatorNode	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<NotOperator, Nil> NotOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
Null	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      Null()$/;"	f	struct:snowhouse::ExpressionBuilder
ONLY	libs/variant/tests/vendor/bandit/bandit/options.h	/^          FORMATTER, SKIP, ONLY, BREAK_ON_FAILURE };$/;"	e	enum:bandit::detail::options::option_index
ONLY	tests/vendor/bandit/bandit/options.h	/^          FORMATTER, SKIP, ONLY };$/;"	e	enum:bandit::detail::options::option_index
OPTIONPARSER_H_	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^#define OPTIONPARSER_H_$/;"	d
OPTIONPARSER_H_	tests/vendor/bandit/bandit/external/optionparser.h	/^#define OPTIONPARSER_H_$/;"	d
OStreamWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    OStreamWriter(OStream& o) :$/;"	f	struct:option::PrintUsageImplementation::OStreamWriter
OStreamWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  struct OStreamWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
OStreamWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^    OStreamWriter(OStream& o) :$/;"	f	struct:option::PrintUsageImplementation::OStreamWriter
OStreamWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^  struct OStreamWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
OfLength	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      OfLength(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
OfLength	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      OfLength(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
OperatorStack	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  typedef std::stack<ConstraintOperator*> OperatorStack;$/;"	t	namespace:snowhouse
OperatorStack	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  typedef std::stack<ConstraintOperator*> OperatorStack;$/;"	t	namespace:snowhouse
OperatorTests	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/operator_tests.cpp	/^void OperatorTests()$/;"	f
OperatorTests	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/operator_tests.cpp	/^void OperatorTests()$/;"	f
Option	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option() :$/;"	f	class:option::Option
Option	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option(const Descriptor* desc_, const char* name_, const char* arg_)$/;"	f	class:option::Option
Option	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option(const Option& orig)$/;"	f	class:option::Option
Option	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^class Option$/;"	c	namespace:option
Option	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option() :$/;"	f	class:option::Option
Option	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option(const Descriptor* desc_, const char* name_, const char* arg_)$/;"	f	class:option::Option
Option	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option(const Option& orig)$/;"	f	class:option::Option
Option	tests/vendor/bandit/bandit/external/optionparser.h	/^class Option$/;"	c	namespace:option
Optional	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static ArgStatus Optional(const Option& option, bool)$/;"	f	struct:option::Arg
Optional	tests/vendor/bandit/bandit/external/optionparser.h	/^  static ArgStatus Optional(const Option& option, bool)$/;"	f	struct:option::Arg
Or	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, OrOperatorNode>::t> Or()$/;"	f	struct:snowhouse::ExpressionBuilder
Or	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ExpressionBuilder<typename type_concat<ConstraintListType, OrOperatorNode>::t> Or()$/;"	f	struct:snowhouse::ExpressionBuilder
OrExpression	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    OrExpression(const LeftExpression& left, const RightExpression& right)$/;"	f	struct:snowhouse::OrExpression
OrExpression	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^  struct OrExpression : Expression< OrExpression<LeftExpression, RightExpression> >$/;"	s	namespace:snowhouse
OrExpression	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    OrExpression(const LeftExpression& left, const RightExpression& right)$/;"	f	struct:snowhouse::OrExpression
OrExpression	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^  struct OrExpression : Expression< OrExpression<LeftExpression, RightExpression> >$/;"	s	namespace:snowhouse
OrOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^  struct OrOperator : public ConstraintOperator$/;"	s	namespace:snowhouse
OrOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^  struct OrOperator : public ConstraintOperator$/;"	s	namespace:snowhouse
OrOperatorNode	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<OrOperator, Nil> OrOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
OrOperatorNode	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    typedef ConstraintList<OrOperator, Nil> OrOperatorNode;$/;"	t	struct:snowhouse::ExpressionBuilder
PACKAGE_NAME	.vagrant-build/gen/config.h	/^#define PACKAGE_NAME	/;"	d
PACKAGE_NAME	debug/gen/config.h	/^#define PACKAGE_NAME	/;"	d
PACKAGE_NAME	src/postgres/binding.cpp	/^#undef PACKAGE_NAME$/;"	d	file:
PACKAGE_NAME	tests/postgres_column.test.cpp	/^#undef PACKAGE_NAME$/;"	d	file:
PACKAGE_VERSION	.vagrant-build/gen/config.h	/^#define PACKAGE_VERSION	/;"	d
PACKAGE_VERSION	debug/gen/config.h	/^#define PACKAGE_VERSION	/;"	d
PACKAGE_VERSION	src/postgres/binding.cpp	/^#undef PACKAGE_VERSION$/;"	d	file:
PACKAGE_VERSION	tests/postgres_column.test.cpp	/^#undef PACKAGE_VERSION$/;"	d	file:
PLATFORM_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
POSTGRES_DB_H	src/postgres/db.h	/^#define POSTGRES_DB_H$/;"	d
Parse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static void Parse(const std::string& str, std::vector<std::string>& res)$/;"	f	struct:snowhouse::StringLineParser
Parse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static void Parse(const std::string& str, std::vector<std::string>& res)$/;"	f	struct:snowhouse::StringLineParser
Parser	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser() :$/;"	f	class:option::Parser
Parser	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser(bool gnu, const Descriptor usage[], int argc, char** argv, Option options[], Option buffer[],$/;"	f	class:option::Parser
Parser	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser(bool gnu, const Descriptor usage[], int argc, const char** argv, Option options[], Option buffer[],$/;"	f	class:option::Parser
Parser	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser(const Descriptor usage[], int argc, char** argv, Option options[], Option buffer[], int min_abbr_len = 0,$/;"	f	class:option::Parser
Parser	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser(const Descriptor usage[], int argc, const char** argv, Option options[], Option buffer[], int min_abbr_len = 0,$/;"	f	class:option::Parser
Parser	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^class Parser$/;"	c	namespace:option
Parser	tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser() :$/;"	f	class:option::Parser
Parser	tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser(bool gnu, const Descriptor usage[], int argc, char** argv, Option options[], Option buffer[],$/;"	f	class:option::Parser
Parser	tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser(bool gnu, const Descriptor usage[], int argc, const char** argv, Option options[], Option buffer[],$/;"	f	class:option::Parser
Parser	tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser(const Descriptor usage[], int argc, char** argv, Option options[], Option buffer[], int min_abbr_len = 0,$/;"	f	class:option::Parser
Parser	tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser(const Descriptor usage[], int argc, const char** argv, Option options[], Option buffer[], int min_abbr_len = 0,$/;"	f	class:option::Parser
Parser	tests/vendor/bandit/bandit/external/optionparser.h	/^class Parser$/;"	c	namespace:option
PerformOperation	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^    void PerformOperation(ResultStack& result)$/;"	f	struct:snowhouse::AndOperator
PerformOperation	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^      void PerformOperation(ResultStack&)$/;"	f	struct:snowhouse::CollectionOperator
PerformOperation	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^    void PerformOperation(ResultStack& result)$/;"	f	struct:snowhouse::NotOperator
PerformOperation	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^    void PerformOperation(ResultStack& result)$/;"	f	struct:snowhouse::OrOperator
PerformOperation	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^    void PerformOperation(ResultStack& result)$/;"	f	struct:snowhouse::AndOperator
PerformOperation	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^      void PerformOperation(ResultStack&)$/;"	f	struct:snowhouse::CollectionOperator
PerformOperation	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^    void PerformOperation(ResultStack& result)$/;"	f	struct:snowhouse::NotOperator
PerformOperation	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^    void PerformOperation(ResultStack& result)$/;"	f	struct:snowhouse::OrOperator
PostgreSQL_FOUND	.vagrant-build/gen/config.h	/^#define 	PostgreSQL_FOUND	/;"	d
PostgreSQL_FOUND	debug/gen/config.h	/^#define 	PostgreSQL_FOUND	/;"	d
Precedence	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^    int Precedence() const$/;"	f	struct:snowhouse::AndOperator
Precedence	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^      int Precedence() const$/;"	f	struct:snowhouse::CollectionOperator
Precedence	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^    int Precedence() const$/;"	f	struct:snowhouse::NotOperator
Precedence	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^    int Precedence() const$/;"	f	struct:snowhouse::OrOperator
Precedence	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^    int Precedence() const$/;"	f	struct:snowhouse::AndOperator
Precedence	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^      int Precedence() const$/;"	f	struct:snowhouse::CollectionOperator
Precedence	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^    int Precedence() const$/;"	f	struct:snowhouse::NotOperator
Precedence	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^    int Precedence() const$/;"	f	struct:snowhouse::OrOperator
PrintUsageImplementation	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^struct PrintUsageImplementation$/;"	s	namespace:option
PrintUsageImplementation	tests/vendor/bandit/bandit/external/optionparser.h	/^struct PrintUsageImplementation$/;"	s	namespace:option
Protected Attributes	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	html/latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	html/latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1query.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1sqlite3__db.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Attributes	latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection*{Protected Attributes}$/;"	b
Protected Member Functions	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsection*{Protected Member Functions}$/;"	b
Protected Member Functions	html/latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsection*{Protected Member Functions}$/;"	b
Protected Member Functions	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\subsection*{Protected Member Functions}$/;"	b
Protected Member Functions	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsection*{Protected Member Functions}$/;"	b
Protected Member Functions	latex/classarg3_1_1db_1_1query.tex	/^\\subsection*{Protected Member Functions}$/;"	b
Protected Member Functions	latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsection*{Protected Member Functions}$/;"	b
Protected Types	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\subsection*{Protected Types}$/;"	b
Public Attributes	html/latex/structarg3_1_1db_1_1column__definition.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Attributes	html/latex/structarg3_1_1db_1_1uri.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Attributes	latex/structarg3_1_1db_1_1column__definition.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Attributes	latex/structarg3_1_1db_1_1uri.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Attributes	latex/structarg3_1_1db_1_1uri__type.tex	/^\\subsection*{Public Attributes}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1bindable.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1join__clause.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1resultset__iterator.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1schema.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1schema__factory.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/classarg3_1_1db_1_1where__clause.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	html/latex/structarg3_1_1db_1_1uri.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1join__clause.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql_1_1column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql_1_1stmt__column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__cached__column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres_1_1column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres__cached__resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres__cached__row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres__resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres__row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1record.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1resultset__iterator.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1schema.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1schema__factory.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sql__value.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite3__cached__column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite3__cached__resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite3__cached__row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite3__column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite3__db.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite3__resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite3__row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite_1_1cached__column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite_1_1column.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1statement.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1update__query.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/classarg3_1_1db_1_1where__clause.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/structarg3_1_1db_1_1helper_1_1mysql__res__delete.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/structarg3_1_1db_1_1helper_1_1postgres__res__delete.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/structarg3_1_1db_1_1mysql_1_1helper_1_1res__delete.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/structarg3_1_1db_1_1postgres_1_1helper_1_1res__delete.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/structarg3_1_1db_1_1sqlite3__stmt__delete.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/structarg3_1_1db_1_1sqlite_1_1helper_1_1stmt__delete.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/structarg3_1_1db_1_1uri.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Member Functions	latex/structarg3_1_1db_1_1uri__type.tex	/^\\subsection*{Public Member Functions}$/;"	b
Public Types	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	html/latex/classarg3_1_1db_1_1row.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	html/latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1join__clause.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1record.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1row.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection*{Public Types}$/;"	b
Public Types	latex/classarg3_1_1db_1_1statement.tex	/^\\subsection*{Public Types}$/;"	b
REAL	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
REPORTER	libs/variant/tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
REPORTER	tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
RM	.vagrant-build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	.vagrant-build/libs/variant/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	.vagrant-build/libs/variant/src/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	.vagrant-build/libs/variant/tests/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	.vagrant-build/src/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	.vagrant-build/tests/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	debug/Makefile	/^RM = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake -E remove -f$/;"	m
RM	debug/libs/variant/Makefile	/^RM = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake -E remove -f$/;"	m
RM	debug/libs/variant/src/Makefile	/^RM = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake -E remove -f$/;"	m
RM	debug/libs/variant/tests/Makefile	/^RM = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake -E remove -f$/;"	m
RM	debug/src/Makefile	/^RM = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake -E remove -f$/;"	m
RM	debug/tests/Makefile	/^RM = \/usr\/local\/Cellar\/cmake\/3.4.3\/bin\/cmake -E remove -f$/;"	m
RangeError	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^  double RangeError()$/;"	f	class:ClassWithExceptions
RangeError	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/exceptions_tests.cpp	/^  double RangeError()$/;"	f	class:ClassWithExceptions
ResultSet	src/sqlite/db.h	/^                typedef enum { None, ResultSet, Row, Column } level;$/;"	e	enum:arg3::db::sqlite::cache::__anon9
ResultStack	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  typedef std::stack<bool> ResultStack;$/;"	t	namespace:snowhouse
ResultStack	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  typedef std::stack<bool> ResultStack;$/;"	t	namespace:snowhouse
Row	src/sqlite/db.h	/^                typedef enum { None, ResultSet, Row, Column } level;$/;"	e	enum:arg3::db::sqlite::cache::__anon9
SHELL	.vagrant-build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	.vagrant-build/libs/variant/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	.vagrant-build/libs/variant/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	.vagrant-build/libs/variant/tests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	.vagrant-build/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	.vagrant-build/tests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	debug/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	debug/libs/variant/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	debug/libs/variant/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	debug/libs/variant/tests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	debug/src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	debug/tests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SKIP	libs/variant/tests/vendor/bandit/bandit/options.h	/^          FORMATTER, SKIP, ONLY, BREAK_ON_FAILURE };$/;"	e	enum:bandit::detail::options::option_index
SKIP	tests/vendor/bandit/bandit/options.h	/^          FORMATTER, SKIP, ONLY };$/;"	e	enum:bandit::detail::options::option_index
SNOWHOUSE_ASSERT_THAT	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertmacro.h	/^#define SNOWHOUSE_ASSERT_THAT(/;"	d
SNOWHOUSE_ASSERT_THROWS	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^#define SNOWHOUSE_ASSERT_THROWS(/;"	d
SNOWHOUSE_EXAMPLES_TEST_H	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/tests.h	/^#define SNOWHOUSE_EXAMPLES_TEST_H$/;"	d
SNOWHOUSE_EXAMPLES_TEST_H	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/tests.h	/^#define SNOWHOUSE_EXAMPLES_TEST_H$/;"	d
SNOWHOUSE_VERSION	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/snowhouse.h	/^#define SNOWHOUSE_VERSION /;"	d
SNOWHOUSE_VERSION	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/snowhouse.h	/^#define SNOWHOUSE_VERSION /;"	d
SPEC_BEGIN	libs/variant/tests/vendor/bandit/bandit/registration/registrar.h	/^#define SPEC_BEGIN(/;"	d
SPEC_BEGIN	tests/vendor/bandit/bandit/registration/registrar.h	/^#define SPEC_BEGIN(/;"	d
SPEC_END	libs/variant/tests/vendor/bandit/bandit/registration/registrar.h	/^#define SPEC_END /;"	d
SPEC_END	tests/vendor/bandit/bandit/registration/registrar.h	/^#define SPEC_END /;"	d
SQLITE3_FOUND	.vagrant-build/gen/config.h	/^#define	SQLITE3_FOUND	/;"	d
SQLITE3_FOUND	debug/gen/config.h	/^#define	SQLITE3_FOUND	/;"	d
STRING	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
STRINGIFY	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
SUFFIXES	.vagrant-build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	.vagrant-build/libs/variant/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	.vagrant-build/libs/variant/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	.vagrant-build/libs/variant/tests/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	.vagrant-build/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	.vagrant-build/tests/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	debug/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	debug/libs/variant/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	debug/libs/variant/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	debug/libs/variant/tests/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	debug/src/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	debug/tests/Makefile	/^SUFFIXES =$/;"	m
SYSTEM_NAME	.vagrant-build/gen/config.h	/^#define SYSTEM_NAME /;"	d
SYSTEM_NAME	debug/gen/config.h	/^#define SYSTEM_NAME /;"	d
SearchBox	html/html/search/search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchBox	html/search/search.js	/^function SearchBox(name, resultsPath, inFrame, label)$/;"	c
SearchBox.Activate	html/html/search/search.js	/^  this.Activate = function(isActive)$/;"	m
SearchBox.Activate	html/search/search.js	/^  this.Activate = function(isActive)$/;"	m
SearchBox.CloseResultsWindow	html/html/search/search.js	/^  this.CloseResultsWindow = function()$/;"	m
SearchBox.CloseResultsWindow	html/search/search.js	/^  this.CloseResultsWindow = function()$/;"	m
SearchBox.CloseSelectionWindow	html/html/search/search.js	/^  this.CloseSelectionWindow = function()$/;"	m
SearchBox.CloseSelectionWindow	html/search/search.js	/^  this.CloseSelectionWindow = function()$/;"	m
SearchBox.DOMPopupSearchResults	html/html/search/search.js	/^  this.DOMPopupSearchResults = function()$/;"	m
SearchBox.DOMPopupSearchResults	html/search/search.js	/^  this.DOMPopupSearchResults = function()$/;"	m
SearchBox.DOMPopupSearchResultsWindow	html/html/search/search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m
SearchBox.DOMPopupSearchResultsWindow	html/search/search.js	/^  this.DOMPopupSearchResultsWindow = function()$/;"	m
SearchBox.DOMSearchBox	html/html/search/search.js	/^  this.DOMSearchBox = function()$/;"	m
SearchBox.DOMSearchBox	html/search/search.js	/^  this.DOMSearchBox = function()$/;"	m
SearchBox.DOMSearchClose	html/html/search/search.js	/^  this.DOMSearchClose = function()$/;"	m
SearchBox.DOMSearchClose	html/search/search.js	/^  this.DOMSearchClose = function()$/;"	m
SearchBox.DOMSearchField	html/html/search/search.js	/^  this.DOMSearchField = function()$/;"	m
SearchBox.DOMSearchField	html/search/search.js	/^  this.DOMSearchField = function()$/;"	m
SearchBox.DOMSearchSelect	html/html/search/search.js	/^  this.DOMSearchSelect = function()$/;"	m
SearchBox.DOMSearchSelect	html/search/search.js	/^  this.DOMSearchSelect = function()$/;"	m
SearchBox.DOMSearchSelectWindow	html/html/search/search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m
SearchBox.DOMSearchSelectWindow	html/search/search.js	/^  this.DOMSearchSelectWindow = function()$/;"	m
SearchBox.OnSearchFieldChange	html/html/search/search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m
SearchBox.OnSearchFieldChange	html/search/search.js	/^  this.OnSearchFieldChange = function(evt)$/;"	m
SearchBox.OnSearchFieldFocus	html/html/search/search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m
SearchBox.OnSearchFieldFocus	html/search/search.js	/^  this.OnSearchFieldFocus = function(isActive)$/;"	m
SearchBox.OnSearchSelectHide	html/html/search/search.js	/^  this.OnSearchSelectHide = function()$/;"	m
SearchBox.OnSearchSelectHide	html/search/search.js	/^  this.OnSearchSelectHide = function()$/;"	m
SearchBox.OnSearchSelectKey	html/html/search/search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m
SearchBox.OnSearchSelectKey	html/search/search.js	/^  this.OnSearchSelectKey = function(evt)$/;"	m
SearchBox.OnSearchSelectShow	html/html/search/search.js	/^  this.OnSearchSelectShow = function()$/;"	m
SearchBox.OnSearchSelectShow	html/search/search.js	/^  this.OnSearchSelectShow = function()$/;"	m
SearchBox.OnSelectItem	html/html/search/search.js	/^  this.OnSelectItem = function(id)$/;"	m
SearchBox.OnSelectItem	html/search/search.js	/^  this.OnSelectItem = function(id)$/;"	m
SearchBox.Search	html/html/search/search.js	/^  this.Search = function()$/;"	m
SearchBox.Search	html/search/search.js	/^  this.Search = function()$/;"	m
SearchBox.SelectItemCount	html/html/search/search.js	/^  this.SelectItemCount = function(id)$/;"	m
SearchBox.SelectItemCount	html/search/search.js	/^  this.SelectItemCount = function(id)$/;"	m
SearchBox.SelectItemSet	html/html/search/search.js	/^  this.SelectItemSet = function(id)$/;"	m
SearchBox.SelectItemSet	html/search/search.js	/^  this.SelectItemSet = function(id)$/;"	m
SearchResults	html/html/search/search.js	/^function SearchResults(name)$/;"	c
SearchResults	html/search/search.js	/^function SearchResults(name)$/;"	c
SearchResults.FindChildElement	html/html/search/search.js	/^    this.FindChildElement = function(id)$/;"	m
SearchResults.FindChildElement	html/search/search.js	/^    this.FindChildElement = function(id)$/;"	m
SearchResults.Nav	html/html/search/search.js	/^    this.Nav = function(evt,itemIndex)$/;"	m
SearchResults.Nav	html/search/search.js	/^    this.Nav = function(evt,itemIndex)$/;"	m
SearchResults.NavChild	html/html/search/search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m
SearchResults.NavChild	html/search/search.js	/^    this.NavChild = function(evt,itemIndex,childIndex)$/;"	m
SearchResults.NavNext	html/html/search/search.js	/^    this.NavNext = function(index)$/;"	m
SearchResults.NavNext	html/search/search.js	/^    this.NavNext = function(index)$/;"	m
SearchResults.NavPrev	html/html/search/search.js	/^    this.NavPrev = function(index)$/;"	m
SearchResults.NavPrev	html/search/search.js	/^    this.NavPrev = function(index)$/;"	m
SearchResults.ProcessKeys	html/html/search/search.js	/^    this.ProcessKeys = function(e)$/;"	m
SearchResults.ProcessKeys	html/search/search.js	/^    this.ProcessKeys = function(e)$/;"	m
SearchResults.Search	html/html/search/search.js	/^    this.Search = function(search)$/;"	m
SearchResults.Search	html/search/search.js	/^    this.Search = function(search)$/;"	m
SearchResults.Toggle	html/html/search/search.js	/^    this.Toggle = function(id)$/;"	m
SearchResults.Toggle	html/search/search.js	/^    this.Toggle = function(id)$/;"	m
SequenceContainerActual	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/sequence_container_tests.cpp	/^void SequenceContainerActual()$/;"	f
SequenceContainerActual	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/sequence_container_tests.cpp	/^void SequenceContainerActual()$/;"	f
SequenceContainerTests	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/sequence_container_tests.cpp	/^void SequenceContainerTests()$/;"	f
SequenceContainerTests	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/sequence_container_tests.cpp	/^void SequenceContainerTests()$/;"	f
SequentialContainerStringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^      struct SequentialContainerStringizer$/;"	s	namespace:snowhouse::detail
SequentialContainerStringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^      struct SequentialContainerStringizer$/;"	s	namespace:snowhouse::detail
StartingWith	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      StartingWith(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
StartingWith	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      StartingWith(const char* expected)$/;"	f	struct:snowhouse::ExpressionBuilder
StartingWith	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      StartingWith(const ExpectedType& expected)$/;"	f	struct:snowhouse::ExpressionBuilder
StartingWith	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      StartingWith(const char* expected)$/;"	f	struct:snowhouse::ExpressionBuilder
StartsWith	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^  inline StartsWithConstraint<ExpectedType> StartsWith(const ExpectedType& expected)$/;"	f	namespace:snowhouse
StartsWith	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^  inline StartsWithConstraint<std::string> StartsWith(const char* expected)$/;"	f	namespace:snowhouse
StartsWith	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^  inline StartsWithConstraint<ExpectedType> StartsWith(const ExpectedType& expected)$/;"	f	namespace:snowhouse
StartsWith	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^  inline StartsWithConstraint<std::string> StartsWith(const char* expected)$/;"	f	namespace:snowhouse
StartsWithConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^    StartsWithConstraint(const ExpectedType& expected) $/;"	f	struct:snowhouse::StartsWithConstraint
StartsWithConstraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^  struct StartsWithConstraint : Expression< StartsWithConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
StartsWithConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^    StartsWithConstraint(const ExpectedType& expected) $/;"	f	struct:snowhouse::StartsWithConstraint
StartsWithConstraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^  struct StartsWithConstraint : Expression< StartsWithConstraint<ExpectedType> >$/;"	s	namespace:snowhouse
Static Public Attributes	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection*{Static Public Attributes}$/;"	b
Static Public Attributes	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsection*{Static Public Attributes}$/;"	b
Static Public Member Functions	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection*{Static Public Member Functions}$/;"	b
Static Public Member Functions	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsection*{Static Public Member Functions}$/;"	b
Stats	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats() :$/;"	f	struct:option::Stats
Stats	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats(bool gnu, const Descriptor usage[], int argc, char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
Stats	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats(bool gnu, const Descriptor usage[], int argc, const char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
Stats	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats(const Descriptor usage[], int argc, char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
Stats	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats(const Descriptor usage[], int argc, const char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
Stats	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^struct Stats$/;"	s	namespace:option
Stats	tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats() :$/;"	f	struct:option::Stats
Stats	tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats(bool gnu, const Descriptor usage[], int argc, char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
Stats	tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats(bool gnu, const Descriptor usage[], int argc, const char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
Stats	tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats(const Descriptor usage[], int argc, char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
Stats	tests/vendor/bandit/bandit/external/optionparser.h	/^  Stats(const Descriptor usage[], int argc, const char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
Stats	tests/vendor/bandit/bandit/external/optionparser.h	/^struct Stats$/;"	s	namespace:option
StoreLine	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static void StoreLine(const std::string& str, size_t start, size_t end,$/;"	f	struct:snowhouse::StringLineParser
StoreLine	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^  static void StoreLine(const std::string& str, size_t start, size_t end,$/;"	f	struct:snowhouse::StringLineParser
StoreOptionAction	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  StoreOptionAction(Parser& parser_, Option options_[], Option buffer_[], int bufmax_) :$/;"	f	class:option::Parser::StoreOptionAction
StoreOptionAction	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^class Parser::StoreOptionAction: public Parser::Action$/;"	c	class:option::Parser
StoreOptionAction	tests/vendor/bandit/bandit/external/optionparser.h	/^  StoreOptionAction(Parser& parser_, Option options_[], Option buffer_[], int bufmax_) :$/;"	f	class:option::Parser::StoreOptionAction
StoreOptionAction	tests/vendor/bandit/bandit/external/optionparser.h	/^class Parser::StoreOptionAction: public Parser::Action$/;"	c	class:option::Parser
StreamWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    StreamWriter(Function* w, Stream* s) :$/;"	f	struct:option::PrintUsageImplementation::StreamWriter
StreamWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  struct StreamWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
StreamWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^    StreamWriter(Function* w, Stream* s) :$/;"	f	struct:option::PrintUsageImplementation::StreamWriter
StreamWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^  struct StreamWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
StringLineParser	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^struct StringLineParser$/;"	s	namespace:snowhouse
StringLineParser	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^struct StringLineParser$/;"	s	namespace:snowhouse
StringLineTests	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/string_line_tests.cpp	/^void StringLineTests()$/;"	f
StringLineTests	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/string_line_tests.cpp	/^void StringLineTests()$/;"	f
StringTests	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/string_tests.cpp	/^void StringTests()$/;"	f
StringTests	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/string_tests.cpp	/^void StringTests()$/;"	f
Stringize	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^  std::string Stringize(const T& value)$/;"	f	namespace:snowhouse
Stringize	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^  std::string Stringize(const T& value)$/;"	f	namespace:snowhouse
StringizeConstraintList	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  inline void StringizeConstraintList(const Nil&, std::ostringstream&)$/;"	f	namespace:snowhouse
StringizeConstraintList	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  inline void StringizeConstraintList(const T& list, std::ostringstream& stm)$/;"	f	namespace:snowhouse
StringizeConstraintList	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  inline void StringizeConstraintList(const Nil&, std::ostringstream&)$/;"	f	namespace:snowhouse
StringizeConstraintList	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  inline void StringizeConstraintList(const T& list, std::ostringstream& stm)$/;"	f	namespace:snowhouse
StringizeTests	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^void StringizeTests()$/;"	f
StringizeTests	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^void StringizeTests()$/;"	f
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  struct Stringizer< WithoutStreamOperatorButWithStringizer >$/;"	s	namespace:snowhouse	file:
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  struct Stringizer< ContainsConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^  struct Stringizer< EndsWithConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  struct Stringizer< EqualsConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  struct Stringizer< EqualsConstraint< bool > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    struct Stringizer< EqualsContainerConstraint<ExpectedType, BinaryPredicate> >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^  struct Stringizer< EqualsWithDeltaConstraint< ExpectedType, DeltaType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^  struct Stringizer< AndExpression<LeftExpression, RightExpression> >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^  struct Stringizer< NotExpression<ExpressionType> >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^  struct Stringizer< OrExpression<LeftExpression, RightExpression> >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^  struct Stringizer< FulfillsConstraint< MatcherType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  struct Stringizer< HasLengthConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^  struct Stringizer< IsGreaterThanConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^  struct Stringizer < IsGreaterThanOrEqualToConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^  struct Stringizer< IsLessThanConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^  struct Stringizer < IsLessThanOrEqualToConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^  struct Stringizer< StartsWithConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^  struct Stringizer< ConstraintAdapter<ConstraintType> >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  struct Stringizer< ExpressionBuilder<ConstraintListType> >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^   struct Stringizer<AndOperator>$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^   struct Stringizer<AllOperator>$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^   struct Stringizer<AtLeastOperator>$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^   struct Stringizer<AtMostOperator>$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^  struct Stringizer< ExactlyOperator >$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^   struct Stringizer<NoneOperator>$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^   struct Stringizer<NotOperator>$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^  struct Stringizer<OrOperator>$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^  struct Stringizer$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^  struct Stringizer<std::nullptr_t>$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^    struct Stringizer<std::deque<T> > : detail::SequentialContainerStringizer<$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^    struct Stringizer<std::list<T> > : detail::SequentialContainerStringizer<$/;"	s	namespace:snowhouse
Stringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^    struct Stringizer<std::vector<T> > : detail::SequentialContainerStringizer<$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  struct Stringizer< WithoutStreamOperatorButWithStringizer >$/;"	s	namespace:snowhouse	file:
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  struct Stringizer< ContainsConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^  struct Stringizer< EndsWithConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  struct Stringizer< EqualsConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^  struct Stringizer< EqualsConstraint< bool > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    struct Stringizer< EqualsContainerConstraint<ExpectedType, BinaryPredicate> >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^  struct Stringizer< EqualsWithDeltaConstraint< ExpectedType, DeltaType > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^  struct Stringizer< AndExpression<LeftExpression, RightExpression> >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^  struct Stringizer< NotExpression<ExpressionType> >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^  struct Stringizer< OrExpression<LeftExpression, RightExpression> >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^  struct Stringizer< FulfillsConstraint< MatcherType > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^  struct Stringizer< HasLengthConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^  struct Stringizer< IsGreaterThanConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^  struct Stringizer< IsLessThanConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^  struct Stringizer< StartsWithConstraint< ExpectedType > >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^  struct Stringizer< ConstraintAdapter<ConstraintType> >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^  struct Stringizer< ExpressionBuilder<ConstraintListType> >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^   struct Stringizer<AndOperator>$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^   struct Stringizer<AllOperator>$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^   struct Stringizer<AtLeastOperator>$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^   struct Stringizer<AtMostOperator>$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^  struct Stringizer< ExactlyOperator >$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^   struct Stringizer<NoneOperator>$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^   struct Stringizer<NotOperator>$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^  struct Stringizer<OrOperator>$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^  struct Stringizer$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^    struct Stringizer<std::deque<T> > : detail::SequentialContainerStringizer<$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^    struct Stringizer<std::list<T> > : detail::SequentialContainerStringizer<$/;"	s	namespace:snowhouse
Stringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^    struct Stringizer<std::vector<T> > : detail::SequentialContainerStringizer<$/;"	s	namespace:snowhouse
SyscallWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    SyscallWriter(Syscall* w, int f) :$/;"	f	struct:option::PrintUsageImplementation::SyscallWriter
SyscallWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  struct SyscallWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
SyscallWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^    SyscallWriter(Syscall* w, int f) :$/;"	f	struct:option::PrintUsageImplementation::SyscallWriter
SyscallWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^  struct SyscallWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
TABLE_NAME	tests/db.test.h	/^    constexpr static const char *const TABLE_NAME = "users";$/;"	m	class:user
TEST_SIZE	tests/stress.test.cpp	/^#define TEST_SIZE /;"	d	file:
TIME	src/sql_value.h	/^            typedef enum { DATE, TIME, TIMESTAMP, DATETIME } formats;$/;"	e	enum:arg3::db::sql_time::__anon7
TIMESTAMP	src/sql_value.h	/^            typedef enum { DATE, TIME, TIMESTAMP, DATETIME } formats;$/;"	e	enum:arg3::db::sql_time::__anon7
TYPE_NAMES	libs/variant/src/variant.cpp	/^    const char *const variant::TYPE_NAMES[] = {"nulltype", "number", "unumber", "real", "binary", "string", "wstring", "char", "wchar", "bool"};$/;"	m	class:arg3::variant	file:
TYPE_NAMES	libs/variant/src/variant.h	/^        static const char *const TYPE_NAMES[];$/;"	m	class:arg3::variant
TailType	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    typedef TT TailType;$/;"	t	struct:snowhouse::ConstraintList
TailType	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    typedef TT TailType;$/;"	t	struct:snowhouse::ConstraintList
TemporaryWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    TemporaryWriter(const Temporary& u) :$/;"	f	struct:option::PrintUsageImplementation::TemporaryWriter
TemporaryWriter	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  struct TemporaryWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
TemporaryWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^    TemporaryWriter(const Temporary& u) :$/;"	f	struct:option::PrintUsageImplementation::TemporaryWriter
TemporaryWriter	tests/vendor/bandit/bandit/external/optionparser.h	/^  struct TemporaryWriter: public IStringWriter$/;"	s	struct:option::PrintUsageImplementation
That	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(bool actual)$/;"	f	class:snowhouse::ConfigurableAssert
That	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const ActualType& actual, ExpressionBuilder<ConstraintListType> expression)$/;"	f	class:snowhouse::ConfigurableAssert
That	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const ActualType& actual, ExpressionBuilder<ConstraintListType> expression, const char* file_name, int line_number)$/;"	f	class:snowhouse::ConfigurableAssert
That	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const ActualType& actual, const ExpressionType& expression)$/;"	f	class:snowhouse::ConfigurableAssert
That	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const ActualType& actual, const ExpressionType& expression, const char* file_name, int line_number)$/;"	f	class:snowhouse::ConfigurableAssert
That	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const char* actual, ExpressionBuilder<ConstraintListType> expression)$/;"	f	class:snowhouse::ConfigurableAssert
That	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const char* actual, const ExpressionType& expression)$/;"	f	class:snowhouse::ConfigurableAssert
That	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(bool actual)$/;"	f	class:snowhouse::Assert
That	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const ActualType& actual, ExpressionBuilder<ConstraintListType> expression)$/;"	f	class:snowhouse::Assert
That	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const ActualType& actual, ExpressionBuilder<ConstraintListType> expression, const char* file_name, int line_number)$/;"	f	class:snowhouse::Assert
That	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const ActualType& actual, const ExpressionType& expression)$/;"	f	class:snowhouse::Assert
That	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const ActualType& actual, const ExpressionType& expression, const char* file_name, int line_number)$/;"	f	class:snowhouse::Assert
That	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const char* actual, ExpressionBuilder<ConstraintListType> expression)$/;"	f	class:snowhouse::Assert
That	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^      static void That(const char* actual, const ExpressionType& expression)$/;"	f	class:snowhouse::Assert
ThrowException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        ThrowException() : Matcher(), _allow_subclasses(false) {}$/;"	f	class:bandit::Matchers::ThrowException
ThrowException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        explicit ThrowException(bool allow_subclasses) : Matcher(), _allow_subclasses(allow_subclasses) {}$/;"	f	class:bandit::Matchers::ThrowException
ThrowException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^    class ThrowException : public Matcher$/;"	c	namespace:bandit::Matchers
ThrowException	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        ThrowException() : Matcher(), _allow_subclasses(false) {}$/;"	f	class:bandit::Matchers::ThrowException
ThrowException	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        explicit ThrowException(bool allow_subclasses) : Matcher(), _allow_subclasses(allow_subclasses) {}$/;"	f	class:bandit::Matchers::ThrowException
ThrowException	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^    class ThrowException : public Matcher$/;"	c	namespace:bandit::Matchers
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    static std::string ToString(const WithoutStreamOperatorButWithStringizer& value)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    static std::string ToString(const ContainsConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^    static std::string ToString(const EndsWithConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    static std::string ToString(const EqualsConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    static std::string ToString(const EqualsConstraint<bool>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^      static std::string ToString(const EqualsContainerConstraint<ExpectedType, BinaryPredicate>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    static std::string ToString(const EqualsWithDeltaConstraint<ExpectedType, DeltaType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    static std::string ToString(const AndExpression<LeftExpression, RightExpression>& expression)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^    static std::string ToString(const NotExpression<ExpressionType>& expression)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    static std::string ToString(const OrExpression<LeftExpression, RightExpression>& expression)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^    static std::string ToString(const FulfillsConstraint<MatcherType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^    static std::string ToString(const HasLengthConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^    static std::string ToString(const IsGreaterThanConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^    static std::string ToString(const IsGreaterThanOrEqualToConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^    static std::string ToString(const IsLessThanConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^    static std::string ToString(const IsLessThanOrEqualToConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^    static std::string ToString(const StartsWithConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^    static std::string ToString(const ConstraintAdapter<ConstraintType>& constraintAdapter)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    static std::string ToString(const ExpressionBuilder<ConstraintListType>& builder)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^      static std::string ToString(const AndOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^      static std::string ToString(const AllOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^      static std::string ToString(const AtLeastOperator& op)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^      static std::string ToString(const AtMostOperator& op)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^    static std::string ToString(const ExactlyOperator& op)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^      static std::string ToString(const NoneOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^      static std::string ToString(const NotOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^    static std::string ToString(const OrOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^      static std::string ToString(const T& value)$/;"	f	struct:snowhouse::detail::DefaultStringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^      static std::string ToString(const T&)$/;"	f	struct:snowhouse::detail::DefaultStringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    static std::string ToString(const T& value)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    static std::string ToString(std::nullptr_t)$/;"	f	struct:snowhouse::Stringizer
ToString	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^        ToString(const Container& cont)$/;"	f	struct:snowhouse::detail::SequentialContainerStringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    static std::string ToString(const WithoutStreamOperatorButWithStringizer& value)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    static std::string ToString(const ContainsConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^    static std::string ToString(const EndsWithConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    static std::string ToString(const EqualsConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    static std::string ToString(const EqualsConstraint<bool>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^      static std::string ToString(const EqualsContainerConstraint<ExpectedType, BinaryPredicate>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    static std::string ToString(const EqualsWithDeltaConstraint<ExpectedType, DeltaType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    static std::string ToString(const AndExpression<LeftExpression, RightExpression>& expression)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^    static std::string ToString(const NotExpression<ExpressionType>& expression)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    static std::string ToString(const OrExpression<LeftExpression, RightExpression>& expression)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^    static std::string ToString(const FulfillsConstraint<MatcherType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^    static std::string ToString(const HasLengthConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^    static std::string ToString(const IsGreaterThanConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^    static std::string ToString(const IsLessThanConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^    static std::string ToString(const StartsWithConstraint<ExpectedType>& constraint)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^    static std::string ToString(const ConstraintAdapter<ConstraintType>& constraintAdapter)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    static std::string ToString(const ExpressionBuilder<ConstraintListType>& builder)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^      static std::string ToString(const AndOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^      static std::string ToString(const AllOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^      static std::string ToString(const AtLeastOperator& op)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^      static std::string ToString(const AtMostOperator& op)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^    static std::string ToString(const ExactlyOperator& op)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^      static std::string ToString(const NoneOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^      static std::string ToString(const NotOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^    static std::string ToString(const OrOperator&)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^      static std::string ToString(const T& value)$/;"	f	struct:snowhouse::detail::DefaultStringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^      static std::string ToString(const T&)$/;"	f	struct:snowhouse::detail::DefaultStringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    static std::string ToString(const T& value)$/;"	f	struct:snowhouse::Stringizer
ToString	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^        ToString(const Container& cont)$/;"	f	struct:snowhouse::detail::SequentialContainerStringizer
Trace	src/sqldb.h	/^                Trace = 5$/;"	e	enum:arg3::db::log::__anon8
True	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      True()$/;"	f	struct:snowhouse::ExpressionBuilder
True	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^      True()$/;"	f	struct:snowhouse::ExpressionBuilder
UNKNOWN	libs/variant/tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
UNKNOWN	tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
UNUMBER	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
VERSION	libs/variant/tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
VERSION	tests/mysql_binding.test.cpp	/^#undef VERSION$/;"	d	file:
VERSION	tests/mysql_column.test.cpp	/^#undef VERSION$/;"	d	file:
VERSION	tests/mysql_db.test.cpp	/^#undef VERSION$/;"	d	file:
VERSION	tests/mysql_resultset.test.cpp	/^#undef VERSION$/;"	d	file:
VERSION	tests/mysql_row.test.cpp	/^#undef VERSION$/;"	d	file:
VERSION	tests/mysql_statement.test.cpp	/^#undef VERSION$/;"	d	file:
VERSION	tests/postgres_binding.test.cpp	/^#undef VERSION$/;"	d	file:
VERSION	tests/postgres_db.test.cpp	/^#undef VERSION$/;"	d	file:
VERSION	tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	e	enum:bandit::detail::options::option_index
ValueMarker	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^    struct ValueMarker$/;"	s	namespace:bandit::Matchers
ValueMarker	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^    struct ValueMarker$/;"	s	namespace:bandit::Matchers
ValueProxy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        explicit ValueProxy(const char* filename, int lineNumber, const T& value) : to(*this), to_not(*this, true), _value(value), _filename(filename), _lineNumber(lineNumber) {}$/;"	f	class:bandit::Matchers::ValueProxy
ValueProxy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^    class ValueProxy$/;"	c	namespace:bandit::Matchers
ValueProxy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        explicit ValueProxy(const char* filename, int lineNumber, const T& value) : to(*this), to_not(*this, true), _value(value), _filename(filename), _lineNumber(lineNumber) {}$/;"	f	class:bandit::Matchers::ValueProxy
ValueProxy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^    class ValueProxy$/;"	c	namespace:bandit::Matchers
Variables	latex/log_8h.tex	/^\\subsection*{Variables}$/;"	b
WCHAR	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
WIN32_LEAN_AND_MEAN	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^  #define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	tests/vendor/bandit/bandit/reporters/colorizer.h	/^  #define WIN32_LEAN_AND_MEAN$/;"	d
WSTRING	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	e	enum:arg3::variant::__anon1
Warn	src/sqldb.h	/^                Warn = 2,$/;"	e	enum:arg3::db::log::__anon8
WithStreamOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    WithStreamOperator(int id)$/;"	f	struct:__anon3::WithStreamOperator
WithStreamOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  struct WithStreamOperator : public WithoutStreamOperator$/;"	s	namespace:__anon3	file:
WithStreamOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    WithStreamOperator(int id)$/;"	f	struct:__anon10::WithStreamOperator
WithStreamOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  struct WithStreamOperator : public WithoutStreamOperator$/;"	s	namespace:__anon10	file:
WithoutStreamOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    WithoutStreamOperator(int id)$/;"	f	struct:__anon3::WithoutStreamOperator
WithoutStreamOperator	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  struct WithoutStreamOperator$/;"	s	namespace:__anon3	file:
WithoutStreamOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    WithoutStreamOperator(int id)$/;"	f	struct:__anon10::WithoutStreamOperator
WithoutStreamOperator	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  struct WithoutStreamOperator$/;"	s	namespace:__anon10	file:
WithoutStreamOperatorButWithStringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    WithoutStreamOperatorButWithStringizer(int id)$/;"	f	struct:__anon3::WithoutStreamOperatorButWithStringizer
WithoutStreamOperatorButWithStringizer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  struct WithoutStreamOperatorButWithStringizer : public WithoutStreamOperator$/;"	s	namespace:__anon3	file:
WithoutStreamOperatorButWithStringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    WithoutStreamOperatorButWithStringizer(int id)$/;"	f	struct:__anon10::WithoutStreamOperatorButWithStringizer
WithoutStreamOperatorButWithStringizer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  struct WithoutStreamOperatorButWithStringizer : public WithoutStreamOperator$/;"	s	namespace:__anon10	file:
_ALLOW_KEYWORD_MACROS	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/snowhouse.h	/^#define _ALLOW_KEYWORD_MACROS$/;"	d
_ALLOW_KEYWORD_MACROS	libs/variant/tests/vendor/bandit/bandit/bandit.h	/^#define _ALLOW_KEYWORD_MACROS$/;"	d
_SNOWHOUSE_H_JK_2013_06_28	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/snowhouse.h	/^#define _SNOWHOUSE_H_JK_2013_06_28$/;"	d
_SNOWHOUSE_H_JK_2013_06_28	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/snowhouse.h	/^#define _SNOWHOUSE_H_JK_2013_06_28$/;"	d
__attribute__	src/log.h	/^#define __attribute__(/;"	d
__builtin_clz	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^#define __builtin_clz(/;"	d
__builtin_clz	tests/vendor/bandit/bandit/external/optionparser.h	/^#define __builtin_clz(/;"	d
_allow_subclasses	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        bool	_allow_subclasses;$/;"	m	class:bandit::Matchers::ThrowException
_allow_subclasses	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        bool	_allow_subclasses;$/;"	m	class:bandit::Matchers::ThrowException
_element	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^        const T& _element;$/;"	m	class:bandit::Matchers::Contain
_element	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^        const T& _element;$/;"	m	class:bandit::Matchers::Contain
_exception	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^	mutable std::exception_ptr   _exception;$/;"	m	class:bandit::Matchers::ThrowException
_exception	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^	mutable std::exception_ptr   _exception;$/;"	m	class:bandit::Matchers::ThrowException
_expectedValue	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeCloseTo
_expectedValue	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeGTE
_expectedValue	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeGreaterThan
_expectedValue	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeLTE
_expectedValue	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeLessThan
_expectedValue	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::Equal
_expectedValue	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeCloseTo
_expectedValue	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeGTE
_expectedValue	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeGreaterThan
_expectedValue	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeLTE
_expectedValue	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::BeLessThan
_expectedValue	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^        const T& _expectedValue;$/;"	m	class:bandit::Matchers::Equal
_filename	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        std::string _filename;$/;"	m	class:bandit::Matchers::ValueProxy
_filename	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^	std::string	_filename;$/;"	m	class:bandit::Matchers::MatcherException
_filename	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        std::string _filename;$/;"	m	class:bandit::Matchers::ValueProxy
_lineNumber	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        int         _lineNumber;$/;"	m	class:bandit::Matchers::ValueProxy
_lineNumber	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        int         _lineNumber;$/;"	m	class:bandit::Matchers::ValueProxy
_linenumber	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^	unsigned	_linenumber;$/;"	m	class:bandit::Matchers::MatcherException
_message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^	std::string	_message;$/;"	m	class:bandit::Matchers::MatcherException
_negate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^        bool _negate;$/;"	m	class:bandit::Matchers::MatchProxy
_negate	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^        bool _negate;$/;"	m	class:bandit::Matchers::MatchProxy
_threshold	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        float _threshold;$/;"	m	class:bandit::Matchers::BeCloseTo
_threshold	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        float _threshold;$/;"	m	class:bandit::Matchers::BeCloseTo
_value	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^        const ValueProxy<T>& _value;$/;"	m	class:bandit::Matchers::MatchProxy
_value	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        const T&    _value;$/;"	m	class:bandit::Matchers::ValueProxy
_value	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^        const ValueProxy<T>& _value;$/;"	m	class:bandit::Matchers::MatchProxy
_value	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        const T&    _value;$/;"	m	class:bandit::Matchers::ValueProxy
adapt_exceptions	libs/variant/tests/vendor/bandit/bandit/adapters/snowhouse.h	/^    void adapt_exceptions(detail::voidfunc_t func)$/;"	f	struct:bandit::adapters::snowhouse_adapter
adapt_exceptions	tests/vendor/bandit/bandit/adapters/snowhouse.h	/^    void adapt_exceptions(detail::voidfunc_t func)$/;"	f	struct:bandit::adapters::snowhouse_adapter
adapters	libs/variant/tests/vendor/bandit/bandit/adapters/adapter.h	/^namespace bandit { namespace adapters {$/;"	n	namespace:bandit
adapters	libs/variant/tests/vendor/bandit/bandit/adapters/snowhouse.h	/^namespace bandit { namespace adapters {$/;"	n	namespace:bandit
adapters	tests/vendor/bandit/bandit/adapters/adapter.h	/^namespace bandit { namespace adapters {$/;"	n	namespace:bandit
adapters	tests/vendor/bandit/bandit/adapters/snowhouse.h	/^namespace bandit { namespace adapters {$/;"	n	namespace:bandit
add	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  void add(bool gnu, const Descriptor usage[], int argc, char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
add	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  void add(const Descriptor usage[], int argc, char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
add	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  void add(const Descriptor usage[], int argc, const char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
add	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^inline void Stats::add(bool gnu, const Descriptor usage[], int argc, const char** argv, int min_abbr_len,$/;"	f	class:option::Stats
add	tests/vendor/bandit/bandit/external/optionparser.h	/^  void add(bool gnu, const Descriptor usage[], int argc, char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
add	tests/vendor/bandit/bandit/external/optionparser.h	/^  void add(const Descriptor usage[], int argc, char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
add	tests/vendor/bandit/bandit/external/optionparser.h	/^  void add(const Descriptor usage[], int argc, const char** argv, int min_abbr_len = 0, \/\/$/;"	f	struct:option::Stats
add	tests/vendor/bandit/bandit/external/optionparser.h	/^inline void Stats::add(bool gnu, const Descriptor usage[], int argc, const char** argv, int min_abbr_len,$/;"	f	class:option::Stats
add_effect	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    void add_effect(fuzzbox* effect)$/;"	f	struct:fuzzbox::guitar
add_effect	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    void add_effect(fuzzbox* effect)$/;"	f	struct:fuzzbox::guitar
add_named_param	src/bindable.cpp	/^        void bind_mapping::add_named_param(const std::string &name, unsigned index)$/;"	f	class:arg3::db::bind_mapping
after_each	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void after_each(detail::voidfunc_t func)$/;"	f	namespace:bandit
after_each	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void after_each(detail::voidfunc_t func, $/;"	f	namespace:bandit
after_each	tests/vendor/bandit/bandit/grammar.h	/^  inline void after_each(detail::voidfunc_t func)$/;"	f	namespace:bandit
after_each	tests/vendor/bandit/bandit/grammar.h	/^  inline void after_each(detail::voidfunc_t func, $/;"	f	namespace:bandit
after_eaches_	libs/variant/tests/vendor/bandit/bandit/context.h	/^        std::list<voidfunc_t> after_eaches_;$/;"	m	class:bandit::detail::bandit_context
after_eaches_	tests/vendor/bandit/bandit/context.h	/^        std::list<voidfunc_t> after_eaches_;$/;"	m	class:bandit::detail::bandit_context
alloc.h	html/alloc_h/index.html	/^<h1><a name="alloc.h">alloc.h<\/a><\/h1>$/;"	a
alloc_	libs/variant/src/binary.h	/^        alloc_fn alloc_;$/;"	m	class:arg3::binary
alloc_fn	libs/variant/src/binary.h	/^        typedef void *(*alloc_fn)(size_t);$/;"	t	class:arg3::binary
always_include_policy	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^  struct always_include_policy : public skip_policy$/;"	s	namespace:bandit::detail
always_include_policy	tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^  struct always_include_policy : public skip_policy$/;"	s	namespace:bandit::detail
always_run_policy	libs/variant/tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^  struct always_run_policy : public run_policy$/;"	s	namespace:bandit::detail
always_run_policy	tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^  struct always_run_policy : public run_policy$/;"	s	namespace:bandit::detail
always_skip_policy	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^  struct always_skip_policy : public skip_policy$/;"	s	namespace:bandit::detail
always_skip_policy	tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^  struct always_skip_policy : public skip_policy$/;"	s	namespace:bandit::detail
and_	src/where_clause.h	/^            std::vector<where_clause> and_;$/;"	m	class:arg3::db::where_clause
any	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct any$/;"	s	namespace:snowhouse::detail
any	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct any$/;"	s	namespace:snowhouse::detail
append	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  void append(Option* new_last)$/;"	f	class:option::Option
append	tests/vendor/bandit/bandit/external/optionparser.h	/^  void append(Option* new_last)$/;"	f	class:option::Option
are_my_types_equal	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^static bool are_my_types_equal(const my_type& lhs, const my_type& rhs)$/;"	f	file:
are_my_types_equal	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^static bool are_my_types_equal(const my_type& lhs, const my_type& rhs)$/;"	f	file:
arg	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* arg;$/;"	m	class:option::Option
arg	tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* arg;$/;"	m	class:option::Option
arg3	html/select_query_h/Classes/arg3/index.html	/^<h1><a name="arg3">arg3<\/a><\/h1>$/;"	a
arg3	html/sqldb_h/Classes/arg3/index.html	/^<h1><a name="arg3">arg3<\/a><\/h1>$/;"	a
arg3	libs/variant/src/binary.cpp	/^namespace arg3$/;"	n	file:
arg3	libs/variant/src/binary.h	/^namespace arg3$/;"	n
arg3	libs/variant/src/variant.cpp	/^namespace arg3$/;"	n	file:
arg3	libs/variant/src/variant.h	/^namespace arg3$/;"	n
arg3	src/alloc.cpp	/^namespace arg3$/;"	n	file:
arg3	src/alloc.h	/^namespace arg3$/;"	n
arg3	src/bindable.cpp	/^namespace arg3$/;"	n	file:
arg3	src/bindable.h	/^namespace arg3$/;"	n
arg3	src/column.cpp	/^namespace arg3$/;"	n	file:
arg3	src/column.h	/^namespace arg3$/;"	n
arg3	src/delete_query.cpp	/^namespace arg3$/;"	n	file:
arg3	src/delete_query.h	/^namespace arg3$/;"	n
arg3	src/exception.h	/^namespace arg3$/;"	n
arg3	src/insert_query.cpp	/^namespace arg3$/;"	n	file:
arg3	src/insert_query.h	/^namespace arg3$/;"	n
arg3	src/join_clause.cpp	/^namespace arg3$/;"	n	file:
arg3	src/join_clause.h	/^namespace arg3$/;"	n
arg3	src/log.cpp	/^namespace arg3$/;"	n	file:
arg3	src/log.h	/^namespace arg3$/;"	n
arg3	src/modify_query.cpp	/^namespace arg3$/;"	n	file:
arg3	src/modify_query.h	/^namespace arg3$/;"	n
arg3	src/mysql/binding.cpp	/^namespace arg3$/;"	n	file:
arg3	src/mysql/binding.h	/^namespace arg3$/;"	n
arg3	src/mysql/column.cpp	/^namespace arg3$/;"	n	file:
arg3	src/mysql/column.h	/^namespace arg3$/;"	n
arg3	src/mysql/db.cpp	/^namespace arg3$/;"	n	file:
arg3	src/mysql/db.h	/^namespace arg3$/;"	n
arg3	src/mysql/resultset.cpp	/^namespace arg3$/;"	n	file:
arg3	src/mysql/resultset.h	/^namespace arg3$/;"	n
arg3	src/mysql/row.cpp	/^namespace arg3$/;"	n	file:
arg3	src/mysql/row.h	/^namespace arg3$/;"	n
arg3	src/mysql/statement.cpp	/^namespace arg3$/;"	n	file:
arg3	src/mysql/statement.h	/^namespace arg3$/;"	n
arg3	src/postgres/binding.cpp	/^namespace arg3$/;"	n	file:
arg3	src/postgres/binding.h	/^namespace arg3$/;"	n
arg3	src/postgres/column.cpp	/^namespace arg3$/;"	n	file:
arg3	src/postgres/column.h	/^namespace arg3$/;"	n
arg3	src/postgres/db.cpp	/^namespace arg3$/;"	n	file:
arg3	src/postgres/db.h	/^namespace arg3$/;"	n
arg3	src/postgres/resultset.cpp	/^namespace arg3$/;"	n	file:
arg3	src/postgres/resultset.h	/^namespace arg3$/;"	n
arg3	src/postgres/row.cpp	/^namespace arg3$/;"	n	file:
arg3	src/postgres/row.h	/^namespace arg3$/;"	n
arg3	src/postgres/statement.cpp	/^namespace arg3$/;"	n	file:
arg3	src/postgres/statement.h	/^namespace arg3$/;"	n
arg3	src/query.cpp	/^namespace arg3$/;"	n	file:
arg3	src/query.h	/^namespace arg3$/;"	n
arg3	src/record.h	/^namespace arg3$/;"	n
arg3	src/resultset.cpp	/^namespace arg3$/;"	n	file:
arg3	src/resultset.h	/^namespace arg3$/;"	n
arg3	src/row.cpp	/^namespace arg3$/;"	n	file:
arg3	src/row.h	/^namespace arg3$/;"	n
arg3	src/schema.cpp	/^namespace arg3$/;"	n	file:
arg3	src/schema.h	/^namespace arg3$/;"	n
arg3	src/schema_factory.cpp	/^namespace arg3$/;"	n	file:
arg3	src/schema_factory.h	/^namespace arg3$/;"	n
arg3	src/select_query.cpp	/^namespace arg3$/;"	n	file:
arg3	src/select_query.h	/^namespace arg3$/;"	n
arg3	src/sql_value.cpp	/^namespace arg3$/;"	n	file:
arg3	src/sql_value.h	/^namespace arg3$/;"	n
arg3	src/sqldb.cpp	/^namespace arg3$/;"	n	file:
arg3	src/sqldb.h	/^namespace arg3$/;"	n
arg3	src/sqlite/column.cpp	/^namespace arg3$/;"	n	file:
arg3	src/sqlite/column.h	/^namespace arg3$/;"	n
arg3	src/sqlite/db.cpp	/^namespace arg3$/;"	n	file:
arg3	src/sqlite/db.h	/^namespace arg3$/;"	n
arg3	src/sqlite/resultset.cpp	/^namespace arg3$/;"	n	file:
arg3	src/sqlite/resultset.h	/^namespace arg3$/;"	n
arg3	src/sqlite/row.cpp	/^namespace arg3$/;"	n	file:
arg3	src/sqlite/row.h	/^namespace arg3$/;"	n
arg3	src/sqlite/statement.cpp	/^namespace arg3$/;"	n	file:
arg3	src/sqlite/statement.h	/^namespace arg3$/;"	n
arg3	src/statement.h	/^namespace arg3$/;"	n
arg3	src/update_query.cpp	/^namespace arg3$/;"	n	file:
arg3	src/update_query.h	/^namespace arg3$/;"	n
arg3	src/where_clause.cpp	/^namespace arg3$/;"	n	file:
arg3	src/where_clause.h	/^namespace arg3$/;"	n
arg3 db base _ record$ $ T $ $ Class Template Reference	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\hypertarget{classarg3_1_1db_1_1base__record}{}\\section{arg3\\+:\\+:db\\+:\\+:base\\+\\_\\+record$<$ T $>$ Class Template Reference}$/;"	s
arg3 db base _ record$ $ T $ $ Class Template Reference	latex/classarg3_1_1db_1_1base__record.tex	/^\\hypertarget{classarg3_1_1db_1_1base__record}{}\\section{arg3\\+:\\+:db\\+:\\+:base\\+\\_\\+record$<$ T $>$ Class Template Reference}$/;"	s
arg3 db bind _ mapping Class Reference	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\hypertarget{classarg3_1_1db_1_1bind__mapping}{}\\section{arg3\\+:\\+:db\\+:\\+:bind\\+\\_\\+mapping Class Reference}$/;"	s
arg3 db bindable Class Reference	html/latex/classarg3_1_1db_1_1bindable.tex	/^\\hypertarget{classarg3_1_1db_1_1bindable}{}\\section{arg3\\+:\\+:db\\+:\\+:bindable Class Reference}$/;"	s
arg3 db bindable Class Reference	latex/classarg3_1_1db_1_1bindable.tex	/^\\hypertarget{classarg3_1_1db_1_1bindable}{}\\section{arg3\\+:\\+:db\\+:\\+:bindable Class Reference}$/;"	s
arg3 db column Class Reference	html/latex/classarg3_1_1db_1_1column.tex	/^\\hypertarget{classarg3_1_1db_1_1column}{}\\section{arg3\\+:\\+:db\\+:\\+:column Class Reference}$/;"	s
arg3 db column Class Reference	latex/classarg3_1_1db_1_1column.tex	/^\\hypertarget{classarg3_1_1db_1_1column}{}\\section{arg3\\+:\\+:db\\+:\\+:column Class Reference}$/;"	s
arg3 db column _ definition Struct Reference	html/latex/structarg3_1_1db_1_1column__definition.tex	/^\\hypertarget{structarg3_1_1db_1_1column__definition}{}\\section{arg3\\+:\\+:db\\+:\\+:column\\+\\_\\+definition Struct Reference}$/;"	s
arg3 db column _ definition Struct Reference	latex/structarg3_1_1db_1_1column__definition.tex	/^\\hypertarget{structarg3_1_1db_1_1column__definition}{}\\section{arg3\\+:\\+:db\\+:\\+:column\\+\\_\\+definition Struct Reference}$/;"	s
arg3 db column _ impl Class Reference	html/latex/classarg3_1_1db_1_1column__impl.tex	/^\\hypertarget{classarg3_1_1db_1_1column__impl}{}\\section{arg3\\+:\\+:db\\+:\\+:column\\+\\_\\+impl Class Reference}$/;"	s
arg3 db column _ impl Class Reference	latex/classarg3_1_1db_1_1column__impl.tex	/^\\hypertarget{classarg3_1_1db_1_1column__impl}{}\\section{arg3\\+:\\+:db\\+:\\+:column\\+\\_\\+impl Class Reference}$/;"	s
arg3 db delete _ query Class Reference	html/latex/classarg3_1_1db_1_1delete__query.tex	/^\\hypertarget{classarg3_1_1db_1_1delete__query}{}\\section{arg3\\+:\\+:db\\+:\\+:delete\\+\\_\\+query Class Reference}$/;"	s
arg3 db delete _ query Class Reference	latex/classarg3_1_1db_1_1delete__query.tex	/^\\hypertarget{classarg3_1_1db_1_1delete__query}{}\\section{arg3\\+:\\+:db\\+:\\+:delete\\+\\_\\+query Class Reference}$/;"	s
arg3 db helper mysql _ res _ delete Struct Reference	latex/structarg3_1_1db_1_1helper_1_1mysql__res__delete.tex	/^\\hypertarget{structarg3_1_1db_1_1helper_1_1mysql__res__delete}{}\\section{arg3\\+:\\+:db\\+:\\+:helper\\+:\\+:mysql\\+\\_\\+res\\+\\_\\+delete Struct Reference}$/;"	s
arg3 db helper postgres _ res _ delete Struct Reference	latex/structarg3_1_1db_1_1helper_1_1postgres__res__delete.tex	/^\\hypertarget{structarg3_1_1db_1_1helper_1_1postgres__res__delete}{}\\section{arg3\\+:\\+:db\\+:\\+:helper\\+:\\+:postgres\\+\\_\\+res\\+\\_\\+delete Struct Reference}$/;"	s
arg3 db insert _ query Class Reference	html/latex/classarg3_1_1db_1_1insert__query.tex	/^\\hypertarget{classarg3_1_1db_1_1insert__query}{}\\section{arg3\\+:\\+:db\\+:\\+:insert\\+\\_\\+query Class Reference}$/;"	s
arg3 db insert _ query Class Reference	latex/classarg3_1_1db_1_1insert__query.tex	/^\\hypertarget{classarg3_1_1db_1_1insert__query}{}\\section{arg3\\+:\\+:db\\+:\\+:insert\\+\\_\\+query Class Reference}$/;"	s
arg3 db join _ clause Class Reference	html/latex/classarg3_1_1db_1_1join__clause.tex	/^\\hypertarget{classarg3_1_1db_1_1join__clause}{}\\section{arg3\\+:\\+:db\\+:\\+:join\\+\\_\\+clause Class Reference}$/;"	s
arg3 db join _ clause Class Reference	latex/classarg3_1_1db_1_1join__clause.tex	/^\\hypertarget{classarg3_1_1db_1_1join__clause}{}\\section{arg3\\+:\\+:db\\+:\\+:join\\+\\_\\+clause Class Reference}$/;"	s
arg3 db modify _ query Class Reference	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\hypertarget{classarg3_1_1db_1_1modify__query}{}\\section{arg3\\+:\\+:db\\+:\\+:modify\\+\\_\\+query Class Reference}$/;"	s
arg3 db modify _ query Class Reference	latex/classarg3_1_1db_1_1modify__query.tex	/^\\hypertarget{classarg3_1_1db_1_1modify__query}{}\\section{arg3\\+:\\+:db\\+:\\+:modify\\+\\_\\+query Class Reference}$/;"	s
arg3 db mysql _ binding Class Reference	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__binding}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+binding Class Reference}$/;"	s
arg3 db mysql _ cached _ column Class Reference	latex/classarg3_1_1db_1_1mysql__cached__column.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__cached__column}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+cached\\+\\_\\+column Class Reference}$/;"	s
arg3 db mysql _ cached _ resultset Class Reference	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__cached__resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+cached\\+\\_\\+resultset Class Reference}$/;"	s
arg3 db mysql _ cached _ row Class Reference	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__cached__row}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+cached\\+\\_\\+row Class Reference}$/;"	s
arg3 db mysql _ column Class Reference	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__column}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+column Class Reference}$/;"	s
arg3 db mysql _ db Class Reference	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__db}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+db Class Reference}$/;"	s
arg3 db mysql _ resultset Class Reference	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+resultset Class Reference}$/;"	s
arg3 db mysql _ row Class Reference	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__row}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+row Class Reference}$/;"	s
arg3 db mysql _ statement Class Reference	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__statement}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+statement Class Reference}$/;"	s
arg3 db mysql _ stmt _ column Class Reference	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__stmt__column}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+stmt\\+\\_\\+column Class Reference}$/;"	s
arg3 db mysql _ stmt _ resultset Class Reference	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__stmt__resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+stmt\\+\\_\\+resultset Class Reference}$/;"	s
arg3 db mysql _ stmt _ row Class Reference	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql__stmt__row}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+\\_\\+stmt\\+\\_\\+row Class Reference}$/;"	s
arg3 db mysql binding Class Reference	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql_1_1binding}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:binding Class Reference}$/;"	s
arg3 db mysql column Class Reference	latex/classarg3_1_1db_1_1mysql_1_1column.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql_1_1column}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:column Class Reference}$/;"	s
arg3 db mysql db Class Reference	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql_1_1db}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:db Class Reference}$/;"	s
arg3 db mysql helper res _ delete Struct Reference	latex/structarg3_1_1db_1_1mysql_1_1helper_1_1res__delete.tex	/^\\hypertarget{structarg3_1_1db_1_1mysql_1_1helper_1_1res__delete}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:helper\\+:\\+:res\\+\\_\\+delete Struct Reference}$/;"	s
arg3 db mysql resultset Class Reference	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql_1_1resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:resultset Class Reference}$/;"	s
arg3 db mysql row Class Reference	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql_1_1row}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:row Class Reference}$/;"	s
arg3 db mysql statement Class Reference	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql_1_1statement}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:statement Class Reference}$/;"	s
arg3 db mysql stmt _ column Class Reference	latex/classarg3_1_1db_1_1mysql_1_1stmt__column.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql_1_1stmt__column}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:stmt\\+\\_\\+column Class Reference}$/;"	s
arg3 db mysql stmt _ resultset Class Reference	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql_1_1stmt__resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:stmt\\+\\_\\+resultset Class Reference}$/;"	s
arg3 db mysql stmt _ row Class Reference	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\hypertarget{classarg3_1_1db_1_1mysql_1_1stmt__row}{}\\section{arg3\\+:\\+:db\\+:\\+:mysql\\+:\\+:stmt\\+\\_\\+row Class Reference}$/;"	s
arg3 db postgres _ binding Class Reference	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres__binding}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+\\_\\+binding Class Reference}$/;"	s
arg3 db postgres _ cached _ column Class Reference	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres__cached__column}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+\\_\\+cached\\+\\_\\+column Class Reference}$/;"	s
arg3 db postgres _ cached _ resultset Class Reference	latex/classarg3_1_1db_1_1postgres__cached__resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres__cached__resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+\\_\\+cached\\+\\_\\+resultset Class Reference}$/;"	s
arg3 db postgres _ cached _ row Class Reference	latex/classarg3_1_1db_1_1postgres__cached__row.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres__cached__row}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+\\_\\+cached\\+\\_\\+row Class Reference}$/;"	s
arg3 db postgres _ column Class Reference	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres__column}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+\\_\\+column Class Reference}$/;"	s
arg3 db postgres _ db Class Reference	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres__db}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+\\_\\+db Class Reference}$/;"	s
arg3 db postgres _ resultset Class Reference	latex/classarg3_1_1db_1_1postgres__resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres__resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+\\_\\+resultset Class Reference}$/;"	s
arg3 db postgres _ row Class Reference	latex/classarg3_1_1db_1_1postgres__row.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres__row}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+\\_\\+row Class Reference}$/;"	s
arg3 db postgres _ statement Class Reference	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres__statement}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+\\_\\+statement Class Reference}$/;"	s
arg3 db postgres binding Class Reference	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres_1_1binding}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+:\\+:binding Class Reference}$/;"	s
arg3 db postgres column Class Reference	latex/classarg3_1_1db_1_1postgres_1_1column.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres_1_1column}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+:\\+:column Class Reference}$/;"	s
arg3 db postgres db Class Reference	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres_1_1db}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+:\\+:db Class Reference}$/;"	s
arg3 db postgres helper Namespace Reference	latex/namespacearg3_1_1db_1_1postgres_1_1helper.tex	/^\\hypertarget{namespacearg3_1_1db_1_1postgres_1_1helper}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+:\\+:helper Namespace Reference}$/;"	s
arg3 db postgres helper res _ delete Struct Reference	latex/structarg3_1_1db_1_1postgres_1_1helper_1_1res__delete.tex	/^\\hypertarget{structarg3_1_1db_1_1postgres_1_1helper_1_1res__delete}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+:\\+:helper\\+:\\+:res\\+\\_\\+delete Struct Reference}$/;"	s
arg3 db postgres resultset Class Reference	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres_1_1resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+:\\+:resultset Class Reference}$/;"	s
arg3 db postgres row Class Reference	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres_1_1row}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+:\\+:row Class Reference}$/;"	s
arg3 db postgres statement Class Reference	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\hypertarget{classarg3_1_1db_1_1postgres_1_1statement}{}\\section{arg3\\+:\\+:db\\+:\\+:postgres\\+:\\+:statement Class Reference}$/;"	s
arg3 db query Class Reference	html/latex/classarg3_1_1db_1_1query.tex	/^\\hypertarget{classarg3_1_1db_1_1query}{}\\section{arg3\\+:\\+:db\\+:\\+:query Class Reference}$/;"	s
arg3 db query Class Reference	latex/classarg3_1_1db_1_1query.tex	/^\\hypertarget{classarg3_1_1db_1_1query}{}\\section{arg3\\+:\\+:db\\+:\\+:query Class Reference}$/;"	s
arg3 db record$ $ T $ $ Class Template Reference	latex/classarg3_1_1db_1_1record.tex	/^\\hypertarget{classarg3_1_1db_1_1record}{}\\section{arg3\\+:\\+:db\\+:\\+:record$<$ T $>$ Class Template Reference}$/;"	s
arg3 db resultset Class Reference	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:resultset Class Reference}$/;"	s
arg3 db resultset Class Reference	latex/classarg3_1_1db_1_1resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:resultset Class Reference}$/;"	s
arg3 db resultset _ impl Class Reference	html/latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\hypertarget{classarg3_1_1db_1_1resultset__impl}{}\\section{arg3\\+:\\+:db\\+:\\+:resultset\\+\\_\\+impl Class Reference}$/;"	s
arg3 db resultset _ impl Class Reference	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\hypertarget{classarg3_1_1db_1_1resultset__impl}{}\\section{arg3\\+:\\+:db\\+:\\+:resultset\\+\\_\\+impl Class Reference}$/;"	s
arg3 db resultset _ iterator$ $ Value Type Non Const $ $ Class Template Reference	html/latex/classarg3_1_1db_1_1resultset__iterator.tex	/^\\hypertarget{classarg3_1_1db_1_1resultset__iterator}{}\\section{arg3\\+:\\+:db\\+:\\+:resultset\\+\\_\\+iterator$<$ Value\\+Type, Non\\+Const $>$ Class Template Reference}$/;"	s
arg3 db resultset _ iterator$ $ Value Type Non Const $ $ Class Template Reference	latex/classarg3_1_1db_1_1resultset__iterator.tex	/^\\hypertarget{classarg3_1_1db_1_1resultset__iterator}{}\\section{arg3\\+:\\+:db\\+:\\+:resultset\\+\\_\\+iterator$<$ Value\\+Type, Non\\+Const $>$ Class Template Reference}$/;"	s
arg3 db row Class Reference	html/latex/classarg3_1_1db_1_1row.tex	/^\\hypertarget{classarg3_1_1db_1_1row}{}\\section{arg3\\+:\\+:db\\+:\\+:row Class Reference}$/;"	s
arg3 db row Class Reference	latex/classarg3_1_1db_1_1row.tex	/^\\hypertarget{classarg3_1_1db_1_1row}{}\\section{arg3\\+:\\+:db\\+:\\+:row Class Reference}$/;"	s
arg3 db row _ impl Class Reference	html/latex/classarg3_1_1db_1_1row__impl.tex	/^\\hypertarget{classarg3_1_1db_1_1row__impl}{}\\section{arg3\\+:\\+:db\\+:\\+:row\\+\\_\\+impl Class Reference}$/;"	s
arg3 db row _ impl Class Reference	latex/classarg3_1_1db_1_1row__impl.tex	/^\\hypertarget{classarg3_1_1db_1_1row__impl}{}\\section{arg3\\+:\\+:db\\+:\\+:row\\+\\_\\+impl Class Reference}$/;"	s
arg3 db row _ iterator$ $ Value Type Non Const Row Type $ $ Class Template Reference	html/latex/classarg3_1_1db_1_1row__iterator.tex	/^\\hypertarget{classarg3_1_1db_1_1row__iterator}{}\\section{arg3\\+:\\+:db\\+:\\+:row\\+\\_\\+iterator$<$ Value\\+Type, Non\\+Const, Row\\+Type $>$ Class Template Reference}$/;"	s
arg3 db row _ iterator$ $ Value Type Non Const Row Type $ $ Class Template Reference	latex/classarg3_1_1db_1_1row__iterator.tex	/^\\hypertarget{classarg3_1_1db_1_1row__iterator}{}\\section{arg3\\+:\\+:db\\+:\\+:row\\+\\_\\+iterator$<$ Value\\+Type, Non\\+Const, Row\\+Type $>$ Class Template Reference}$/;"	s
arg3 db schema Class Reference	html/latex/classarg3_1_1db_1_1schema.tex	/^\\hypertarget{classarg3_1_1db_1_1schema}{}\\section{arg3\\+:\\+:db\\+:\\+:schema Class Reference}$/;"	s
arg3 db schema Class Reference	latex/classarg3_1_1db_1_1schema.tex	/^\\hypertarget{classarg3_1_1db_1_1schema}{}\\section{arg3\\+:\\+:db\\+:\\+:schema Class Reference}$/;"	s
arg3 db schema _ factory Class Reference	html/latex/classarg3_1_1db_1_1schema__factory.tex	/^\\hypertarget{classarg3_1_1db_1_1schema__factory}{}\\section{arg3\\+:\\+:db\\+:\\+:schema\\+\\_\\+factory Class Reference}$/;"	s
arg3 db schema _ factory Class Reference	latex/classarg3_1_1db_1_1schema__factory.tex	/^\\hypertarget{classarg3_1_1db_1_1schema__factory}{}\\section{arg3\\+:\\+:db\\+:\\+:schema\\+\\_\\+factory Class Reference}$/;"	s
arg3 db select _ query Class Reference	html/latex/classarg3_1_1db_1_1select__query.tex	/^\\hypertarget{classarg3_1_1db_1_1select__query}{}\\section{arg3\\+:\\+:db\\+:\\+:select\\+\\_\\+query Class Reference}$/;"	s
arg3 db select _ query Class Reference	latex/classarg3_1_1db_1_1select__query.tex	/^\\hypertarget{classarg3_1_1db_1_1select__query}{}\\section{arg3\\+:\\+:db\\+:\\+:select\\+\\_\\+query Class Reference}$/;"	s
arg3 db sql _ time Class Reference	latex/classarg3_1_1db_1_1sql__time.tex	/^\\hypertarget{classarg3_1_1db_1_1sql__time}{}\\section{arg3\\+:\\+:db\\+:\\+:sql\\+\\_\\+time Class Reference}$/;"	s
arg3 db sql _ value Class Reference	latex/classarg3_1_1db_1_1sql__value.tex	/^\\hypertarget{classarg3_1_1db_1_1sql__value}{}\\section{arg3\\+:\\+:db\\+:\\+:sql\\+\\_\\+value Class Reference}$/;"	s
arg3 db sqldb Class Reference	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\hypertarget{classarg3_1_1db_1_1sqldb}{}\\section{arg3\\+:\\+:db\\+:\\+:sqldb Class Reference}$/;"	s
arg3 db sqldb Class Reference	latex/classarg3_1_1db_1_1sqldb.tex	/^\\hypertarget{classarg3_1_1db_1_1sqldb}{}\\section{arg3\\+:\\+:db\\+:\\+:sqldb Class Reference}$/;"	s
arg3 db sqlite cached _ column Class Reference	latex/classarg3_1_1db_1_1sqlite_1_1cached__column.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite_1_1cached__column}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite\\+:\\+:cached\\+\\_\\+column Class Reference}$/;"	s
arg3 db sqlite cached _ resultset Class Reference	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite_1_1cached__resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite\\+:\\+:cached\\+\\_\\+resultset Class Reference}$/;"	s
arg3 db sqlite cached _ row Class Reference	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite_1_1cached__row}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite\\+:\\+:cached\\+\\_\\+row Class Reference}$/;"	s
arg3 db sqlite column Class Reference	latex/classarg3_1_1db_1_1sqlite_1_1column.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite_1_1column}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite\\+:\\+:column Class Reference}$/;"	s
arg3 db sqlite db Class Reference	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite_1_1db}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite\\+:\\+:db Class Reference}$/;"	s
arg3 db sqlite helper stmt _ delete Struct Reference	latex/structarg3_1_1db_1_1sqlite_1_1helper_1_1stmt__delete.tex	/^\\hypertarget{structarg3_1_1db_1_1sqlite_1_1helper_1_1stmt__delete}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite\\+:\\+:helper\\+:\\+:stmt\\+\\_\\+delete Struct Reference}$/;"	s
arg3 db sqlite resultset Class Reference	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite_1_1resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite\\+:\\+:resultset Class Reference}$/;"	s
arg3 db sqlite row Class Reference	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite_1_1row}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite\\+:\\+:row Class Reference}$/;"	s
arg3 db sqlite statement Class Reference	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite_1_1statement}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite\\+:\\+:statement Class Reference}$/;"	s
arg3 db sqlite3 _ cached _ column Class Reference	latex/classarg3_1_1db_1_1sqlite3__cached__column.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite3__cached__column}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite3\\+\\_\\+cached\\+\\_\\+column Class Reference}$/;"	s
arg3 db sqlite3 _ cached _ resultset Class Reference	latex/classarg3_1_1db_1_1sqlite3__cached__resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite3__cached__resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite3\\+\\_\\+cached\\+\\_\\+resultset Class Reference}$/;"	s
arg3 db sqlite3 _ cached _ row Class Reference	latex/classarg3_1_1db_1_1sqlite3__cached__row.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite3__cached__row}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite3\\+\\_\\+cached\\+\\_\\+row Class Reference}$/;"	s
arg3 db sqlite3 _ column Class Reference	latex/classarg3_1_1db_1_1sqlite3__column.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite3__column}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite3\\+\\_\\+column Class Reference}$/;"	s
arg3 db sqlite3 _ db Class Reference	latex/classarg3_1_1db_1_1sqlite3__db.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite3__db}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite3\\+\\_\\+db Class Reference}$/;"	s
arg3 db sqlite3 _ resultset Class Reference	latex/classarg3_1_1db_1_1sqlite3__resultset.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite3__resultset}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite3\\+\\_\\+resultset Class Reference}$/;"	s
arg3 db sqlite3 _ row Class Reference	latex/classarg3_1_1db_1_1sqlite3__row.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite3__row}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite3\\+\\_\\+row Class Reference}$/;"	s
arg3 db sqlite3 _ statement Class Reference	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\hypertarget{classarg3_1_1db_1_1sqlite3__statement}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite3\\+\\_\\+statement Class Reference}$/;"	s
arg3 db sqlite3 _ stmt _ delete Struct Reference	latex/structarg3_1_1db_1_1sqlite3__stmt__delete.tex	/^\\hypertarget{structarg3_1_1db_1_1sqlite3__stmt__delete}{}\\section{arg3\\+:\\+:db\\+:\\+:sqlite3\\+\\_\\+stmt\\+\\_\\+delete Struct Reference}$/;"	s
arg3 db statement Class Reference	html/latex/classarg3_1_1db_1_1statement.tex	/^\\hypertarget{classarg3_1_1db_1_1statement}{}\\section{arg3\\+:\\+:db\\+:\\+:statement Class Reference}$/;"	s
arg3 db statement Class Reference	latex/classarg3_1_1db_1_1statement.tex	/^\\hypertarget{classarg3_1_1db_1_1statement}{}\\section{arg3\\+:\\+:db\\+:\\+:statement Class Reference}$/;"	s
arg3 db update _ query Class Reference	html/latex/classarg3_1_1db_1_1update__query.tex	/^\\hypertarget{classarg3_1_1db_1_1update__query}{}\\section{arg3\\+:\\+:db\\+:\\+:update\\+\\_\\+query Class Reference}$/;"	s
arg3 db update _ query Class Reference	latex/classarg3_1_1db_1_1update__query.tex	/^\\hypertarget{classarg3_1_1db_1_1update__query}{}\\section{arg3\\+:\\+:db\\+:\\+:update\\+\\_\\+query Class Reference}$/;"	s
arg3 db uri Struct Reference	html/latex/structarg3_1_1db_1_1uri.tex	/^\\hypertarget{structarg3_1_1db_1_1uri}{}\\section{arg3\\+:\\+:db\\+:\\+:uri Struct Reference}$/;"	s
arg3 db uri Struct Reference	latex/structarg3_1_1db_1_1uri.tex	/^\\hypertarget{structarg3_1_1db_1_1uri}{}\\section{arg3\\+:\\+:db\\+:\\+:uri Struct Reference}$/;"	s
arg3 db uri _ type Struct Reference	latex/structarg3_1_1db_1_1uri__type.tex	/^\\hypertarget{structarg3_1_1db_1_1uri__type}{}\\section{arg3\\+:\\+:db\\+:\\+:uri\\+\\_\\+type Struct Reference}$/;"	s
arg3 db where _ clause Class Reference	html/latex/classarg3_1_1db_1_1where__clause.tex	/^\\hypertarget{classarg3_1_1db_1_1where__clause}{}\\section{arg3\\+:\\+:db\\+:\\+:where\\+\\_\\+clause Class Reference}$/;"	s
arg3 db where _ clause Class Reference	latex/classarg3_1_1db_1_1where__clause.tex	/^\\hypertarget{classarg3_1_1db_1_1where__clause}{}\\section{arg3\\+:\\+:db\\+:\\+:where\\+\\_\\+clause Class Reference}$/;"	s
argc	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^    int argc()$/;"	f	struct:bandit::specs::util::argv_helper
argc	tests/vendor/bandit/specs/util/argv_helper.h	/^    int argc()$/;"	f	struct:bandit::specs::util::argv_helper
argc_	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^    int argc_;$/;"	m	struct:bandit::specs::util::argv_helper
argc_	tests/vendor/bandit/specs/util/argv_helper.h	/^    int argc_;$/;"	m	struct:bandit::specs::util::argv_helper
argv	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^    char** argv()$/;"	f	struct:bandit::specs::util::argv_helper
argv	tests/vendor/bandit/specs/util/argv_helper.h	/^    char** argv()$/;"	f	struct:bandit::specs::util::argv_helper
argv_helper	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^    argv_helper(int argc_a, const char* argv_a[])$/;"	f	struct:bandit::specs::util::argv_helper
argv_helper	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^  struct argv_helper$/;"	s	namespace:bandit::specs::util
argv_helper	tests/vendor/bandit/specs/util/argv_helper.h	/^    argv_helper(int argc, const char* argv[])$/;"	f	struct:bandit::specs::util::argv_helper
argv_helper	tests/vendor/bandit/specs/util/argv_helper.h	/^  struct argv_helper$/;"	s	namespace:bandit::specs::util
assert_binding_index	html/query_h/Classes/query/index.html	/^<h3><a name="assert_binding_index">assert_binding_index<\/a><\/h3>$/;"	a
assert_binding_index	src/query.cpp	/^        size_t query::assert_binding_index(size_t index)$/;"	f	class:arg3::db::query
assertion_adapter	libs/variant/tests/vendor/bandit/bandit/adapters/adapter.h	/^  struct assertion_adapter$/;"	s	namespace:bandit::adapters
assertion_adapter	tests/vendor/bandit/bandit/adapters/adapter.h	/^  struct assertion_adapter$/;"	s	namespace:bandit::adapters
assertion_exception	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^    assertion_exception(const std::string& message)$/;"	f	struct:bandit::detail::assertion_exception
assertion_exception	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^    assertion_exception(const std::string& message,$/;"	f	struct:bandit::detail::assertion_exception
assertion_exception	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^  struct assertion_exception : public std::runtime_error$/;"	s	namespace:bandit::detail
assertion_exception	tests/vendor/bandit/bandit/assertion_exception.h	/^    assertion_exception(const std::string& message)$/;"	f	struct:bandit::detail::assertion_exception
assertion_exception	tests/vendor/bandit/bandit/assertion_exception.h	/^    assertion_exception(const std::string& message,$/;"	f	struct:bandit::detail::assertion_exception
assertion_exception	tests/vendor/bandit/bandit/assertion_exception.h	/^  struct assertion_exception : public std::runtime_error$/;"	s	namespace:bandit::detail
available_columns	src/record.h	/^            std::vector<std::string> available_columns(bool exists) const$/;"	f	class:arg3::db::record
bandit	libs/variant/tests/vendor/bandit/bandit/adapters/adapter.h	/^namespace bandit { namespace adapters {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/adapters/adapters.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/adapters/snowhouse.h	/^namespace bandit { namespace adapters {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^namespace bandit { namespace Matchers$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^namespace bandit { namespace Matchers$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/bandit.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/context.h	/^namespace bandit {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/failure_formatters/failure_formatters.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^namespace bandit {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/listener.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/options.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/registration/registrar.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/registration/spec_registry.h	/^namespace bandit {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^namespace bandit {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/reporters/reporters.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/runner.h	/^namespace bandit {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^namespace bandit {$/;"	n
bandit	libs/variant/tests/vendor/bandit/bandit/test_run_error.h	/^namespace bandit { namespace detail {$/;"	n
bandit	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^namespace bandit { namespace fakes {$/;"	n
bandit	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^namespace bandit { namespace fakes {$/;"	n
bandit	libs/variant/tests/vendor/bandit/specs/fakes/logging_fake.h	/^namespace bandit { namespace specs {$/;"	n
bandit	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^namespace bandit { namespace specs { namespace util {$/;"	n
bandit	tests/vendor/bandit/bandit/adapters/adapter.h	/^namespace bandit { namespace adapters {$/;"	n
bandit	tests/vendor/bandit/bandit/adapters/adapters.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/adapters/snowhouse.h	/^namespace bandit { namespace adapters {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_exception.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^namespace bandit { namespace Matchers$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^namespace bandit { namespace Matchers {$/;"	n
bandit	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^namespace bandit { namespace Matchers$/;"	n
bandit	tests/vendor/bandit/bandit/bandit.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/context.h	/^namespace bandit {$/;"	n
bandit	tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/failure_formatters/failure_formatters.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/grammar.h	/^namespace bandit {$/;"	n
bandit	tests/vendor/bandit/bandit/listener.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/options.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/registration/registrar.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/registration/spec_registry.h	/^namespace bandit {$/;"	n
bandit	tests/vendor/bandit/bandit/reporters/colorizer.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^namespace bandit {$/;"	n
bandit	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/reporters/reporters.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/run_policies/run_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/runner.h	/^namespace bandit {$/;"	n
bandit	tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^namespace bandit {$/;"	n
bandit	tests/vendor/bandit/bandit/test_run_error.h	/^namespace bandit { namespace detail {$/;"	n
bandit	tests/vendor/bandit/specs/fakes/fake_context.h	/^namespace bandit { namespace fakes {$/;"	n
bandit	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^namespace bandit { namespace fakes {$/;"	n
bandit	tests/vendor/bandit/specs/fakes/logging_fake.h	/^namespace bandit { namespace specs {$/;"	n
bandit	tests/vendor/bandit/specs/util/argv_helper.h	/^namespace bandit { namespace specs { namespace util {$/;"	n
bandit_context	libs/variant/tests/vendor/bandit/bandit/context.h	/^        bandit_context(const char* desc, bool hard_skip_a)$/;"	f	class:bandit::detail::bandit_context
bandit_context	libs/variant/tests/vendor/bandit/bandit/context.h	/^    class bandit_context : public context$/;"	c	namespace:bandit::detail
bandit_context	tests/vendor/bandit/bandit/context.h	/^        bandit_context(const char* desc, bool hard_skip)$/;"	f	class:bandit::detail::bandit_context
bandit_context	tests/vendor/bandit/bandit/context.h	/^    class bandit_context : public context$/;"	c	namespace:bandit::detail
bandit_run_policy	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bandit_run_policy(const char* skip_pattern, const char* only_pattern, bool break_on_failure)$/;"	f	struct:bandit::detail::bandit_run_policy
bandit_run_policy	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^  struct bandit_run_policy : public run_policy$/;"	s	namespace:bandit::detail
bandit_run_policy	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bandit_run_policy(const char* skip_pattern, const char* only_pattern)$/;"	f	struct:bandit::detail::bandit_run_policy
bandit_run_policy	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^  struct bandit_run_policy : public run_policy$/;"	s	namespace:bandit::detail
base_record.h	html/base_record_h/index.html	/^<h1><a name="base_record.h">base_record.h<\/a><\/h1>$/;"	a
be_close_to	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^    BeCloseTo<T> be_close_to(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_close_to	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^    BeCloseTo<T> be_close_to(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_empty	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^    static const BeEmpty be_empty = BeEmpty();$/;"	m	namespace:bandit::Matchers
be_empty	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^    static const BeEmpty be_empty = BeEmpty();$/;"	m	namespace:bandit::Matchers
be_falsy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^    static const BeFalsy be_falsy = BeFalsy();$/;"	m	namespace:bandit::Matchers
be_falsy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^    static const BeFalsy be_falsy = BeFalsy();$/;"	m	namespace:bandit::Matchers
be_greater_than	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^    BeGreaterThan<T> be_greater_than(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_greater_than	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^    BeGreaterThan<T> be_greater_than(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_greater_than_or_equal_to	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^    BeGTE<T> be_greater_than_or_equal_to(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_greater_than_or_equal_to	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^    BeGTE<T> be_greater_than_or_equal_to(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_gte	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^    BeGTE<T> be_gte(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_gte	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^    BeGTE<T> be_gte(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_less_than	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^    BeLessThan<T> be_less_than(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_less_than	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^    BeLessThan<T> be_less_than(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_less_than_or_equal_to	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^    BeLTE<T> be_less_than_or_equal_to(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_less_than_or_equal_to	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^    BeLTE<T> be_less_than_or_equal_to(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_lte	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^    BeLTE<T> be_lte(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_lte	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^    BeLTE<T> be_lte(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
be_null	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^    static const BeNull be_null = BeNull();$/;"	m	namespace:bandit::Matchers
be_null	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^    static const BeNull be_null = BeNull();$/;"	m	namespace:bandit::Matchers
be_truthy	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^    static const BeTruthy be_truthy = BeTruthy();$/;"	m	namespace:bandit::Matchers
be_truthy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^    static const BeTruthy be_truthy = BeTruthy();$/;"	m	namespace:bandit::Matchers
before_each	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void before_each(detail::voidfunc_t func)$/;"	f	namespace:bandit
before_each	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void before_each(detail::voidfunc_t func, $/;"	f	namespace:bandit
before_each	tests/vendor/bandit/bandit/grammar.h	/^  inline void before_each(detail::voidfunc_t func)$/;"	f	namespace:bandit
before_each	tests/vendor/bandit/bandit/grammar.h	/^  inline void before_each(detail::voidfunc_t func, $/;"	f	namespace:bandit
before_eaches_	libs/variant/tests/vendor/bandit/bandit/context.h	/^        std::list<voidfunc_t> before_eaches_;$/;"	m	class:bandit::detail::bandit_context
before_eaches_	tests/vendor/bandit/bandit/context.h	/^        std::list<voidfunc_t> before_eaches_;$/;"	m	class:bandit::detail::bandit_context
begin	src/resultset.cpp	/^        resultset::const_iterator resultset::begin() const$/;"	f	class:arg3::db::resultset
begin	src/resultset.cpp	/^        resultset::iterator resultset::begin()$/;"	f	class:arg3::db::resultset
begin	src/row.cpp	/^        row::const_iterator row::begin() const$/;"	f	class:arg3::db::row
begin	src/row.cpp	/^        row::iterator row::begin()$/;"	f	class:arg3::db::row
binary	libs/variant/src/binary.cpp	/^    binary::binary() : val_(nullptr), sz_(0), alloc_(nullptr), copy_(nullptr), free_(nullptr), cmp_(nullptr)$/;"	f	class:arg3::binary
binary	libs/variant/src/binary.cpp	/^    binary::binary(binary &&p) : val_(p.val_), sz_(p.sz_), alloc_(p.alloc_), copy_(p.copy_), free_(p.free_), cmp_(p.cmp_)$/;"	f	class:arg3::binary
binary	libs/variant/src/binary.cpp	/^    binary::binary(const binary &p) : val_(p.val_), sz_(p.sz_), alloc_(p.alloc_), copy_(p.copy_), free_(p.free_), cmp_(p.cmp_)$/;"	f	class:arg3::binary
binary	libs/variant/src/binary.cpp	/^    binary::binary(const void *p, size_t sz, alloc_fn construct, copy_fn copy, free_fn destroy, cmp_fn compare)$/;"	f	class:arg3::binary
binary	libs/variant/src/binary.h	/^    class binary$/;"	c	namespace:arg3
bind	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="bind">bind<\/a><\/h3>$/;"	a
bind	src/bindable.cpp	/^        bind_mapping &bind_mapping::bind(const std::string &name, const sql_value &value)$/;"	f	class:arg3::db::bind_mapping
bind	src/mysql/binding.cpp	/^            binding &binding::bind(const std::string &name, const sql_value &value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, const sql_blob &value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, const sql_null_type &value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, const sql_time &value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, const std::string &value, int len)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, const std::wstring &value, int len)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, double value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, float value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, int value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, long long value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, unsigned long long value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/binding.cpp	/^            binding &binding::bind(size_t index, unsigned value)$/;"	f	class:arg3::db::mysql::binding
bind	src/mysql/statement.cpp	/^            statement &statement::bind(const string &name, const sql_value &value)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, const sql_blob &value)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, const sql_null_type &value)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, const sql_time &value)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, const std::string &value, int len)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, const std::wstring &value, int len)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, double value)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, float value)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, int value)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, long long value)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, unsigned long long value)$/;"	f	class:arg3::db::mysql::statement
bind	src/mysql/statement.cpp	/^            statement &statement::bind(size_t index, unsigned value)$/;"	f	class:arg3::db::mysql::statement
bind	src/postgres/binding.cpp	/^            binding &binding::bind(const string &name, const sql_value &value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, const sql_blob &value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, const sql_null_type &value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, const sql_time &value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, const std::string &value, int len)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, const std::wstring &value, int len)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, double value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, float value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, int value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, long long value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, unsigned long long value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/binding.cpp	/^            binding &binding::bind(size_t index, unsigned value)$/;"	f	class:arg3::db::postgres::binding
bind	src/postgres/statement.cpp	/^            statement &statement::bind(const string &name, const sql_value &value)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, const sql_blob &value)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, const sql_null_type &value)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, const sql_time &value)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, const std::string &value, int len)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, const std::wstring &value, int len)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, double value)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, float value)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, int value)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, long long value)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, unsigned long long value)$/;"	f	class:arg3::db::postgres::statement
bind	src/postgres/statement.cpp	/^            statement &statement::bind(size_t index, unsigned value)$/;"	f	class:arg3::db::postgres::statement
bind	src/query.cpp	/^        query &query::bind(const string &name, const sql_value &value)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, const sql_blob &value)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, const sql_null_type &value)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, const sql_time &value)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, const string &value, int len)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, const wstring &value, int len)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, double value)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, float value)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, int value)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, long long value)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, unsigned long long value)$/;"	f	class:arg3::db::query
bind	src/query.cpp	/^        query &query::bind(size_t index, unsigned value)$/;"	f	class:arg3::db::query
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(const string &name, const sql_value &value)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, const sql_blob &value)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, const sql_null_type &value)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, const sql_time &value)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, const std::string &value, int len)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, const std::wstring &value, int len)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, double value)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, float value)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, int value)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, long long value)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, unsigned long long value)$/;"	f	class:arg3::db::sqlite::statement
bind	src/sqlite/statement.cpp	/^            statement &statement::bind(size_t index, unsigned value)$/;"	f	class:arg3::db::sqlite::statement
bind(size_t)	html/query_h/Classes/query/index.html	/^<h3><a name="bind(size_t)">bind(size_t)<\/a><\/h3>$/;"	a
bind(size_t,constsql_blob)	html/query_h/Classes/query/index.html	/^<h3><a name="bind(size_t,constsql_blob)">bind(size_t, const sql_blob &)<\/a><\/h3>$/;"	a
bind(size_t,constsql_null_t)	html/query_h/Classes/query/index.html	/^<h3><a name="bind(size_t,constsql_null_t)">bind(size_t, const sql_null_t &)<\/a><\/h3>$/;"	a
bind(size_t,conststd::string,int)	html/query_h/Classes/query/index.html	/^<h3><a name="bind(size_t,conststd::string,int)">bind(size_t, const std :: string &, int)<\/a><\/h3>$/;"	a
bind(size_t,conststd::wstring,int)	html/query_h/Classes/query/index.html	/^<h3><a name="bind(size_t,conststd::wstring,int)">bind(size_t, const std :: wstring &, int)<\/a><\/h3>$/;"	a
bind(size_t,double)	html/query_h/Classes/query/index.html	/^<h3><a name="bind(size_t,double)">bind(size_t, double)<\/a><\/h3>$/;"	a
bind(size_t,int)	html/query_h/Classes/query/index.html	/^<h3><a name="bind(size_t,int)">bind(size_t, int)<\/a><\/h3>$/;"	a
bind(size_t,longlong)	html/query_h/Classes/query/index.html	/^<h3><a name="bind(size_t,longlong)">bind(size_t, long long)<\/a><\/h3>$/;"	a
bind_all	src/bindable.h	/^            bindable &bind_all(const T &value, const List &... argv)$/;"	f	class:arg3::db::bindable
bind_columns_to_query	src/record.h	/^            size_t bind_columns_to_query(query &query, const std::vector<std::string> &columns) const$/;"	f	class:arg3::db::record
bind_list	src/bindable.h	/^            bindable &bind_list(size_t index, const T &value)$/;"	f	class:arg3::db::bindable
bind_list	src/bindable.h	/^            bindable &bind_list(size_t index, const T &value, const List &... argv)$/;"	f	class:arg3::db::bindable
bind_mapping	src/bindable.cpp	/^        bind_mapping::bind_mapping()$/;"	f	class:arg3::db::bind_mapping
bind_mapping	src/bindable.cpp	/^        bind_mapping::bind_mapping(bind_mapping &&other) : mappings_(std::move(other.mappings_))$/;"	f	class:arg3::db::bind_mapping
bind_mapping	src/bindable.cpp	/^        bind_mapping::bind_mapping(const bind_mapping &other) : mappings_(other.mappings_)$/;"	f	class:arg3::db::bind_mapping
bind_mapping	src/bindable.h	/^        class bind_mapping : public bindable$/;"	c	namespace:arg3::db
bind_params	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="bind_params">bind_params<\/a><\/h3>$/;"	a
bind_params	src/mysql/binding.cpp	/^            void binding::bind_params(MYSQL_STMT *stmt) const$/;"	f	class:arg3::db::mysql::binding
bind_result	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="bind_result">bind_result<\/a><\/h3>$/;"	a
bind_result	src/mysql/binding.cpp	/^            void binding::bind_result(MYSQL_STMT *stmt) const$/;"	f	class:arg3::db::mysql::binding
bind_value	html/query_h/Classes/query/index.html	/^<h3><a name="bind_value">bind_value<\/a><\/h3>$/;"	a
bind_value	src/bindable.cpp	/^        bindable &bindable::bind_value(size_t index, const sql_value &value)$/;"	f	class:arg3::db::bindable
bind_value_copy	src/mysql/binding.cpp	/^                void bind_value_copy(MYSQL_BIND *value, const MYSQL_BIND *other)$/;"	f	namespace:arg3::db::mysql::helper
bind_value_from_field	src/mysql/binding.cpp	/^                void bind_value_from_field(MYSQL_BIND *value, MYSQL_FIELD *field)$/;"	f	namespace:arg3::db::mysql::helper
bindable	html/bindable_h/Classes/bindable/index.html	/^<h1><a name="bindable">bindable<\/a><\/h1>$/;"	a
bindable	src/bindable.h	/^        class bindable$/;"	c	namespace:arg3::db
bindable.h	html/bindable_h/index.html	/^<h1><a name="bindable.h">bindable.h<\/a><\/h1>$/;"	a
binding	src/mysql/binding.cpp	/^            binding::binding() : value_(nullptr), size_(0)$/;"	f	class:arg3::db::mysql::binding
binding	src/mysql/binding.cpp	/^            binding::binding(MYSQL_BIND *values, size_t size) : value_(nullptr), size_(size)$/;"	f	class:arg3::db::mysql::binding
binding	src/mysql/binding.cpp	/^            binding::binding(MYSQL_FIELD *fields, size_t size) : size_(size)$/;"	f	class:arg3::db::mysql::binding
binding	src/mysql/binding.cpp	/^            binding::binding(binding &&other) : bind_mapping(std::move(other))$/;"	f	class:arg3::db::mysql::binding
binding	src/mysql/binding.cpp	/^            binding::binding(const MYSQL_BIND &value) : value_(nullptr), size_(1)$/;"	f	class:arg3::db::mysql::binding
binding	src/mysql/binding.cpp	/^            binding::binding(const binding &other) : bind_mapping(other), value_(nullptr), size_(0)$/;"	f	class:arg3::db::mysql::binding
binding	src/mysql/binding.cpp	/^            binding::binding(size_t size) : value_(nullptr), size_(size)$/;"	f	class:arg3::db::mysql::binding
binding	src/mysql/binding.h	/^            class binding : public arg3::db::bind_mapping$/;"	c	namespace:arg3::db::mysql
binding	src/postgres/binding.cpp	/^            binding::binding() : values_(nullptr), types_(nullptr), lengths_(nullptr), formats_(nullptr), size_(0)$/;"	f	class:arg3::db::postgres::binding
binding	src/postgres/binding.cpp	/^            binding::binding(binding &&other)$/;"	f	class:arg3::db::postgres::binding
binding	src/postgres/binding.cpp	/^            binding::binding(const binding &other)$/;"	f	class:arg3::db::postgres::binding
binding	src/postgres/binding.cpp	/^            binding::binding(size_t size) : values_(nullptr), types_(nullptr), lengths_(nullptr), formats_(nullptr), size_(size)$/;"	f	class:arg3::db::postgres::binding
binding	src/postgres/binding.h	/^            class binding : public arg3::db::bind_mapping$/;"	c	namespace:arg3::db::postgres
bindings_	src/mysql/resultset.h	/^                std::shared_ptr<mysql::binding> bindings_;$/;"	m	class:arg3::db::mysql::stmt_resultset
bindings_	src/mysql/statement.h	/^                binding bindings_;$/;"	m	class:arg3::db::mysql::statement
bindings_	src/postgres/statement.h	/^                binding bindings_;$/;"	m	class:arg3::db::postgres::statement
blue	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* blue() const$/;"	f	struct:bandit::detail::colorizer
blue	tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* blue() const$/;"	f	struct:bandit::detail::colorizer
break_on_failure	libs/variant/tests/vendor/bandit/bandit/options.h	/^      bool break_on_failure() const$/;"	f	struct:bandit::detail::options
break_on_failure_	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool break_on_failure_;$/;"	m	struct:bandit::detail::bandit_run_policy
buf_empty	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    bool buf_empty()$/;"	f	class:option::PrintUsageImplementation::LineWrapper
buf_empty	tests/vendor/bandit/bandit/external/optionparser.h	/^    bool buf_empty()$/;"	f	class:option::PrintUsageImplementation::LineWrapper
buf_full	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    bool buf_full()$/;"	f	class:option::PrintUsageImplementation::LineWrapper
buf_full	tests/vendor/bandit/bandit/external/optionparser.h	/^    bool buf_full()$/;"	f	class:option::PrintUsageImplementation::LineWrapper
buf_next	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    void buf_next()$/;"	f	class:option::PrintUsageImplementation::LineWrapper
buf_next	tests/vendor/bandit/bandit/external/optionparser.h	/^    void buf_next()$/;"	f	class:option::PrintUsageImplementation::LineWrapper
buf_store	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    void buf_store(const char* data, int len)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
buf_store	tests/vendor/bandit/bandit/external/optionparser.h	/^    void buf_store(const char* data, int len)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
buffer	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* buffer;$/;"	m	class:option::Parser::StoreOptionAction
buffer	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* buffer;$/;"	m	class:option::Parser::StoreOptionAction
buffer_max	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  unsigned buffer_max;$/;"	m	struct:option::Stats
buffer_max	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  unsigned* buffer_max;$/;"	m	class:option::Stats::CountOptionsAction
buffer_max	tests/vendor/bandit/bandit/external/optionparser.h	/^  unsigned buffer_max;$/;"	m	struct:option::Stats
buffer_max	tests/vendor/bandit/bandit/external/optionparser.h	/^  unsigned* buffer_max;$/;"	m	class:option::Stats::CountOptionsAction
bufmask	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    static const int bufmask = 15; \/\/!< Must be a power of 2 minus 1.$/;"	m	class:option::PrintUsageImplementation::LineWrapper
bufmask	tests/vendor/bandit/bandit/external/optionparser.h	/^    static const int bufmask = 15; \/\/!< Must be a power of 2 minus 1.$/;"	m	class:option::PrintUsageImplementation::LineWrapper
bufmax	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  int bufmax; \/\/! Number of slots in @c buffer. @c -1 means "large enough".$/;"	m	class:option::Parser::StoreOptionAction
bufmax	tests/vendor/bandit/bandit/external/optionparser.h	/^  int bufmax; \/\/! Number of slots in @c buffer. @c -1 means "large enough".$/;"	m	class:option::Parser::StoreOptionAction
build_for	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/cross_compile.sh	/^function build_for {$/;"	f
build_for	libs/variant/tests/vendor/bandit/cross_compile.sh	/^function build_for {$/;"	f
build_for	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/cross_compile.sh	/^function build_for {$/;"	f
build_for	tests/vendor/bandit/cross_compile.sh	/^function build_for {$/;"	f
builtin_clz	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static int builtin_clz(unsigned x)$/;"	f	struct:option::MSC_Builtin_CLZ
builtin_clz	tests/vendor/bandit/bandit/external/optionparser.h	/^  static int builtin_clz(unsigned x)$/;"	f	struct:option::MSC_Builtin_CLZ
c_alloc	html/alloc_h/index.html	/^<h3><a name="c_alloc">c_alloc<\/a><\/h3>$/;"	a
c_alloc	src/alloc.cpp	/^        void *c_alloc(size_t size, size_t num = 1)$/;"	f	namespace:arg3::db
c_alloc	src/alloc.h	/^        T *c_alloc(T *value, size_t num, size_t oldSize)$/;"	f	namespace:arg3::db
c_alloc	src/alloc.h	/^        T *c_alloc(size_t num = 1)$/;"	f	namespace:arg3::db
c_alloc(size_t)	html/alloc_h/index.html	/^<h3><a name="c_alloc(size_t)">c_alloc(size_t)<\/a><\/h3>$/;"	a
c_alloc(size_t,size_t)	html/alloc_h/index.html	/^<h3><a name="c_alloc(size_t,size_t)">c_alloc(size_t, size_t)<\/a><\/h3>$/;"	a
cache	src/sqlite/db.h	/^            namespace cache$/;"	n	namespace:arg3::db::sqlite
cacheLevel_	src/sqlite/db.h	/^                cache::level cacheLevel_;$/;"	m	class:arg3::db::sqlite::db
cache_level	src/sqlite/db.cpp	/^            cache::level db::cache_level() const$/;"	f	class:arg3::db::sqlite::db
cached_column	src/sqlite/column.cpp	/^            cached_column::cached_column(cached_column &&other) : name_(std::move(other.name_)), value_(std::move(other.value_)), type_(other.type_)$/;"	f	class:arg3::db::sqlite::cached_column
cached_column	src/sqlite/column.cpp	/^            cached_column::cached_column(const shared_ptr<sqlite3_stmt> &stmt, int column)$/;"	f	class:arg3::db::sqlite::cached_column
cached_column	src/sqlite/column.h	/^            class cached_column : public column_impl$/;"	c	namespace:arg3::db::sqlite
cached_resultset	src/sqlite/resultset.cpp	/^            cached_resultset::cached_resultset(cached_resultset &&other) : db_(other.db_), rows_(other.rows_), currentRow_(other.currentRow_)$/;"	f	class:arg3::db::sqlite::cached_resultset
cached_resultset	src/sqlite/resultset.cpp	/^            cached_resultset::cached_resultset(sqlite::db *db, shared_ptr<sqlite3_stmt> stmt) : db_(db), currentRow_(-1)$/;"	f	class:arg3::db::sqlite::cached_resultset
cached_resultset	src/sqlite/resultset.h	/^            class cached_resultset : public resultset_impl$/;"	c	namespace:arg3::db::sqlite
cached_row	src/sqlite/row.cpp	/^            cached_row::cached_row(cached_row &&other) : columns_(std::move(other.columns_))$/;"	f	class:arg3::db::sqlite::cached_row
cached_row	src/sqlite/row.cpp	/^            cached_row::cached_row(sqlite::db *db, shared_ptr<sqlite3_stmt> stmt)$/;"	f	class:arg3::db::sqlite::cached_row
cached_row	src/sqlite/row.h	/^            class cached_row : public row_impl$/;"	c	namespace:arg3::db::sqlite
call_log	libs/variant/tests/vendor/bandit/specs/fakes/logging_fake.h	/^    std::string call_log()$/;"	f	struct:bandit::specs::logging_fake
call_log	tests/vendor/bandit/specs/fakes/logging_fake.h	/^    std::string call_log()$/;"	f	struct:bandit::specs::logging_fake
callback	src/record.h	/^            typedef std::function<void(const std::shared_ptr<T> &)> callback;$/;"	t	class:arg3::db::record
cbegin	src/row.cpp	/^        row::const_iterator row::cbegin() const$/;"	f	class:arg3::db::row
cend	src/row.cpp	/^        row::const_iterator row::cend() const$/;"	f	class:arg3::db::row
check_arg	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const CheckArg check_arg;$/;"	m	struct:option::Descriptor
check_arg	tests/vendor/bandit/bandit/external/optionparser.h	/^  const CheckArg check_arg;$/;"	m	struct:option::Descriptor
clean	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    clean,$/;"	e	enum:fuzzbox::__anon5	file:
clean	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    clean,$/;"	e	enum:fuzzbox::__anon12	file:
cleanup	libs/variant/src/variant.cpp	/^    void variant::cleanup()$/;"	f	class:arg3::variant
clear	src/schema_factory.cpp	/^        void schema_factory::clear(const string &tablename)$/;"	f	class:arg3::db::schema_factory
clear_value	src/mysql/binding.cpp	/^            void binding::clear_value()$/;"	f	class:arg3::db::mysql::binding
clear_value	src/mysql/binding.cpp	/^            void binding::clear_value(size_t i)$/;"	f	class:arg3::db::mysql::binding
clear_value	src/postgres/binding.cpp	/^            void binding::clear_value()$/;"	f	class:arg3::db::postgres::binding
clear_value	src/postgres/binding.cpp	/^            void binding::clear_value(size_t i)$/;"	f	class:arg3::db::postgres::binding
close	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="close">close<\/a><\/h3>$/;"	a
close	src/mysql/db.cpp	/^            void db::close()$/;"	f	class:arg3::db::mysql::db
close	src/postgres/db.cpp	/^            void db::close()$/;"	f	class:arg3::db::postgres::db
close	src/sqlite/db.cpp	/^            void db::close()$/;"	f	class:arg3::db::sqlite::db
close_db	src/mysql/db.cpp	/^                struct close_db {$/;"	s	namespace:arg3::db::mysql::helper	file:
close_db	src/postgres/db.cpp	/^                struct close_db {$/;"	s	namespace:arg3::db::postgres::helper	file:
close_db	src/sqlite/db.cpp	/^                struct close_db {$/;"	s	namespace:arg3::db::sqlite::helper	file:
cmp_	libs/variant/src/binary.h	/^        cmp_fn cmp_;$/;"	m	class:arg3::binary
cmp_fn	libs/variant/src/binary.h	/^        typedef int (*cmp_fn)(const void *, const void *, size_t);$/;"	t	class:arg3::binary
col	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int col; \/\/!< Index of current column.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
col	tests/vendor/bandit/bandit/external/optionparser.h	/^    int col; \/\/!< Index of current column.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
colorizer	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^    colorizer(bool colors_enabled = true)$/;"	f	struct:bandit::detail::colorizer
colorizer	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^  struct colorizer$/;"	s	namespace:bandit::detail
colorizer	tests/vendor/bandit/bandit/reporters/colorizer.h	/^    colorizer(bool colors_enabled = true)$/;"	f	struct:bandit::detail::colorizer
colorizer	tests/vendor/bandit/bandit/reporters/colorizer.h	/^  struct colorizer$/;"	s	namespace:bandit::detail
colorizer_	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    const detail::colorizer& colorizer_;$/;"	m	struct:bandit::detail::dots_reporter
colorizer_	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	const detail::colorizer &colorizer_;$/;"	m	struct:bandit::detail::info_reporter
colorizer_	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    const detail::colorizer& colorizer_;$/;"	m	struct:bandit::detail::single_line_reporter
colorizer_	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    const detail::colorizer& colorizer_;$/;"	m	struct:bandit::detail::spec_reporter
colorizer_	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    const detail::colorizer& colorizer_;$/;"	m	struct:bandit::detail::test_run_summary
colorizer_	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    const detail::colorizer& colorizer_;$/;"	m	struct:bandit::detail::dots_reporter
colorizer_	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	const detail::colorizer &colorizer_;$/;"	m	struct:bandit::detail::info_reporter
colorizer_	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    const detail::colorizer& colorizer_;$/;"	m	struct:bandit::detail::single_line_reporter
colorizer_	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    const detail::colorizer& colorizer_;$/;"	m	struct:bandit::detail::spec_reporter
colorizer_	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    const detail::colorizer& colorizer_;$/;"	m	struct:bandit::detail::test_run_summary
colors_enabled_	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^    bool colors_enabled_;$/;"	m	struct:bandit::detail::colorizer
colors_enabled_	tests/vendor/bandit/bandit/reporters/colorizer.h	/^    bool colors_enabled_;$/;"	m	struct:bandit::detail::colorizer
column	html/column_h/Classes/column/index.html	/^<h1><a name="column">column<\/a><\/h1>$/;"	a
column	html/column_h/Classes/column/index.html	/^<h3><a name="column">column<\/a><\/h3>$/;"	a
column	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int column()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
column	src/column.cpp	/^        column::column()$/;"	f	class:arg3::db::column
column	src/column.cpp	/^        column::column(column &&other) : impl_(std::move(other.impl_))$/;"	f	class:arg3::db::column
column	src/column.cpp	/^        column::column(const column &other) : impl_(other.impl_)$/;"	f	class:arg3::db::column
column	src/column.cpp	/^        column::column(const std::shared_ptr<column_impl> &impl) : impl_(impl)$/;"	f	class:arg3::db::column
column	src/column.h	/^        class column$/;"	c	namespace:arg3::db
column	src/mysql/column.cpp	/^            column::column(column &&other) : value_(other.value_), res_(other.res_), index_(other.index_)$/;"	f	class:arg3::db::mysql::column
column	src/mysql/column.cpp	/^            column::column(const shared_ptr<MYSQL_RES> &res, MYSQL_ROW pValue, size_t index) : value_(pValue), res_(res), index_(index)$/;"	f	class:arg3::db::mysql::column
column	src/mysql/column.h	/^            class column : public column_impl$/;"	c	namespace:arg3::db::mysql
column	src/mysql/row.cpp	/^            row::column_type row::column(const string &name) const$/;"	f	class:arg3::db::mysql::row
column	src/mysql/row.cpp	/^            row::column_type row::column(size_t position) const$/;"	f	class:arg3::db::mysql::row
column	src/mysql/row.cpp	/^            stmt_row::column_type stmt_row::column(const string &name) const$/;"	f	class:arg3::db::mysql::stmt_row
column	src/mysql/row.cpp	/^            stmt_row::column_type stmt_row::column(size_t position) const$/;"	f	class:arg3::db::mysql::stmt_row
column	src/postgres/column.cpp	/^            column::column(column &&other) : stmt_(other.stmt_), column_(other.column_), row_(other.row_)$/;"	f	class:arg3::db::postgres::column
column	src/postgres/column.cpp	/^            column::column(const shared_ptr<PGresult> &stmt, int row, int column) : stmt_(stmt), column_(column), row_(row)$/;"	f	class:arg3::db::postgres::column
column	src/postgres/column.h	/^            class column : public column_impl$/;"	c	namespace:arg3::db::postgres
column	src/postgres/row.cpp	/^            row::column_type row::column(const string &name) const$/;"	f	class:arg3::db::postgres::row
column	src/postgres/row.cpp	/^            row::column_type row::column(size_t nPosition) const$/;"	f	class:arg3::db::postgres::row
column	src/row.cpp	/^        row::column_type row::column(const string &name) const$/;"	f	class:arg3::db::row
column	src/row.cpp	/^        row::column_type row::column(size_t nPosition) const$/;"	f	class:arg3::db::row
column	src/sqlite/column.cpp	/^            column::column(column &&other) : stmt_(other.stmt_), column_(other.column_)$/;"	f	class:arg3::db::sqlite::column
column	src/sqlite/column.cpp	/^            column::column(const shared_ptr<sqlite3_stmt> &stmt, int column) : stmt_(stmt), column_(column)$/;"	f	class:arg3::db::sqlite::column
column	src/sqlite/column.h	/^            class column : public column_impl$/;"	c	namespace:arg3::db::sqlite
column	src/sqlite/row.cpp	/^            cached_row::column_type cached_row::column(const string &name) const$/;"	f	class:arg3::db::sqlite::cached_row
column	src/sqlite/row.cpp	/^            cached_row::column_type cached_row::column(size_t nPosition) const$/;"	f	class:arg3::db::sqlite::cached_row
column	src/sqlite/row.cpp	/^            row::column_type row::column(const string &name) const$/;"	f	class:arg3::db::sqlite::row
column	src/sqlite/row.cpp	/^            row::column_type row::column(size_t nPosition) const$/;"	f	class:arg3::db::sqlite::row
column	tests/vendor/bandit/bandit/external/optionparser.h	/^    int column()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
column(constcolumn)	html/column_h/Classes/column/index.html	/^<h3><a name="column(constcolumn)">column(const column &)<\/a><\/h3>$/;"	a
column(conststd::shared_ptr)	html/column_h/Classes/column/index.html	/^<h3><a name="column(conststd::shared_ptr)">column(const std :: shared_ptr &)<\/a><\/h3>$/;"	a
column(conststd::string)	html/mysql_row_h/Classes/mysql_row/index.html	/^<h3><a name="column(conststd::string)">column(const std :: string &)<\/a><\/h3>$/;"	a
column(conststd::string)	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<h3><a name="column(conststd::string)">column(const std :: string &)<\/a><\/h3>$/;"	a
column(size_t)	html/mysql_row_h/Classes/mysql_row/index.html	/^<h3><a name="column(size_t)">column(size_t)<\/a><\/h3>$/;"	a
column(size_t)	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<h3><a name="column(size_t)">column(size_t)<\/a><\/h3>$/;"	a
column.h	html/column_h/index.html	/^<h1><a name="column.h">column.h<\/a><\/h1>$/;"	a
column_	src/postgres/column.h	/^                int column_;$/;"	m	class:arg3::db::postgres::column
column_	src/sqlite/column.h	/^                int column_;$/;"	m	class:arg3::db::sqlite::column
column_definition	html/schema_h/index.html	/^<h3><a name="column_definition">column_definition<\/a><\/h3>$/;"	a
column_definition	src/schema.h	/^        struct column_definition {$/;"	s	namespace:arg3::db
column_impl	html/column_h/Classes/column_impl/index.html	/^<h1><a name="column_impl">column_impl<\/a><\/h1>$/;"	a
column_impl	src/column.h	/^        class column_impl$/;"	c	namespace:arg3::db
column_name	html/mysql_row_h/Classes/mysql_row/index.html	/^<h3><a name="column_name">column_name<\/a><\/h3>$/;"	a
column_name	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<h3><a name="column_name">column_name<\/a><\/h3>$/;"	a
column_name	src/mysql/row.cpp	/^            string row::column_name(size_t position) const$/;"	f	class:arg3::db::mysql::row
column_name	src/mysql/row.cpp	/^            string stmt_row::column_name(size_t position) const$/;"	f	class:arg3::db::mysql::stmt_row
column_name	src/postgres/row.cpp	/^            string row::column_name(size_t nPosition) const$/;"	f	class:arg3::db::postgres::row
column_name	src/row.cpp	/^        string row::column_name(size_t nPosition) const$/;"	f	class:arg3::db::row
column_name	src/sqlite/row.cpp	/^            string cached_row::column_name(size_t nPosition) const$/;"	f	class:arg3::db::sqlite::cached_row
column_name	src/sqlite/row.cpp	/^            string row::column_name(size_t nPosition) const$/;"	f	class:arg3::db::sqlite::row
column_names	src/schema.cpp	/^        vector<string> schema::column_names() const$/;"	f	class:arg3::db::schema
column_type	src/row.h	/^            typedef arg3::db::column column_type;$/;"	t	class:arg3::db::row
column_type	src/row.h	/^            typedef arg3::db::column column_type;$/;"	t	class:arg3::db::row_impl
columns	src/insert_query.cpp	/^        insert_query &insert_query::columns(const vector<string> &columns)$/;"	f	class:arg3::db::insert_query
columns	src/insert_query.cpp	/^        vector<string> insert_query::columns() const$/;"	f	class:arg3::db::insert_query
columns	src/schema.cpp	/^        vector<column_definition> schema::columns() const$/;"	f	class:arg3::db::schema
columns	src/select_query.cpp	/^        select_query &select_query::columns(const vector<string> &value)$/;"	f	class:arg3::db::select_query
columns	src/select_query.cpp	/^        vector<string> select_query::columns() const$/;"	f	class:arg3::db::select_query
columns	src/update_query.cpp	/^        update_query &update_query::columns(const vector<string> &columns)$/;"	f	class:arg3::db::update_query
columns	src/update_query.cpp	/^        vector<string> update_query::columns() const$/;"	f	class:arg3::db::update_query
columns_	src/insert_query.h	/^            std::vector<std::string> columns_;$/;"	m	class:arg3::db::insert_query
columns_	src/schema.h	/^            std::vector<column_definition> columns_;$/;"	m	class:arg3::db::schema
columns_	src/select_query.h	/^            std::vector<std::string> columns_;$/;"	m	class:arg3::db::select_query
columns_	src/sqlite/row.h	/^                std::vector<std::shared_ptr<cached_column>> columns_;$/;"	m	class:arg3::db::sqlite::cached_row
columns_	src/update_query.h	/^            std::vector<std::string> columns_;$/;"	m	class:arg3::db::update_query
comparator	src/record.h	/^            typedef std::function<void(const std::shared_ptr<T> &, const std::shared_ptr<T> &)> comparator;$/;"	t	class:arg3::db::record
compiler_thinks_i_am_unused	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    void compiler_thinks_i_am_unused() {}$/;"	f	class:snowhouse::ExceptionStorage
compiler_thinks_i_am_unused	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    void compiler_thinks_i_am_unused() {}$/;"	f	class:snowhouse::ExceptionStorage
compl_	libs/variant/src/variant.h	/^            std::shared_ptr<complex> compl_;$/;"	m	union:arg3::variant::__anon2
complex	libs/variant/src/variant.h	/^        class complex$/;"	c	class:arg3::variant
complex_val	libs/variant/tests/variant.test.cpp	/^    complex_val(int val) : val_(val)$/;"	f	class:complex_val
complex_val	libs/variant/tests/variant.test.cpp	/^class complex_val : public variant::complex$/;"	c	file:
connectionInfo_	src/sqldb.h	/^            uri connectionInfo_;$/;"	m	class:arg3::db::sqldb
connection_info	src/sqldb.cpp	/^        uri sqldb::connection_info() const$/;"	f	class:arg3::db::sqldb
const_iterator	src/resultset.h	/^            typedef resultset_iterator<const row_type, row_type> const_iterator;$/;"	t	class:arg3::db::resultset
const_iterator	src/row.h	/^            typedef row_iterator<const column_type, column_type, const row_impl> const_iterator;$/;"	t	class:arg3::db::row
constraint_internal	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^  namespace constraint_internal {$/;"	n	namespace:snowhouse
constraint_internal	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^  namespace constraint_internal {$/;"	n	namespace:snowhouse
contain	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^    Contain<T> contain(const T& element)$/;"	f	namespace:bandit::Matchers
contain	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^    Contain<T> contain(const T& element)$/;"	f	namespace:bandit::Matchers
context	libs/variant/tests/vendor/bandit/bandit/context.h	/^    class context$/;"	c	namespace:bandit::detail
context	tests/vendor/bandit/bandit/context.h	/^    class context$/;"	c	namespace:bandit::detail
context_ended	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void context_ended(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
context_ended	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void context_ended(const char*) $/;"	f	struct:bandit::detail::progress_reporter
context_ended	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void context_ended(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
context_ended	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void context_ended(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
context_ended	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void context_ended(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
context_ended	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void context_ended(const char*) $/;"	f	struct:bandit::detail::progress_reporter
context_ended	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void context_ended(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
context_ended	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void context_ended(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
context_matches_only_pattern	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool context_matches_only_pattern(const contextstack_t& contexts) const$/;"	f	struct:bandit::detail::bandit_run_policy
context_matches_only_pattern	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool context_matches_only_pattern(const contextstack_t& contexts) const$/;"	f	struct:bandit::detail::bandit_run_policy
context_matches_skip_pattern	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool context_matches_skip_pattern(const contextstack_t& contexts) const$/;"	f	struct:bandit::detail::bandit_run_policy
context_matches_skip_pattern	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool context_matches_skip_pattern(const contextstack_t& contexts) const$/;"	f	struct:bandit::detail::bandit_run_policy
context_stack	libs/variant/tests/vendor/bandit/bandit/context.h	/^    inline contextstack_t& context_stack()$/;"	f	namespace:bandit::detail
context_stack	tests/vendor/bandit/bandit/context.h	/^    inline contextstack_t& context_stack()$/;"	f	namespace:bandit::detail
context_starting	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void context_starting(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
context_starting	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void context_starting(const char* desc) $/;"	f	struct:bandit::detail::progress_reporter
context_starting	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void context_starting(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
context_starting	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void context_starting(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
context_starting	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void context_starting(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
context_starting	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void context_starting(const char* desc) $/;"	f	struct:bandit::detail::progress_reporter
context_starting	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void context_starting(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
context_starting	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void context_starting(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
contexts_	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    std::list<std::string> contexts_;$/;"	m	struct:bandit::detail::progress_reporter
contexts_	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    std::list<std::string> contexts_;$/;"	m	struct:bandit::detail::progress_reporter
contextstack_t	libs/variant/tests/vendor/bandit/bandit/context.h	/^    typedef std::deque<context*> contextstack_t;$/;"	t	namespace:bandit::detail
contextstack_t	tests/vendor/bandit/bandit/context.h	/^    typedef std::deque<context*> contextstack_t;$/;"	t	namespace:bandit::detail
convert	libs/variant/src/variant.h	/^        T convert(str_fn<R> strfunk, wstr_fn<R> wstrfunk) const$/;"	f	class:arg3::variant
convertToId	html/html/search/search.js	/^function convertToId(search)$/;"	f
convertToId	html/search/search.js	/^function convertToId(search)$/;"	f
convert_base	libs/variant/src/variant.h	/^        T convert_base(str_base_fn<R> strfunk, wstr_base_fn<R> wstrfunk, int base) const$/;"	f	class:arg3::variant
convert_numeric	libs/variant/src/variant.h	/^        T convert_numeric() const$/;"	f	class:arg3::variant
copy_	libs/variant/src/binary.h	/^        copy_fn copy_;$/;"	m	class:arg3::binary
copy_fn	libs/variant/src/binary.h	/^        typedef void *(*copy_fn)(void *, const void *, size_t);$/;"	t	class:arg3::binary
copy_mem	libs/variant/src/binary.cpp	/^    void binary::copy_mem(const void *p, size_t size, alloc_fn construct, copy_fn copy)$/;"	f	class:arg3::binary
copy_value	libs/variant/src/variant.cpp	/^    variant &variant::copy_value(const variant &other)$/;"	f	class:arg3::variant
copy_value	src/mysql/binding.cpp	/^            void binding::copy_value(const MYSQL_BIND *others, size_t size)$/;"	f	class:arg3::db::mysql::binding
copy_value	src/postgres/binding.cpp	/^            void binding::copy_value(const binding &value)$/;"	f	class:arg3::db::postgres::binding
count	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  int count()$/;"	f	class:option::Option
count	src/select_query.cpp	/^        long long select_query::count()$/;"	f	class:arg3::db::select_query
count	tests/vendor/bandit/bandit/external/optionparser.h	/^  int count()$/;"	f	class:option::Option
create	src/schema_factory.cpp	/^        shared_ptr<schema> schema_factory::create(const string &tableName)$/;"	f	class:arg3::db::schema_factory
createResults	html/html/search/search.js	/^function createResults()$/;"	f
createResults	html/search/search.js	/^function createResults()$/;"	f
create_formatter	libs/variant/tests/vendor/bandit/bandit/runner.h	/^    inline failure_formatter_ptr create_formatter(const options& opt)$/;"	f	namespace:bandit::detail
create_formatter	tests/vendor/bandit/bandit/runner.h	/^    inline failure_formatter_ptr create_formatter(const options& opt)$/;"	f	namespace:bandit::detail
create_reporter	libs/variant/tests/vendor/bandit/bandit/runner.h	/^    inline listener_ptr create_reporter(const options& opt,$/;"	f	namespace:bandit::detail
create_reporter	tests/vendor/bandit/bandit/runner.h	/^    inline listener_ptr create_reporter(const options& opt,$/;"	f	namespace:bandit::detail
create_run_policy	libs/variant/tests/vendor/bandit/bandit/runner.h	/^    inline run_policy_ptr create_run_policy(const options& opt)$/;"	f	namespace:bandit::detail
create_run_policy	tests/vendor/bandit/bandit/runner.h	/^    inline run_policy_ptr create_run_policy(const options& opt)$/;"	f	namespace:bandit::detail
create_statement	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="create_statement">create_statement<\/a><\/h3>$/;"	a
create_statement	src/mysql/db.cpp	/^            shared_ptr<db::statement_type> db::create_statement()$/;"	f	class:arg3::db::mysql::db
create_statement	src/postgres/db.cpp	/^            shared_ptr<db::statement_type> db::create_statement()$/;"	f	class:arg3::db::postgres::db
create_statement	src/sqlite/db.cpp	/^            shared_ptr<db::statement_type> db::create_statement()$/;"	f	class:arg3::db::sqlite::db
cross	src/join_clause.h	/^            typedef enum { none, natural, inner, left_outer, right_outer, full_outer, cross } type;$/;"	e	enum:arg3::db::join_clause::__anon6
current	src/log.cpp	/^            namespace current$/;"	n	namespace:arg3::db::log	file:
currentRow_	src/postgres/resultset.h	/^                int currentRow_;$/;"	m	class:arg3::db::postgres::resultset
currentRow_	src/sqlite/resultset.h	/^                int currentRow_;$/;"	m	class:arg3::db::sqlite::cached_resultset
currentValue_	src/row.h	/^            NonConst currentValue_;$/;"	m	class:arg3::db::row_iterator
current_context_name	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    std::string current_context_name()$/;"	f	struct:bandit::detail::progress_reporter
current_context_name	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    std::string current_context_name()$/;"	f	struct:bandit::detail::progress_reporter
current_row	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<h3><a name="current_row">current_row<\/a><\/h3>$/;"	a
current_row	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<h3><a name="current_row">current_row<\/a><\/h3>$/;"	a
current_row	src/mysql/resultset.cpp	/^            resultset::row_type resultset::current_row()$/;"	f	class:arg3::db::mysql::resultset
current_row	src/mysql/resultset.cpp	/^            resultset::row_type stmt_resultset::current_row()$/;"	f	class:arg3::db::mysql::stmt_resultset
current_row	src/postgres/resultset.cpp	/^            resultset::row_type resultset::current_row()$/;"	f	class:arg3::db::postgres::resultset
current_row	src/resultset.cpp	/^        resultset_impl::row_type resultset::current_row()$/;"	f	class:arg3::db::resultset
current_row	src/sqlite/resultset.cpp	/^            cached_resultset::row_type cached_resultset::current_row()$/;"	f	class:arg3::db::sqlite::cached_resultset
current_row	src/sqlite/resultset.cpp	/^            resultset::row_type resultset::current_row()$/;"	f	class:arg3::db::sqlite::resultset
custom_after_each_	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    detail::voidfunc_t custom_after_each_;$/;"	m	struct:bandit::fakes::fake_context
custom_after_each_	tests/vendor/bandit/specs/fakes/fake_context.h	/^    detail::voidfunc_t custom_after_each_;$/;"	m	struct:bandit::fakes::fake_context
custom_before_each_	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    detail::voidfunc_t custom_before_each_;$/;"	m	struct:bandit::fakes::fake_context
custom_before_each_	tests/vendor/bandit/specs/fakes/fake_context.h	/^    detail::voidfunc_t custom_before_each_;$/;"	m	struct:bandit::fakes::fake_context
data	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    const char* data()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
data	tests/vendor/bandit/bandit/external/optionparser.h	/^    const char* data()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
data_mapper	src/mysql/binding.cpp	/^            namespace data_mapper$/;"	n	namespace:arg3::db::mysql	file:
data_mapper	src/mysql/binding.h	/^            namespace data_mapper$/;"	n	namespace:arg3::db::mysql
data_mapper	src/postgres/binding.cpp	/^            namespace data_mapper$/;"	n	namespace:arg3::db::postgres	file:
data_mapper	src/postgres/binding.h	/^            namespace data_mapper$/;"	n	namespace:arg3::db::postgres
data_mapper	src/sqlite/column.cpp	/^            namespace data_mapper$/;"	n	namespace:arg3::db::sqlite	file:
datbuf	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    const char* datbuf[bufmask + 1];$/;"	m	class:option::PrintUsageImplementation::LineWrapper
datbuf	tests/vendor/bandit/bandit/external/optionparser.h	/^    const char* datbuf[bufmask + 1];$/;"	m	class:option::PrintUsageImplementation::LineWrapper
db	src/alloc.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/alloc.h	/^    namespace db$/;"	n	namespace:arg3
db	src/bindable.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/bindable.h	/^    namespace db$/;"	n	namespace:arg3
db	src/column.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/column.h	/^    namespace db$/;"	n	namespace:arg3
db	src/delete_query.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/delete_query.h	/^    namespace db$/;"	n	namespace:arg3
db	src/exception.h	/^    namespace db$/;"	n	namespace:arg3
db	src/insert_query.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/insert_query.h	/^    namespace db$/;"	n	namespace:arg3
db	src/join_clause.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/join_clause.h	/^    namespace db$/;"	n	namespace:arg3
db	src/log.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/log.h	/^    namespace db$/;"	n	namespace:arg3
db	src/modify_query.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/modify_query.h	/^    namespace db$/;"	n	namespace:arg3
db	src/mysql/binding.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/mysql/binding.h	/^    namespace db$/;"	n	namespace:arg3
db	src/mysql/column.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/mysql/column.h	/^    namespace db$/;"	n	namespace:arg3
db	src/mysql/db.cpp	/^            db::db(const db &other) : sqldb(other), db_(other.db_)$/;"	f	class:arg3::db::mysql::db
db	src/mysql/db.cpp	/^            db::db(const uri &connInfo) : sqldb(connInfo), db_(nullptr)$/;"	f	class:arg3::db::mysql::db
db	src/mysql/db.cpp	/^            db::db(db &&other) : sqldb(other), db_(other.db_)$/;"	f	class:arg3::db::mysql::db
db	src/mysql/db.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/mysql/db.h	/^            class db : public sqldb$/;"	c	namespace:arg3::db::mysql
db	src/mysql/db.h	/^    namespace db$/;"	n	namespace:arg3
db	src/mysql/resultset.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/mysql/resultset.h	/^    namespace db$/;"	n	namespace:arg3
db	src/mysql/row.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/mysql/row.h	/^    namespace db$/;"	n	namespace:arg3
db	src/mysql/statement.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/mysql/statement.h	/^    namespace db$/;"	n	namespace:arg3
db	src/postgres/binding.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/postgres/binding.h	/^    namespace db$/;"	n	namespace:arg3
db	src/postgres/column.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/postgres/column.h	/^    namespace db$/;"	n	namespace:arg3
db	src/postgres/db.cpp	/^            db::db(const db &other) : sqldb(other), db_(other.db_), lastId_(other.lastId_), lastNumChanges_(other.lastNumChanges_)$/;"	f	class:arg3::db::postgres::db
db	src/postgres/db.cpp	/^            db::db(const uri &info) : sqldb(info), db_(nullptr), lastId_(0), lastNumChanges_(0)$/;"	f	class:arg3::db::postgres::db
db	src/postgres/db.cpp	/^            db::db(db &&other) : sqldb(other), db_(other.db_), lastId_(other.lastId_), lastNumChanges_(other.lastNumChanges_)$/;"	f	class:arg3::db::postgres::db
db	src/postgres/db.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/postgres/db.h	/^            class db : public sqldb$/;"	c	namespace:arg3::db::postgres
db	src/postgres/db.h	/^    namespace db$/;"	n	namespace:arg3
db	src/postgres/resultset.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/postgres/resultset.h	/^    namespace db$/;"	n	namespace:arg3
db	src/postgres/row.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/postgres/row.h	/^    namespace db$/;"	n	namespace:arg3
db	src/postgres/statement.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/postgres/statement.h	/^    namespace db$/;"	n	namespace:arg3
db	src/query.cpp	/^        sqldb *query::db() const$/;"	f	class:arg3::db::query
db	src/query.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/query.h	/^    namespace db$/;"	n	namespace:arg3
db	src/record.h	/^    namespace db$/;"	n	namespace:arg3
db	src/resultset.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/resultset.h	/^    namespace db$/;"	n	namespace:arg3
db	src/row.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/row.h	/^    namespace db$/;"	n	namespace:arg3
db	src/schema.cpp	/^        sqldb *schema::db() const$/;"	f	class:arg3::db::schema
db	src/schema.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/schema.h	/^    namespace db$/;"	n	namespace:arg3
db	src/schema_factory.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/schema_factory.h	/^    namespace db$/;"	n	namespace:arg3
db	src/select_query.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/select_query.h	/^    namespace db$/;"	n	namespace:arg3
db	src/sql_value.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/sql_value.h	/^    namespace db$/;"	n	namespace:arg3
db	src/sqldb.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/sqldb.h	/^    namespace db$/;"	n	namespace:arg3
db	src/sqlite/column.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/sqlite/column.h	/^    namespace db$/;"	n	namespace:arg3
db	src/sqlite/db.cpp	/^            db::db(const db &other) : sqldb(other), db_(other.db_), cacheLevel_(other.cacheLevel_)$/;"	f	class:arg3::db::sqlite::db
db	src/sqlite/db.cpp	/^            db::db(const uri &info) : sqldb(info), db_(nullptr), cacheLevel_(cache::None)$/;"	f	class:arg3::db::sqlite::db
db	src/sqlite/db.cpp	/^            db::db(db &&other) : sqldb(other), db_(std::move(other.db_)), cacheLevel_(other.cacheLevel_)$/;"	f	class:arg3::db::sqlite::db
db	src/sqlite/db.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/sqlite/db.h	/^            class db : public sqldb$/;"	c	namespace:arg3::db::sqlite
db	src/sqlite/db.h	/^    namespace db$/;"	n	namespace:arg3
db	src/sqlite/resultset.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/sqlite/resultset.h	/^    namespace db$/;"	n	namespace:arg3
db	src/sqlite/row.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/sqlite/row.h	/^    namespace db$/;"	n	namespace:arg3
db	src/sqlite/statement.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/sqlite/statement.h	/^    namespace db$/;"	n	namespace:arg3
db	src/statement.h	/^    namespace db$/;"	n	namespace:arg3
db	src/update_query.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/update_query.h	/^    namespace db$/;"	n	namespace:arg3
db	src/where_clause.cpp	/^    namespace db$/;"	n	namespace:arg3	file:
db	src/where_clause.h	/^    namespace db$/;"	n	namespace:arg3
db_	src/mysql/db.h	/^                std::shared_ptr<MYSQL> db_;$/;"	m	class:arg3::db::mysql::db
db_	src/mysql/resultset.h	/^                mysql::db *db_;$/;"	m	class:arg3::db::mysql::resultset
db_	src/mysql/resultset.h	/^                mysql::db *db_;$/;"	m	class:arg3::db::mysql::stmt_resultset
db_	src/mysql/row.h	/^                mysql::db *db_;$/;"	m	class:arg3::db::mysql::row
db_	src/mysql/row.h	/^                mysql::db *db_;$/;"	m	class:arg3::db::mysql::stmt_row
db_	src/mysql/statement.h	/^                mysql::db *db_;$/;"	m	class:arg3::db::mysql::statement
db_	src/postgres/db.h	/^                std::shared_ptr<PGconn> db_;$/;"	m	class:arg3::db::postgres::db
db_	src/postgres/resultset.h	/^                postgres::db *db_;$/;"	m	class:arg3::db::postgres::resultset
db_	src/postgres/row.h	/^                postgres::db *db_;$/;"	m	class:arg3::db::postgres::row
db_	src/postgres/statement.h	/^                postgres::db *db_;$/;"	m	class:arg3::db::postgres::statement
db_	src/query.h	/^            sqldb *db_;$/;"	m	class:arg3::db::query
db_	src/schema.h	/^            sqldb *db_;$/;"	m	class:arg3::db::schema
db_	src/schema_factory.h	/^            sqldb *db_;$/;"	m	class:arg3::db::schema_factory
db_	src/sqlite/db.h	/^                std::shared_ptr<sqlite3> db_;$/;"	m	class:arg3::db::sqlite::db
db_	src/sqlite/resultset.h	/^                sqlite::db *db_;$/;"	m	class:arg3::db::sqlite::cached_resultset
db_	src/sqlite/resultset.h	/^                sqlite::db *db_;$/;"	m	class:arg3::db::sqlite::resultset
db_	src/sqlite/row.h	/^                sqlite::db *db_;$/;"	m	class:arg3::db::sqlite::row
db_	src/sqlite/statement.h	/^                sqlite::db *db_;$/;"	m	class:arg3::db::sqlite::statement
de1ete	src/record.h	/^            bool de1ete() const$/;"	f	class:arg3::db::record
debug	src/log.cpp	/^            void debug(const char *const format, ...)$/;"	f	namespace:arg3::db::log
decrease_indent	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    void decrease_indent()$/;"	f	struct:bandit::detail::spec_reporter
decrease_indent	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    void decrease_indent()$/;"	f	struct:bandit::detail::spec_reporter
default_comparer	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    inline bool default_comparer(const T& lhs, const T& rhs)$/;"	f	namespace:snowhouse::constraint_internal
default_comparer	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    inline bool default_comparer(const T& lhs, const T& rhs)$/;"	f	namespace:snowhouse::constraint_internal
default_failure_formatter	libs/variant/tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^  struct default_failure_formatter : public failure_formatter$/;"	s	namespace:bandit::detail
default_failure_formatter	tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^  struct default_failure_formatter : public failure_formatter$/;"	s	namespace:bandit::detail
define-members	html/exception_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	html/html/exception_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	html/html/log_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	html/log_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	html/postgres__column_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	html/postgres__row_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	html/sqlite3__column_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
define-members	html/sqlite3__row_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"><\/a>$/;"	a
delete_query	html/modify_query_h/Classes/delete_query/index.html	/^<h1><a name="delete_query">delete_query<\/a><\/h1>$/;"	a
delete_query	src/delete_query.cpp	/^        delete_query::delete_query(const delete_query &other) : modify_query(other), where_(other.where_), tableName_(other.tableName_)$/;"	f	class:arg3::db::delete_query
delete_query	src/delete_query.cpp	/^        delete_query::delete_query(const shared_ptr<schema> &schema) : modify_query(schema)$/;"	f	class:arg3::db::delete_query
delete_query	src/delete_query.cpp	/^        delete_query::delete_query(delete_query &&other)$/;"	f	class:arg3::db::delete_query
delete_query	src/delete_query.cpp	/^        delete_query::delete_query(sqldb *db, const std::string &tableName) : modify_query(db)$/;"	f	class:arg3::db::delete_query
delete_query	src/delete_query.h	/^        class delete_query : public modify_query$/;"	c	namespace:arg3::db
desc	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const Descriptor* desc;$/;"	m	class:option::Option
desc	tests/vendor/bandit/bandit/external/optionparser.h	/^  const Descriptor* desc;$/;"	m	class:option::Option
desc_	libs/variant/tests/vendor/bandit/bandit/context.h	/^        std::string desc_;$/;"	m	class:bandit::detail::bandit_context
desc_	tests/vendor/bandit/bandit/context.h	/^        std::string desc_;$/;"	m	class:bandit::detail::bandit_context
describe	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void describe(const char* desc, detail::voidfunc_t func)$/;"	f	namespace:bandit
describe	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void describe(const char* desc, detail::voidfunc_t func,$/;"	f	namespace:bandit
describe	tests/vendor/bandit/bandit/grammar.h	/^  inline void describe(const char* desc, detail::voidfunc_t func)$/;"	f	namespace:bandit
describe	tests/vendor/bandit/bandit/grammar.h	/^  inline void describe(const char* desc, detail::voidfunc_t func,$/;"	f	namespace:bandit
describe_skip	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void describe_skip(const char* desc, detail::voidfunc_t func)$/;"	f	namespace:bandit
describe_skip	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void describe_skip(const char* desc, detail::voidfunc_t func,$/;"	f	namespace:bandit
describe_skip	tests/vendor/bandit/bandit/grammar.h	/^  inline void describe_skip(const char* desc, detail::voidfunc_t func)$/;"	f	namespace:bandit
describe_skip	tests/vendor/bandit/bandit/grammar.h	/^  inline void describe_skip(const char* desc, detail::voidfunc_t func,$/;"	f	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/adapters/adapters.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^  namespace detail {$/;"	n	namespace:snowhouse
detail	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^  namespace detail$/;"	n	namespace:snowhouse
detail	libs/variant/tests/vendor/bandit/bandit/bandit.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/context.h	/^  namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/failure_formatters/failure_formatters.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/listener.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/options.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/registration/registrar.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/registration/spec_registry.h	/^  namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/reporters/reporters.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/runner.h	/^  namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^  namespace detail {$/;"	n	namespace:bandit
detail	libs/variant/tests/vendor/bandit/bandit/test_run_error.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/adapters/adapters.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/assertion_exception.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^  namespace detail {$/;"	n	namespace:snowhouse
detail	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^  namespace detail$/;"	n	namespace:snowhouse
detail	tests/vendor/bandit/bandit/bandit.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/context.h	/^  namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/failure_formatters/failure_formatters.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/listener.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/options.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/registration/registrar.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/registration/spec_registry.h	/^  namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/reporters/colorizer.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/reporters/reporters.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/run_policies/run_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/runner.h	/^  namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^  namespace detail {$/;"	n	namespace:bandit
detail	tests/vendor/bandit/bandit/test_run_error.h	/^namespace bandit { namespace detail {$/;"	n	namespace:bandit
details	html/alloc_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/base__record_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/bindable_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1base__record.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1bind__mapping.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1bindable.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1column__impl.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1delete__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1insert__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1join__clause.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1modify__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql_1_1binding.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql_1_1column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql_1_1db.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql_1_1resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql_1_1row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql_1_1statement.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql_1_1stmt__column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql_1_1stmt__resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql_1_1stmt__row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__binding.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__cached__column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__cached__resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__cached__row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__db.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__statement.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__stmt__column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__stmt__resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1mysql__stmt__row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres_1_1column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres_1_1db.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres_1_1resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres_1_1row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres_1_1statement.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres__cached__column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres__cached__resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres__cached__row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres__column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres__db.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres__resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres__row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1postgres__statement.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1record.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1resultset__impl.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1resultset__iterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1row__impl.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1row__iterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1schema.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1schema__factory.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1select__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sql__time.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sql__value.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqldb.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite3__cached__column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite3__cached__resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite3__cached__row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite3__column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite3__db.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite3__resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite3__row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite3__statement.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite_1_1cached__column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite_1_1cached__resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite_1_1cached__row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite_1_1column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite_1_1db.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite_1_1resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite_1_1row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1sqlite_1_1statement.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1statement.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1update__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/classarg3_1_1db_1_1where__clause.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/column_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/exception_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/alloc_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/base__record_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/bindable_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1base__record.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1bindable.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1column.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1column__impl.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1delete__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1insert__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1join__clause.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1modify__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1resultset.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1resultset__impl.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1resultset__iterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1row.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1row__impl.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1row__iterator.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1schema.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1schema__factory.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1select__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1sqldb.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1statement.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1update__query.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/classarg3_1_1db_1_1where__clause.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/column_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/exception_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/join__clause_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/log_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/modify__query_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/mysql__binding_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/mysql__column_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/mysql__db_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/mysql__resultset_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/mysql__row_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/mysql__statement_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/postgres__binding_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/postgres__column_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/postgres__db_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/postgres__resultset_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/postgres__row_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/postgres__statement_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/query_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/resultset_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/row_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/schema_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/schema__factory_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/select__query_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/sql__value_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/sqldb_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/statement_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/structarg3_1_1db_1_1column__definition.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/html/structarg3_1_1db_1_1uri.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/join__clause_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/log_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/modify__query_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/mysql__binding_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/mysql__column_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/mysql__db_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/mysql__resultset_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/mysql__row_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/mysql__statement_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/namespacearg3_1_1db_1_1postgres_1_1helper.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/postgres__binding_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/postgres__column_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/postgres__db_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/postgres__resultset_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/postgres__row_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/postgres__statement_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/query_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/record_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/resultset_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/row_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/schema_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/schema__factory_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/select__query_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/sql__value_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/sqldb_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/sqlite3__statement_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/statement_8h.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/structarg3_1_1db_1_1column__definition.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/structarg3_1_1db_1_1helper_1_1mysql__res__delete.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/structarg3_1_1db_1_1mysql_1_1helper_1_1res__delete.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/structarg3_1_1db_1_1sqlite3__stmt__delete.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/structarg3_1_1db_1_1sqlite_1_1helper_1_1stmt__delete.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/structarg3_1_1db_1_1uri.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
details	html/structarg3_1_1db_1_1uri__type.html	/^<a name="details" id="details"><\/a><h2 class="groupheader">Detailed Description<\/h2>$/;"	a
did_we_pass	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    bool did_we_pass() const$/;"	f	struct:bandit::detail::progress_reporter
did_we_pass	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    bool did_we_pass() const$/;"	f	struct:bandit::fakes::fake_reporter
did_we_pass	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    bool did_we_pass() const$/;"	f	struct:bandit::detail::progress_reporter
did_we_pass	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    bool did_we_pass() const$/;"	f	struct:bandit::fakes::fake_reporter
disclosure_triangle	html/alloc_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/base_record_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/bindable_h/Classes/bindable/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/bindable_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/column_h/Classes/column/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/column_h/Classes/column_impl/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/column_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/exception_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/join_clause_h/Classes/join_clause/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/join_clause_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/log_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/modify_query_h/Classes/delete_query/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/modify_query_h/Classes/insert_query/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/modify_query_h/Classes/modify_query/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/modify_query_h/Classes/update_query/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/modify_query_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_binding_h/Classes/mysql_binding/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_binding_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_column_h/Classes/mysql_column/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_column_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_db_h/Classes/mysql_db/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_db_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_resultset_h/Classes/mysql_cached_resultset/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_resultset_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_row_h/Classes/mysql_cached_row/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_row_h/Classes/mysql_row/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_row_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_statement_h/Classes/mysql_statement/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/mysql_statement_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_binding_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_column_h/Classes/postgres_cached_column/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_column_h/Classes/postgres_column/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_column_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_db_h/Classes/postgres_db/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_db_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_resultset_h/Classes/postgres_cached_resultset/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_resultset_h/Classes/postgres_resultset/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_resultset_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_row_h/Classes/postgres_cached_row/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_row_h/Classes/postgres_row/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_row_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_statement_h/Classes/postgres_statement/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/postgres_statement_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/query_h/Classes/query/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/query_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/resultset_h/Classes/resultset/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/resultset_h/Classes/resultset_impl/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/resultset_h/Classes/resultset_iterator/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/resultset_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/row_h/Classes/row/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/row_h/Classes/row_impl/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/row_h/Classes/row_iterator/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/row_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/schema_factory_h/Classes/schema_factory/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/schema_factory_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/schema_h/Classes/schema/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/schema_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/Classes/select_query/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/select_query_h/Classes/arg3/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/select_query_h/Classes/select_query/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/select_query_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sql_value_h/Classes/sql_value/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sql_value_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqldb_h/Classes/arg3/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqldb_h/Classes/sqldb/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqldb_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_column_h/Classes/sqlite3_cached_column/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_column_h/Classes/sqlite3_column/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_column_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_db_h/Classes/sqlite3_db/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_db_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_resultset_h/Classes/sqlite3_cached_resultset/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_resultset_h/Classes/sqlite3_resultset/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_resultset_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_row_h/Classes/sqlite3_cached_row/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_row_h/Classes/sqlite3_row/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_row_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_statement_h/Classes/sqlite3_statement/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/sqlite3_statement_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/statement_h/Classes/statement/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/statement_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/where_clause_h/Classes/where_clause/index.html	/^function disclosure_triangle(elt) {$/;"	f
disclosure_triangle	html/where_clause_h/index.html	/^function disclosure_triangle(elt) {$/;"	f
distorted	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    distorted$/;"	e	enum:fuzzbox::__anon5	file:
distorted	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    distorted$/;"	e	enum:fuzzbox::__anon12	file:
dots_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    dots_reporter(const failure_formatter& failure_formatter, const detail::colorizer& colorizer)$/;"	f	struct:bandit::detail::dots_reporter
dots_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    dots_reporter(std::ostream& stm, const failure_formatter& failure_formatter, $/;"	f	struct:bandit::detail::dots_reporter
dots_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^  struct dots_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
dots_reporter	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    dots_reporter(const failure_formatter& failure_formatter, const detail::colorizer& colorizer)$/;"	f	struct:bandit::detail::dots_reporter
dots_reporter	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    dots_reporter(std::ostream& stm, const failure_formatter& failure_formatter, $/;"	f	struct:bandit::detail::dots_reporter
dots_reporter	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^  struct dots_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
effect_	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    fuzzbox* effect_;$/;"	m	struct:fuzzbox::guitar	file:
effect_	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    fuzzbox* effect_;$/;"	m	struct:fuzzbox::guitar	file:
empty	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="empty">empty<\/a><\/h3>$/;"	a
empty	src/join_clause.cpp	/^        bool join_clause::empty() const$/;"	f	class:arg3::db::join_clause
empty	src/resultset.cpp	/^        bool resultset::empty() const$/;"	f	class:arg3::db::resultset
empty	src/row.cpp	/^        bool row::empty() const$/;"	f	class:arg3::db::row
empty	src/where_clause.cpp	/^        bool where_clause::empty() const$/;"	f	class:arg3::db::where_clause
encountered_failure	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^    virtual void encountered_failure()$/;"	f	struct:bandit::detail::run_policy
encountered_failure_	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^    bool encountered_failure_;$/;"	m	struct:bandit::detail::run_policy
end	src/resultset.cpp	/^        resultset::const_iterator resultset::end() const$/;"	f	class:arg3::db::resultset
end	src/resultset.cpp	/^        resultset::iterator resultset::end()$/;"	f	class:arg3::db::resultset
end	src/row.cpp	/^        row::const_iterator row::end() const$/;"	f	class:arg3::db::row
end	src/row.cpp	/^        row::iterator row::end()$/;"	f	class:arg3::db::row
enum-members	html/html/join__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	html/html/sqldb_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
enum-members	html/sqldb_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"><\/a>$/;"	a
equal	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    Equal<T> equal(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
equal	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    Equal<T> equal(const T& expectedValue)$/;"	f	namespace:bandit::Matchers
equals	libs/variant/src/variant.cpp	/^    bool variant::complex::equals(const complex &other) const$/;"	f	class:arg3::variant::complex
equals	libs/variant/src/variant.cpp	/^    bool variant::equals(const variant &value) const$/;"	f	class:arg3::variant
err	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  bool err; \/\/!< @internal @brief see error()$/;"	m	class:option::Parser
err	tests/vendor/bandit/bandit/external/optionparser.h	/^  bool err; \/\/!< @internal @brief see error()$/;"	m	class:option::Parser
error	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  bool error()$/;"	f	class:option::Parser
error	libs/variant/tests/vendor/bandit/cmake/cotire/src/log.cpp	/^void error(const std::string& msg) {$/;"	f	namespace:logging
error	src/log.cpp	/^            void error(const char *const format, ...)$/;"	f	namespace:arg3::db::log
error	src/log.cpp	/^            void error(int errnum)$/;"	f	namespace:arg3::db::log
error	tests/vendor/bandit/bandit/external/optionparser.h	/^  bool error()$/;"	f	class:option::Parser
error	tests/vendor/bandit/cmake/cotire/src/log.cpp	/^void error(const std::string& msg) {$/;"	f	namespace:logging
escape	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    std::string escape(const std::string& str)$/;"	f	struct:bandit::detail::xunit_reporter
escape	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    std::string escape(const std::string& str)$/;"	f	struct:bandit::detail::xunit_reporter
example	libs/variant/tests/vendor/bandit/cmake/cotire/src/example.cpp	/^namespace example {$/;"	n	file:
example	libs/variant/tests/vendor/bandit/cmake/cotire/src/example.h	/^namespace example {$/;"	n
example	tests/vendor/bandit/cmake/cotire/src/example.cpp	/^namespace example {$/;"	n	file:
example	tests/vendor/bandit/cmake/cotire/src/example.h	/^namespace example {$/;"	n
exception.h	html/exception_h/index.html	/^<h1><a name="exception.h">exception.h<\/a><\/h1>$/;"	a
execute	html/modify_query_h/Classes/insert_query/index.html	/^<h3><a name="execute">execute<\/a><\/h3>$/;"	a
execute	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="execute">execute<\/a><\/h3>$/;"	a
execute	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="execute">execute<\/a><\/h3>$/;"	a
execute	src/insert_query.cpp	/^        int insert_query::execute()$/;"	f	class:arg3::db::insert_query
execute	src/modify_query.cpp	/^        int modify_query::execute()$/;"	f	class:arg3::db::modify_query
execute	src/mysql/db.cpp	/^            db::resultset_type db::execute(const string &sql)$/;"	f	class:arg3::db::mysql::db
execute	src/postgres/db.cpp	/^            db::resultset_type db::execute(const string &sql)$/;"	f	class:arg3::db::postgres::db
execute	src/select_query.cpp	/^        resultset select_query::execute()$/;"	f	class:arg3::db::select_query
execute	src/select_query.cpp	/^        void select_query::execute(const std::function<void(const resultset &rs)> &funk)$/;"	f	class:arg3::db::select_query
execute	src/sqlite/db.cpp	/^            db::resultset_type db::execute(const string &sql)$/;"	f	class:arg3::db::sqlite::db
execute_scalar	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/Classes/select_query/index.html	/^<h3><a name="execute_scalar">execute_scalar<\/a><\/h3>$/;"	a
execute_scalar	html/select_query_h/Classes/select_query/index.html	/^<h3><a name="execute_scalar">execute_scalar<\/a><\/h3>$/;"	a
execute_scalar	src/select_query.h	/^            T execute_scalar()$/;"	f	class:arg3::db::select_query
execute_test	tests/run_all.test.cpp	/^int execute_test(const char *path)$/;"	f
execution_is_starting	libs/variant/tests/vendor/bandit/bandit/context.h	/^        void execution_is_starting()$/;"	f	class:bandit::detail::bandit_context
execution_is_starting	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    void execution_is_starting()$/;"	f	struct:bandit::fakes::fake_context
execution_is_starting	tests/vendor/bandit/bandit/context.h	/^        void execution_is_starting()$/;"	f	class:bandit::detail::bandit_context
execution_is_starting	tests/vendor/bandit/specs/fakes/fake_context.h	/^    void execution_is_starting()$/;"	f	struct:bandit::fakes::fake_context
exists	src/record.h	/^            bool exists() const$/;"	f	class:arg3::db::record
expected_	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    const ExpectedType expected_;$/;"	m	struct:snowhouse::EqualsContainerConstraint
expected_	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    const ExpectedType expected_;$/;"	m	struct:snowhouse::EqualsContainerConstraint
failure_formatter	libs/variant/tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^  struct failure_formatter$/;"	s	namespace:bandit::detail
failure_formatter	tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^  struct failure_formatter$/;"	s	namespace:bandit::detail
failure_formatter_	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    const detail::failure_formatter& failure_formatter_;$/;"	m	struct:bandit::detail::progress_reporter
failure_formatter_	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    const detail::failure_formatter& failure_formatter_;$/;"	m	struct:bandit::detail::progress_reporter
failure_formatter_ptr	libs/variant/tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^  typedef std::unique_ptr<failure_formatter> failure_formatter_ptr;$/;"	t	namespace:bandit::detail
failure_formatter_ptr	tests/vendor/bandit/bandit/failure_formatters/failure_formatter.h	/^  typedef std::unique_ptr<failure_formatter> failure_formatter_ptr;$/;"	t	namespace:bandit::detail
failure_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(char *const value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const U& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const container<U,V>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const container<U>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const std::function<U>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const std::nullptr_t pointer, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const std::unique_ptr<U>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(std::function<U>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(char *const value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const U& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const container<U,V>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const container<U>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const std::function<U>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const std::nullptr_t pointer, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(const std::unique_ptr<U>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Matcher.h	/^	std::string failure_message(std::function<U>& value, bool negate) const$/;"	f	class:bandit::Matchers::Matcher
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeCloseTo
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^	std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeEmpty
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeFalsy
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeGTE
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeGreaterThan
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeLTE
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeLessThan
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^	std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeNull
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeTruthy
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^	std::string failure_message_end() const$/;"	f	class:bandit::Matchers::Contain
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::Equal
failure_message_end	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        std::string failure_message_end() const$/;"	f	class:bandit::Matchers::ThrowException
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeCloseTo
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^	std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeEmpty
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeFalsy
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeGTE
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeGreaterThan
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeLTE
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeLessThan
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^	std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeNull
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::BeTruthy
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^	std::string failure_message_end() const$/;"	f	class:bandit::Matchers::Contain
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^        virtual std::string failure_message_end() const$/;"	f	class:bandit::Matchers::Equal
failure_message_end	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        std::string failure_message_end() const$/;"	f	class:bandit::Matchers::ThrowException
failures_	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    std::list<std::string> failures_;$/;"	m	struct:bandit::detail::progress_reporter
failures_	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    std::list<std::string> failures_;$/;"	m	struct:bandit::detail::test_run_summary
failures_	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    std::list<std::string> failures_;$/;"	m	struct:bandit::detail::progress_reporter
failures_	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    std::list<std::string> failures_;$/;"	m	struct:bandit::detail::test_run_summary
fake_context	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    fake_context() : hard_skip_(false), name_("fake_context"),$/;"	f	struct:bandit::fakes::fake_context
fake_context	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^  struct fake_context : public bandit::detail::context, public bandit::specs::logging_fake$/;"	s	namespace:bandit::fakes
fake_context	tests/vendor/bandit/specs/fakes/fake_context.h	/^    fake_context() : hard_skip_(false), name_("fake_context"),$/;"	f	struct:bandit::fakes::fake_context
fake_context	tests/vendor/bandit/specs/fakes/fake_context.h	/^  struct fake_context : public bandit::detail::context, public bandit::specs::logging_fake$/;"	s	namespace:bandit::fakes
fake_reporter	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    fake_reporter() : test_run_status_(true)$/;"	f	struct:bandit::fakes::fake_reporter
fake_reporter	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^  struct fake_reporter : $/;"	s	namespace:bandit::fakes
fake_reporter	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    fake_reporter() : test_run_status_(true)$/;"	f	struct:bandit::fakes::fake_reporter
fake_reporter	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^  struct fake_reporter : $/;"	s	namespace:bandit::fakes
fake_reporter_ptr	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^  typedef std::unique_ptr<fake_reporter> fake_reporter_ptr;$/;"	t	namespace:bandit::fakes
fake_reporter_ptr	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^  typedef std::unique_ptr<fake_reporter> fake_reporter_ptr;$/;"	t	namespace:bandit::fakes
fakes	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^namespace bandit { namespace fakes {$/;"	n	namespace:bandit
fakes	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^namespace bandit { namespace fakes {$/;"	n	namespace:bandit
fakes	tests/vendor/bandit/specs/fakes/fake_context.h	/^namespace bandit { namespace fakes {$/;"	n	namespace:bandit
fakes	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^namespace bandit { namespace fakes {$/;"	n	namespace:bandit
fd	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int fd;$/;"	m	struct:option::PrintUsageImplementation::SyscallWriter
fd	tests/vendor/bandit/bandit/external/optionparser.h	/^    int fd;$/;"	m	struct:option::PrintUsageImplementation::SyscallWriter
features	.vagrant-build/CMakeFiles/feature_tests.c	/^  const char features[] = {""$/;"	v
features	.vagrant-build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {""$/;"	v
features	debug/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	debug/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
fields_	src/mysql/row.h	/^                std::shared_ptr<mysql::binding> fields_;$/;"	m	class:arg3::db::mysql::stmt_row
file	src/log.cpp	/^            FILE *file = stdout;$/;"	m	namespace:arg3::db::log	file:
file_name	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^    const std::string& file_name() const$/;"	f	struct:bandit::detail::assertion_exception
file_name	tests/vendor/bandit/bandit/assertion_exception.h	/^    const std::string& file_name() const$/;"	f	struct:bandit::detail::assertion_exception
file_name_	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^    std::string file_name_;$/;"	m	struct:bandit::detail::assertion_exception
file_name_	tests/vendor/bandit/bandit/assertion_exception.h	/^    std::string file_name_;$/;"	m	struct:bandit::detail::assertion_exception
filename	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^        const char* filename;$/;"	m	struct:bandit::Matchers::ValueMarker
filename	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^	std::string& filename()	{ return _message; }$/;"	f	class:bandit::Matchers::MatcherException
filename	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^        const char* filename;$/;"	m	struct:bandit::Matchers::ValueMarker
files	html/dir_60069a2593ee8ad0d9786f72a1d3874d.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	html/dir_68267d1309a1af8e8297ef4c3efbcdba.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	html/dir_c2fdef15bfa3f58fa044504e43d14c93.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	html/dir_f4168869f34973b52812f2c13b570376.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
files	html/html/dir_68267d1309a1af8e8297ef4c3efbcdba.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"><\/a>$/;"	a
find	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    static bool find(const ContainerType& container, const ExpectedType& expected)$/;"	f	struct:snowhouse::find_in_container_traits
find	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    static bool find(const std::map<KeyType, ValueType>& container, const ExpectedType& expected)$/;"	f	struct:snowhouse::find_in_container_traits
find	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    static bool find(const ContainerType& container, const ExpectedType& expected)$/;"	f	struct:snowhouse::find_in_container_traits
find	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    static bool find(const std::map<KeyType, ValueType>& container, const ExpectedType& expected)$/;"	f	struct:snowhouse::find_in_container_traits
find_all	html/base_record_h/index.html	/^<h3><a name="find_all">find_all<\/a><\/h3>$/;"	a
find_all	src/record.h	/^            std::vector<std::shared_ptr<T>> find_all() const$/;"	f	class:arg3::db::record
find_all	src/record.h	/^            void find_all(const callback &funk) const$/;"	f	class:arg3::db::record
find_all	src/record.h	/^        inline std::vector<std::shared_ptr<T>> find_all(const std::shared_ptr<schema> &schema)$/;"	f	namespace:arg3::db
find_all	src/record.h	/^        inline void find_all(const std::shared_ptr<schema> &schema, const typename record<T>::callback &funk)$/;"	f	namespace:arg3::db
find_by	src/record.h	/^            std::vector<std::shared_ptr<T>> find_by(const std::string &name, const sql_value &value) const$/;"	f	class:arg3::db::record
find_by	src/record.h	/^            void find_by(const std::string &name, const sql_value &value, const callback &funk) const$/;"	f	class:arg3::db::record
find_by	src/record.h	/^        inline std::vector<std::shared_ptr<T>> find_by(const std::shared_ptr<schema> &schema, const std::string &name, const sql_value &value)$/;"	f	namespace:arg3::db
find_by	src/record.h	/^        inline void find_by(const std::shared_ptr<schema> &schema, const std::string &name, const sql_value &value,$/;"	f	namespace:arg3::db
find_by_id	src/record.h	/^            std::shared_ptr<T> find_by_id(const sql_value &value) const$/;"	f	class:arg3::db::record
find_in_container_traits	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  struct find_in_container_traits$/;"	s	namespace:snowhouse
find_in_container_traits	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  struct find_in_container_traits<std::map<KeyType, ValueType> >$/;"	s	namespace:snowhouse
find_in_container_traits	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  struct find_in_container_traits$/;"	s	namespace:snowhouse
find_in_container_traits	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^  struct find_in_container_traits<std::map<KeyType, ValueType> >$/;"	s	namespace:snowhouse
find_one	src/record.h	/^            std::shared_ptr<T> find_one(const std::string &name, const sql_value &value) const$/;"	f	class:arg3::db::record
find_one	src/record.h	/^            void find_one(const std::string &name, const sql_value &value, const callback &funk) const$/;"	f	class:arg3::db::record
find_one	src/record.h	/^        inline std::shared_ptr<T> find_one(const std::shared_ptr<schema> &schema)$/;"	f	namespace:arg3::db
find_one	src/record.h	/^        inline std::shared_ptr<T> find_one(const std::shared_ptr<schema> &schema, const std::string &name, const sql_value &value)$/;"	f	namespace:arg3::db
find_one	src/record.h	/^        inline void find_one(const std::shared_ptr<schema> &schema, const std::string &name, const sql_value &value,$/;"	f	namespace:arg3::db
find_one	src/record.h	/^        inline void find_one(const std::shared_ptr<schema> &schema, const typename record<T>::callback &funk)$/;"	f	namespace:arg3::db
finish	src/mysql/statement.cpp	/^            void statement::finish()$/;"	f	class:arg3::db::mysql::statement
finish	src/postgres/statement.cpp	/^            void statement::finish()$/;"	f	class:arg3::db::postgres::statement
finish	src/sqlite/statement.cpp	/^            void statement::finish()$/;"	f	class:arg3::db::sqlite::statement
finished	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  bool finished(int numargs, const char** args)$/;"	f	class:option::Parser::StoreOptionAction
finished	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  virtual bool finished(int numargs, const char** args)$/;"	f	struct:option::Parser::Action
finished	tests/vendor/bandit/bandit/external/optionparser.h	/^  bool finished(int numargs, const char** args)$/;"	f	class:option::Parser::StoreOptionAction
finished	tests/vendor/bandit/bandit/external/optionparser.h	/^  virtual bool finished(int numargs, const char** args)$/;"	f	struct:option::Parser::Action
first	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* first()$/;"	f	class:option::Option
first	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* first()$/;"	f	class:option::Option
flags_	src/modify_query.h	/^            int flags_;$/;"	m	class:arg3::db::modify_query
flip	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    void flip()$/;"	f	struct:fuzzbox::fuzzbox
flip	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    void flip()$/;"	f	struct:fuzzbox::fuzzbox
flush	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    void flush(IStringWriter& write)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
flush	tests/vendor/bandit/bandit/external/optionparser.h	/^    void flush(IStringWriter& write)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
for_each	src/resultset.cpp	/^        void resultset::for_each(const std::function<void(const row &row)> &funk) const$/;"	f	class:arg3::db::resultset
for_each	src/row.cpp	/^        void row::for_each(const std::function<void(const db::column &)> &funk) const$/;"	f	class:arg3::db::row
format	libs/variant/tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^    std::string format(const assertion_exception& err) const$/;"	f	struct:bandit::detail::default_failure_formatter
format	libs/variant/tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^    std::string format(const assertion_exception& err) const$/;"	f	struct:bandit::detail::visual_studio_failure_formatter
format	src/sql_value.cpp	/^        sql_time::formats sql_time::format() const$/;"	f	class:arg3::db::sql_time
format	tests/vendor/bandit/bandit/failure_formatters/default_failure_formatter.h	/^    std::string format(const assertion_exception& err) const$/;"	f	struct:bandit::detail::default_failure_formatter
format	tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^    std::string format(const assertion_exception& err) const$/;"	f	struct:bandit::detail::visual_studio_failure_formatter
format_	src/sql_value.h	/^            formats format_;$/;"	m	class:arg3::db::sql_time
formats	src/sql_value.h	/^            typedef enum { DATE, TIME, TIMESTAMP, DATETIME } formats;$/;"	t	class:arg3::db::sql_time	typeref:enum:arg3::db::sql_time::__anon7
formats_	src/postgres/binding.h	/^                int *formats_;$/;"	m	class:arg3::db::postgres::binding
formatter	libs/variant/tests/vendor/bandit/bandit/options.h	/^      formatters formatter() const$/;"	f	struct:bandit::detail::options
formatter	tests/vendor/bandit/bandit/options.h	/^      formatters formatter() const$/;"	f	struct:bandit::detail::options
formatters	libs/variant/tests/vendor/bandit/bandit/options.h	/^      } formatters;$/;"	t	struct:bandit::detail::options	typeref:enum:bandit::detail::options::__anon4
formatters	tests/vendor/bandit/bandit/options.h	/^      } formatters;$/;"	t	struct:bandit::detail::options	typeref:enum:bandit::detail::options::__anon11
free_	libs/variant/src/binary.h	/^        free_fn free_;$/;"	m	class:arg3::binary
free_fn	libs/variant/src/binary.h	/^        typedef void (*free_fn)(void *);$/;"	t	class:arg3::binary
friends	html/classarg3_1_1db_1_1column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql_1_1binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql_1_1stmt__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql_1_1stmt__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql__binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql__cached__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql__cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql__stmt__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1mysql__stmt__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres_1_1binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres__binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres__cached__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres__cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1postgres__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1select__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sql__time.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite3__cached__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite3__cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite3__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite3__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite3__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite_1_1cached__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite_1_1cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/classarg3_1_1db_1_1sqlite_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/html/classarg3_1_1db_1_1column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/html/classarg3_1_1db_1_1query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
friends	html/html/classarg3_1_1db_1_1select__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"><\/a>$/;"	a
from	src/delete_query.cpp	/^        delete_query &delete_query::from(const std::string &value)$/;"	f	class:arg3::db::delete_query
from	src/delete_query.cpp	/^        std::string delete_query::from() const$/;"	f	class:arg3::db::delete_query
from	src/select_query.cpp	/^        select_query &select_query::from(const string &value)$/;"	f	class:arg3::db::select_query
from	src/select_query.cpp	/^        string select_query::from() const$/;"	f	class:arg3::db::select_query
from_uri	src/sqldb.cpp	/^        shared_ptr<sqldb> sqldb::from_uri(const string &uristr)$/;"	f	class:arg3::db::sqldb
full_outer	src/join_clause.h	/^            typedef enum { none, natural, inner, left_outer, right_outer, full_outer, cross } type;$/;"	e	enum:arg3::db::join_clause::__anon6
func-members	html/alloc_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/base__record_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/exception_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/alloc_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/base__record_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/exception_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/join__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/log_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/schema_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/sql__value_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/sqldb_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/html/where__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/join__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/log_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/record_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/schema_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/sql__value_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/sqldb_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
func-members	html/where__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"><\/a>$/;"	a
fuzzbox	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    fuzzbox() : sound_(sounds::clean)$/;"	f	struct:fuzzbox::fuzzbox
fuzzbox	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  struct fuzzbox$/;"	s	namespace:fuzzbox	file:
fuzzbox	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^namespace fuzzbox {$/;"	n	file:
fuzzbox	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    fuzzbox() : sound_(sounds::clean)$/;"	f	struct:fuzzbox::fuzzbox
fuzzbox	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  struct fuzzbox$/;"	s	namespace:fuzzbox	file:
fuzzbox	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^namespace fuzzbox {$/;"	n	file:
fuzzbox_ptr	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  typedef std::unique_ptr<fuzzbox> fuzzbox_ptr;$/;"	t	namespace:fuzzbox	file:
fuzzbox_ptr	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  typedef std::unique_ptr<fuzzbox> fuzzbox_ptr;$/;"	t	namespace:fuzzbox	file:
fwrite	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    Function* fwrite;$/;"	m	struct:option::PrintUsageImplementation::StreamWriter
fwrite	tests/vendor/bandit/bandit/external/optionparser.h	/^    Function* fwrite;$/;"	m	struct:option::PrintUsageImplementation::StreamWriter
get	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="get">get<\/a><\/h3>$/;"	a
get	src/mysql/binding.cpp	/^            MYSQL_BIND *binding::get(size_t index) const$/;"	f	class:arg3::db::mysql::binding
get	src/record.h	/^            sql_value get(const std::string &name) const$/;"	f	class:arg3::db::record
get	src/schema_factory.cpp	/^        std::shared_ptr<schema> schema_factory::get(const string &tableName)$/;"	f	class:arg3::db::schema_factory
getNewHTTPObject	html/alloc_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/base_record_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/bindable_h/Classes/bindable/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/bindable_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/column_h/Classes/column/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/column_h/Classes/column_impl/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/column_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/exception_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/join_clause_h/Classes/join_clause/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/join_clause_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/log_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/modify_query_h/Classes/delete_query/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/modify_query_h/Classes/insert_query/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/modify_query_h/Classes/modify_query/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/modify_query_h/Classes/update_query/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/modify_query_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_binding_h/Classes/mysql_binding/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_binding_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_column_h/Classes/mysql_column/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_column_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_db_h/Classes/mysql_db/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_db_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_resultset_h/Classes/mysql_cached_resultset/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_resultset_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_row_h/Classes/mysql_cached_row/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_row_h/Classes/mysql_row/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_row_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_statement_h/Classes/mysql_statement/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/mysql_statement_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_binding_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_column_h/Classes/postgres_cached_column/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_column_h/Classes/postgres_column/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_column_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_db_h/Classes/postgres_db/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_db_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_resultset_h/Classes/postgres_cached_resultset/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_resultset_h/Classes/postgres_resultset/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_resultset_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_row_h/Classes/postgres_cached_row/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_row_h/Classes/postgres_row/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_row_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_statement_h/Classes/postgres_statement/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/postgres_statement_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/query_h/Classes/query/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/query_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/resultset_h/Classes/resultset/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/resultset_h/Classes/resultset_impl/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/resultset_h/Classes/resultset_iterator/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/resultset_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/row_h/Classes/row/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/row_h/Classes/row_impl/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/row_h/Classes/row_iterator/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/row_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/schema_factory_h/Classes/schema_factory/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/schema_factory_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/schema_h/Classes/schema/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/schema_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/Classes/select_query/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/select_query_h/Classes/arg3/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/select_query_h/Classes/select_query/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/select_query_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sql_value_h/Classes/sql_value/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sql_value_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqldb_h/Classes/arg3/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqldb_h/Classes/sqldb/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqldb_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_column_h/Classes/sqlite3_cached_column/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_column_h/Classes/sqlite3_column/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_column_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_db_h/Classes/sqlite3_db/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_db_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_resultset_h/Classes/sqlite3_cached_resultset/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_resultset_h/Classes/sqlite3_resultset/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_resultset_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_row_h/Classes/sqlite3_cached_row/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_row_h/Classes/sqlite3_row/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_row_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_statement_h/Classes/sqlite3_statement/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/sqlite3_statement_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/statement_h/Classes/statement/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/statement_h/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/where_clause_h/Classes/where_clause/index.html	/^function getNewHTTPObject()$/;"	f
getNewHTTPObject	html/where_clause_h/index.html	/^function getNewHTTPObject()$/;"	f
getXPos	html/html/search/search.js	/^function getXPos(item)$/;"	f
getXPos	html/search/search.js	/^function getXPos(item)$/;"	f
getYPos	html/html/search/search.js	/^function getYPos(item)$/;"	f
getYPos	html/search/search.js	/^function getYPos(item)$/;"	f
get_console_color	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^	  WORD get_console_color() const$/;"	f	struct:bandit::detail::colorizer
get_console_color	tests/vendor/bandit/bandit/reporters/colorizer.h	/^	  WORD get_console_color() const$/;"	f	struct:bandit::detail::colorizer
get_env_uri	tests/db.test.cpp	/^std::string get_env_uri(const char *name, const std::string &def)$/;"	f
get_first_user_row	tests/row.test.cpp	/^row get_first_user_row()$/;"	f
get_indexes	src/mysql/binding.cpp	/^            std::set<size_t> &binding::get_indexes(size_t index)$/;"	f	class:arg3::db::mysql::binding
get_message	libs/variant/tests/vendor/bandit/cmake/cotire/src/example.cpp	/^std::string get_message() {$/;"	f	namespace:example
get_message	tests/vendor/bandit/cmake/cotire/src/example.cpp	/^std::string get_message() {$/;"	f	namespace:example
get_postgres_column	tests/postgres_column.test.cpp	/^shared_ptr<postgres::column> get_postgres_column(const string &name)$/;"	f
get_postgres_resultset	tests/postgres_resultset.test.cpp	/^shared_ptr<postgres::resultset> get_postgres_resultset()$/;"	f
get_postgres_row	tests/postgres_row.test.cpp	/^shared_ptr<postgres::row> get_postgres_row(size_t index)$/;"	f
get_results	tests/select_query.test.cpp	/^resultset get_results()$/;"	f
get_results_column	tests/mysql_column.test.cpp	/^shared_ptr<column_impl> get_results_column(size_t index, size_t iterations)$/;"	f
get_results_row	tests/mysql_row.test.cpp	/^shared_ptr<row_impl> get_results_row(size_t index)$/;"	f
get_resultset	tests/mysql_resultset.test.cpp	/^shared_ptr<resultset_impl> get_resultset()$/;"	f
get_sqlite_column	tests/sqlite3_column.test.cpp	/^shared_ptr<T> get_sqlite_column(const string &name)$/;"	f
get_stmt_column	tests/mysql_column.test.cpp	/^shared_ptr<column_impl> get_stmt_column(size_t index, size_t iterations)$/;"	f
get_stmt_resultset	tests/mysql_resultset.test.cpp	/^shared_ptr<resultset_impl> get_stmt_resultset()$/;"	f
get_stmt_row	tests/mysql_row.test.cpp	/^shared_ptr<row_impl> get_stmt_row(size_t index)$/;"	f
get_user_column	tests/column.test.cpp	/^column get_user_column(const string &name)$/;"	f
go_bandit	libs/variant/tests/vendor/bandit/bandit/registration/registrar.h	/^#define go_bandit /;"	d
go_bandit	tests/vendor/bandit/bandit/registration/registrar.h	/^#define go_bandit /;"	d
green	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* green() const$/;"	f	struct:bandit::detail::colorizer
green	tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* green() const$/;"	f	struct:bandit::detail::colorizer
groupBy_	src/select_query.h	/^            std::string groupBy_;$/;"	m	class:arg3::db::select_query
group___function_AR	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/ARG3_DB_SQLDB_H_multideclaration_block\/operator_uri\/\/(parse,uri,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string)" name="group___function_AR" retarget="yes" href="sqldb_h\/Classes\/ARG3_DB_SQLDB_H_multideclaration_block\/index.html#\/\/apple_ref\/cpp\/instm\/ARG3_DB_SQLDB_H_multideclaration_block\/operator_uri\/\/(parse,uri,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string,std::string)">ARG3_DB_SQLDB_H_multideclaration_block::operator uri<\/a><br>$/;"	a
group___function_CO	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/column\/column\/\/(column%26%26)" name="group___function_CO" retarget="yes" href="column_h\/Classes\/column\/index.html#\/\/apple_ref\/cpp\/instm\/column\/column\/\/(column%26%26)">column::column<\/a><br>$/;"	a
group___function_C_	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/c\/func\/c_alloc_DONTLINK_2" name="group___function_C_" retarget="yes" href="alloc_h\/index.html#\/\/apple_ref\/c\/func\/c_alloc_DONTLINK_2">c_alloc<\/a><br>$/;"	a
group___function_DE	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/delete_query\/to_string\/std::string\/()" name="group___function_DE" retarget="yes" href="modify_query_h\/Classes\/delete_query\/index.html#\/\/apple_ref\/cpp\/instm\/delete_query\/to_string\/std::string\/()">delete_query::to_string<\/a><br>$/;"	a
group___function_FI	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/c\/func\/find_all" name="group___function_FI" retarget="yes" href="base_record_h\/index.html#\/\/apple_ref\/c\/func\/find_all">find_all<\/a><br>$/;"	a
group___function_IN	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/insert_query\/execute\/int\/()" name="group___function_IN" retarget="yes" href="modify_query_h\/Classes\/insert_query\/index.html#\/\/apple_ref\/cpp\/instm\/insert_query\/execute\/int\/()">insert_query::execute<\/a><br>$/;"	a
group___function_JO	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/join_clause\/empty\/bool\/()" name="group___function_JO" retarget="yes" href="join_clause_h\/Classes\/join_clause\/index.html#\/\/apple_ref\/cpp\/instm\/join_clause\/empty\/bool\/()">join_clause::empty<\/a><br>$/;"	a
group___function_MO	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/modify_query\/execute\/int\/()" name="group___function_MO" retarget="yes" href="modify_query_h\/Classes\/modify_query\/index.html#\/\/apple_ref\/cpp\/instm\/modify_query\/execute\/int\/()">modify_query::execute<\/a><br>$/;"	a
group___function_MY	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/mysql_binding\/bind\/mysql_binding%26\/(size_t,int)" name="group___function_MY" retarget="yes" href="mysql_binding_h\/Classes\/mysql_binding\/index.html#\/\/apple_ref\/cpp\/instm\/mysql_binding\/bind\/mysql_binding%26\/(size_t,int)">mysql_binding::bind<\/a><br>$/;"	a
group___function_OP	html/masterTOC.html	/^<td width="33%"><a logicalpath="\/\/apple_ref\/c\/func\/operator%3C%3C" name="group___function_OP" retarget="yes" href="join_clause_h\/index.html#\/\/apple_ref\/c\/func\/operator%3C%3C">operator <br><\/a><\/td>$/;"	a
group___function_QU	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/query\/assert_binding_index\/size_t\/(size_t)" name="group___function_QU" retarget="yes" href="query_h\/Classes\/query\/index.html#\/\/apple_ref\/cpp\/instm\/query\/assert_binding_index\/size_t\/(size_t)">query::assert_binding_index<\/a><br>$/;"	a
group___function_SE	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/select_query\/execute_scalar\/templateT\/()" name="group___function_SE" retarget="yes" href="select_query_h\/Classes\/ARG3_DB_SELECT_QUERY_H_multideclaration_block\/Classes\/select_query\/index.html#\/\/apple_ref\/cpp\/instm\/select_query\/execute_scalar\/templateT\/()">select_query::execute_scalar<\/a><br>$/;"	a
group___function_UP	html/masterTOC.html	/^<a logicalpath="\/\/apple_ref\/cpp\/instm\/update_query\/to_string\/std::string\/()" name="group___function_UP" retarget="yes" href="modify_query_h\/Classes\/update_query\/index.html#\/\/apple_ref\/cpp\/instm\/update_query\/to_string\/std::string\/()">update_query::to_string<\/a><br>$/;"	a
group___header_AL	html/masterTOC.html	/^<a name="group___header_AL" href="alloc_h\/index.html">alloc<\/a><br>$/;"	a
group___header_BA	html/masterTOC.html	/^<a name="group___header_BA" href="base_record_h\/index.html">base_record<\/a><br>$/;"	a
group___header_BI	html/masterTOC.html	/^<a name="group___header_BI" href="bindable_h\/index.html">bindable<\/a><br>$/;"	a
group___header_CO	html/masterTOC.html	/^<a name="group___header_CO" href="column_h\/index.html">column<\/a><br>$/;"	a
group___header_EX	html/masterTOC.html	/^<a name="group___header_EX" href="exception_h\/index.html">exception<\/a><br>$/;"	a
group___header_JO	html/masterTOC.html	/^<a name="group___header_JO" href="join_clause_h\/index.html">join_clause<\/a><br>$/;"	a
group___header_LO	html/masterTOC.html	/^<a name="group___header_LO" href="log_h\/index.html">log<\/a><br>$/;"	a
group___header_MO	html/masterTOC.html	/^<a name="group___header_MO" href="modify_query_h\/index.html">modify_query<\/a><br>$/;"	a
group___header_MY	html/masterTOC.html	/^<a name="group___header_MY" href="mysql_binding_h\/index.html">mysql_binding<\/a><br>$/;"	a
group___header_PO	html/masterTOC.html	/^<a name="group___header_PO" href="postgres_binding_h\/index.html">postgres_binding<\/a><br>$/;"	a
group___header_QU	html/masterTOC.html	/^<a name="group___header_QU" href="query_h\/index.html">query<\/a><br>$/;"	a
group___header_RE	html/masterTOC.html	/^<a name="group___header_RE" href="resultset_h\/index.html">resultset<\/a><br>$/;"	a
group___header_RO	html/masterTOC.html	/^<a name="group___header_RO" href="row_h\/index.html">row<\/a><br>$/;"	a
group___header_SC	html/masterTOC.html	/^<a name="group___header_SC" href="schema_h\/index.html">schema<\/a><br>$/;"	a
group___header_SE	html/masterTOC.html	/^<a name="group___header_SE" href="select_query_h\/index.html">select_query<\/a><br>$/;"	a
group___header_SQ	html/masterTOC.html	/^<a name="group___header_SQ" href="sqldb_h\/index.html">sqldb<\/a><br>$/;"	a
group___header_ST	html/masterTOC.html	/^<a name="group___header_ST" href="statement_h\/index.html">statement<\/a><br>$/;"	a
group___header_WH	html/masterTOC.html	/^<a name="group___header_WH" href="where_clause_h\/index.html">where_clause<\/a><br>$/;"	a
group_by	src/select_query.cpp	/^        select_query &select_query::group_by(const string &value)$/;"	f	class:arg3::db::select_query
group_by	src/select_query.cpp	/^        string select_query::group_by() const$/;"	f	class:arg3::db::select_query
guitar	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  struct guitar$/;"	s	namespace:fuzzbox	file:
guitar	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  struct guitar$/;"	s	namespace:fuzzbox	file:
guitar_ptr	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  typedef std::unique_ptr<guitar> guitar_ptr;$/;"	t	namespace:fuzzbox	file:
guitar_ptr	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  typedef std::unique_ptr<guitar> guitar_ptr;$/;"	t	namespace:fuzzbox	file:
hard_skip	libs/variant/tests/vendor/bandit/bandit/context.h	/^        bool hard_skip() $/;"	f	class:bandit::detail::bandit_context
hard_skip	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    bool hard_skip() $/;"	f	struct:bandit::fakes::fake_context
hard_skip	tests/vendor/bandit/bandit/context.h	/^        bool hard_skip() $/;"	f	class:bandit::detail::bandit_context
hard_skip	tests/vendor/bandit/specs/fakes/fake_context.h	/^    bool hard_skip() $/;"	f	struct:bandit::fakes::fake_context
hard_skip_	libs/variant/tests/vendor/bandit/bandit/context.h	/^        bool hard_skip_;$/;"	m	class:bandit::detail::bandit_context
hard_skip_	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    bool hard_skip_;$/;"	m	struct:bandit::fakes::fake_context
hard_skip_	tests/vendor/bandit/bandit/context.h	/^        bool hard_skip_;$/;"	m	class:bandit::detail::bandit_context
hard_skip_	tests/vendor/bandit/specs/fakes/fake_context.h	/^    bool hard_skip_;$/;"	m	struct:bandit::fakes::fake_context
has	src/record.h	/^            bool has(const std::string &name) const$/;"	f	class:arg3::db::record
has_context_with_hard_skip	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool has_context_with_hard_skip(const contextstack_t& contexts) const$/;"	f	struct:bandit::detail::bandit_run_policy
has_context_with_hard_skip	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool has_context_with_hard_skip(const contextstack_t& contexts) const$/;"	f	struct:bandit::detail::bandit_run_policy
has_encountered_failure	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^    virtual bool has_encountered_failure() const$/;"	f	struct:bandit::detail::run_policy
has_only_pattern	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool has_only_pattern() const$/;"	f	struct:bandit::detail::bandit_run_policy
has_only_pattern	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool has_only_pattern() const$/;"	f	struct:bandit::detail::bandit_run_policy
has_skip_pattern	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool has_skip_pattern() const$/;"	f	struct:bandit::detail::bandit_run_policy
has_skip_pattern	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool has_skip_pattern() const$/;"	f	struct:bandit::detail::bandit_run_policy
hashcode	libs/variant/tests/variant.test.cpp	/^    long hashcode() const$/;"	f	class:complex_val
hashcode	src/sql_value.cpp	/^        long sql_time::hashcode() const$/;"	f	class:arg3::db::sql_time
head	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int head; \/\/!< @brief index for next write$/;"	m	class:option::PrintUsageImplementation::LineWrapper
head	tests/vendor/bandit/bandit/external/optionparser.h	/^    int head; \/\/!< @brief index for next write$/;"	m	class:option::PrintUsageImplementation::LineWrapper
help	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* help;$/;"	m	struct:option::Descriptor
help	libs/variant/tests/vendor/bandit/bandit/options.h	/^      bool help() const$/;"	f	struct:bandit::detail::options
help	tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* help;$/;"	m	struct:option::Descriptor
help	tests/vendor/bandit/bandit/options.h	/^      bool help() const$/;"	f	struct:bandit::detail::options
helper	src/mysql/binding.cpp	/^            namespace helper$/;"	n	namespace:arg3::db::mysql	file:
helper	src/mysql/db.cpp	/^            namespace helper$/;"	n	namespace:arg3::db::mysql	file:
helper	src/mysql/resultset.cpp	/^            namespace helper$/;"	n	namespace:arg3::db::mysql	file:
helper	src/mysql/resultset.h	/^            namespace helper$/;"	n	namespace:arg3::db::mysql
helper	src/mysql/statement.cpp	/^            namespace helper$/;"	n	namespace:arg3::db::mysql	file:
helper	src/postgres/db.cpp	/^            namespace helper$/;"	n	namespace:arg3::db::postgres	file:
helper	src/postgres/statement.cpp	/^            namespace helper$/;"	n	namespace:arg3::db::postgres	file:
helper	src/postgres/statement.h	/^            namespace helper$/;"	n	namespace:arg3::db::postgres
helper	src/sqlite/db.cpp	/^            namespace helper$/;"	n	namespace:arg3::db::sqlite	file:
helper	src/sqlite/statement.cpp	/^            namespace helper$/;"	n	namespace:arg3::db::sqlite	file:
helper	src/sqlite/statement.h	/^            namespace helper$/;"	n	namespace:arg3::db::sqlite
hidetoc	html/alloc_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/base_record_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/bindable_h/Classes/bindable/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/bindable_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/column_h/Classes/column/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/column_h/Classes/column_impl/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/column_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/exception_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/join_clause_h/Classes/join_clause/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/join_clause_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/log_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/modify_query_h/Classes/delete_query/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/modify_query_h/Classes/insert_query/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/modify_query_h/Classes/modify_query/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/modify_query_h/Classes/update_query/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/modify_query_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_binding_h/Classes/mysql_binding/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_binding_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_column_h/Classes/mysql_column/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_column_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_db_h/Classes/mysql_db/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_db_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_resultset_h/Classes/mysql_cached_resultset/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_resultset_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_row_h/Classes/mysql_cached_row/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_row_h/Classes/mysql_row/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_row_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_statement_h/Classes/mysql_statement/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/mysql_statement_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_binding_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_column_h/Classes/postgres_cached_column/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_column_h/Classes/postgres_column/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_column_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_db_h/Classes/postgres_db/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_db_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_resultset_h/Classes/postgres_cached_resultset/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_resultset_h/Classes/postgres_resultset/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_resultset_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_row_h/Classes/postgres_cached_row/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_row_h/Classes/postgres_row/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_row_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_statement_h/Classes/postgres_statement/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/postgres_statement_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/query_h/Classes/query/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/query_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/resultset_h/Classes/resultset/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/resultset_h/Classes/resultset_impl/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/resultset_h/Classes/resultset_iterator/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/resultset_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/row_h/Classes/row/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/row_h/Classes/row_impl/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/row_h/Classes/row_iterator/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/row_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/schema_factory_h/Classes/schema_factory/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/schema_factory_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/schema_h/Classes/schema/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/schema_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/Classes/select_query/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/select_query_h/Classes/arg3/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/select_query_h/Classes/select_query/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/select_query_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sql_value_h/Classes/sql_value/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sql_value_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqldb_h/Classes/arg3/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqldb_h/Classes/sqldb/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqldb_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_column_h/Classes/sqlite3_cached_column/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_column_h/Classes/sqlite3_column/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_column_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_db_h/Classes/sqlite3_db/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_db_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_resultset_h/Classes/sqlite3_cached_resultset/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_resultset_h/Classes/sqlite3_resultset/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_resultset_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_row_h/Classes/sqlite3_cached_row/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_row_h/Classes/sqlite3_row/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_row_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_statement_h/Classes/sqlite3_statement/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/sqlite3_statement_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/statement_h/Classes/statement/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/statement_h/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/where_clause_h/Classes/where_clause/index.html	/^function hidetoc() {$/;"	f
hidetoc	html/where_clause_h/index.html	/^function hidetoc() {$/;"	f
hit_target_line	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    bool hit_target_line; \/\/!< Flag whether we encountered a part with line index target_line_in_block in the current cell.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
hit_target_line	tests/vendor/bandit/bandit/external/optionparser.h	/^    bool hit_target_line; \/\/!< Flag whether we encountered a part with line index target_line_in_block in the current cell.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
host	src/sqldb.h	/^            std::string protocol, user, password, host, port, path, query, value;$/;"	m	struct:arg3::db::uri_type
id	src/record.h	/^            sql_value id() const$/;"	f	class:arg3::db::record
idColumnName_	src/record.h	/^            std::string idColumnName_;$/;"	m	class:arg3::db::record
id_column_name	src/record.h	/^            std::string id_column_name() const$/;"	f	class:arg3::db::record
illegal_conversion	libs/variant/src/variant.h	/^        explicit illegal_conversion() : std::runtime_error("no conversion available")$/;"	f	class:arg3::illegal_conversion
illegal_conversion	libs/variant/src/variant.h	/^        explicit illegal_conversion(const std::string &what_arg) : std::runtime_error(what_arg)$/;"	f	class:arg3::illegal_conversion
illegal_conversion	libs/variant/src/variant.h	/^    class illegal_conversion : std::runtime_error$/;"	c	namespace:arg3
impl	html/column_h/Classes/column/index.html	/^<h3><a name="impl">impl<\/a><\/h3>$/;"	a
impl	src/column.cpp	/^        std::shared_ptr<column_impl> column::impl() const$/;"	f	class:arg3::db::column
impl	src/resultset.cpp	/^        shared_ptr<resultset_impl> resultset::impl() const$/;"	f	class:arg3::db::resultset
impl	src/row.cpp	/^        shared_ptr<row_impl> row::impl() const$/;"	f	class:arg3::db::row
impl_	src/column.h	/^            std::shared_ptr<column_impl> impl_;$/;"	m	class:arg3::db::column
impl_	src/resultset.h	/^            std::shared_ptr<resultset_impl> impl_;$/;"	m	class:arg3::db::resultset
impl_	src/row.h	/^            std::shared_ptr<row_impl> impl_;$/;"	m	class:arg3::db::row
increase_indent	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    void increase_indent()$/;"	f	struct:bandit::detail::spec_reporter
increase_indent	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    void increase_indent()$/;"	f	struct:bandit::detail::spec_reporter
indent	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static void indent(IStringWriter& write, int& x, int want_x)$/;"	f	struct:option::PrintUsageImplementation
indent	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	std::string indent()$/;"	f	struct:bandit::detail::info_reporter
indent	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    std::string indent()$/;"	f	struct:bandit::detail::spec_reporter
indent	tests/vendor/bandit/bandit/external/optionparser.h	/^  static void indent(IStringWriter& write, int& x, int want_x)$/;"	f	struct:option::PrintUsageImplementation
indent	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	std::string indent()$/;"	f	struct:bandit::detail::info_reporter
indent	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    std::string indent()$/;"	f	struct:bandit::detail::spec_reporter
indentation_	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	int indentation_;$/;"	m	struct:bandit::detail::info_reporter
indentation_	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    int indentation_;$/;"	m	struct:bandit::detail::spec_reporter
indentation_	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	int indentation_;$/;"	m	struct:bandit::detail::info_reporter
indentation_	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    int indentation_;$/;"	m	struct:bandit::detail::spec_reporter
index	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const unsigned index;$/;"	m	struct:option::Descriptor
index	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  int index() const$/;"	f	class:option::Option
index	tests/vendor/bandit/bandit/external/optionparser.h	/^  const unsigned index;$/;"	m	struct:option::Descriptor
index	tests/vendor/bandit/bandit/external/optionparser.h	/^  int index() const$/;"	f	class:option::Option
indexSectionLabels.0	html/html/search/searchdata.js	/^  0: "All",$/;"	p
indexSectionLabels.0	html/search/searchdata.js	/^  0: "All",$/;"	p
indexSectionLabels.1	html/html/search/searchdata.js	/^  1: "Classes",$/;"	p
indexSectionLabels.1	html/search/searchdata.js	/^  1: "Classes",$/;"	p
indexSectionLabels.2	html/html/search/searchdata.js	/^  2: "Files",$/;"	p
indexSectionLabels.2	html/search/searchdata.js	/^  2: "Namespaces",$/;"	p
indexSectionLabels.3	html/html/search/searchdata.js	/^  3: "Functions",$/;"	p
indexSectionLabels.3	html/search/searchdata.js	/^  3: "Files",$/;"	p
indexSectionLabels.4	html/html/search/searchdata.js	/^  4: "Variables",$/;"	p
indexSectionLabels.4	html/search/searchdata.js	/^  4: "Functions",$/;"	p
indexSectionLabels.5	html/html/search/searchdata.js	/^  5: "Typedefs",$/;"	p
indexSectionLabels.5	html/search/searchdata.js	/^  5: "Variables",$/;"	p
indexSectionLabels.6	html/html/search/searchdata.js	/^  6: "Enumerations",$/;"	p
indexSectionLabels.6	html/search/searchdata.js	/^  6: "Typedefs",$/;"	p
indexSectionLabels.7	html/html/search/searchdata.js	/^  7: "Enumerator"$/;"	p
indexSectionLabels.7	html/search/searchdata.js	/^  7: "Enumerations",$/;"	p
indexSectionLabels.8	html/search/searchdata.js	/^  8: "Enumerator"$/;"	p
indexSectionNames.0	html/html/search/searchdata.js	/^  0: "all",$/;"	p
indexSectionNames.0	html/search/searchdata.js	/^  0: "all",$/;"	p
indexSectionNames.1	html/html/search/searchdata.js	/^  1: "classes",$/;"	p
indexSectionNames.1	html/search/searchdata.js	/^  1: "classes",$/;"	p
indexSectionNames.2	html/html/search/searchdata.js	/^  2: "files",$/;"	p
indexSectionNames.2	html/search/searchdata.js	/^  2: "namespaces",$/;"	p
indexSectionNames.3	html/html/search/searchdata.js	/^  3: "functions",$/;"	p
indexSectionNames.3	html/search/searchdata.js	/^  3: "files",$/;"	p
indexSectionNames.4	html/html/search/searchdata.js	/^  4: "variables",$/;"	p
indexSectionNames.4	html/search/searchdata.js	/^  4: "functions",$/;"	p
indexSectionNames.5	html/html/search/searchdata.js	/^  5: "typedefs",$/;"	p
indexSectionNames.5	html/search/searchdata.js	/^  5: "variables",$/;"	p
indexSectionNames.6	html/html/search/searchdata.js	/^  6: "enums",$/;"	p
indexSectionNames.6	html/search/searchdata.js	/^  6: "typedefs",$/;"	p
indexSectionNames.7	html/html/search/searchdata.js	/^  7: "enumvalues"$/;"	p
indexSectionNames.7	html/search/searchdata.js	/^  7: "enums",$/;"	p
indexSectionNames.8	html/search/searchdata.js	/^  8: "enumvalues"$/;"	p
indexSectionsWithContent.0	html/html/search/searchdata.js	/^  0: "abcdefghijlmnopqrstuw",$/;"	p
indexSectionsWithContent.0	html/search/searchdata.js	/^  0: "abcdefghijlmnopqrstuw~",$/;"	p
indexSectionsWithContent.1	html/html/search/searchdata.js	/^  1: "bcdijmqrsuw",$/;"	p
indexSectionsWithContent.1	html/search/searchdata.js	/^  1: "bcdijmqrsuw",$/;"	p
indexSectionsWithContent.2	html/html/search/searchdata.js	/^  2: "abcejlmpqrsw",$/;"	p
indexSectionsWithContent.2	html/search/searchdata.js	/^  2: "a",$/;"	p
indexSectionsWithContent.3	html/html/search/searchdata.js	/^  3: "bcdefghijlmnopqrstuw",$/;"	p
indexSectionsWithContent.3	html/search/searchdata.js	/^  3: "abejlmqrsw",$/;"	p
indexSectionsWithContent.4	html/html/search/searchdata.js	/^  4: "bs",$/;"	p
indexSectionsWithContent.4	html/search/searchdata.js	/^  4: "bcdefghijlmnopqrstuw~",$/;"	p
indexSectionsWithContent.5	html/html/search/searchdata.js	/^  5: "w",$/;"	p
indexSectionsWithContent.5	html/search/searchdata.js	/^  5: "bs",$/;"	p
indexSectionsWithContent.6	html/html/search/searchdata.js	/^  6: "clt",$/;"	p
indexSectionsWithContent.6	html/search/searchdata.js	/^  6: "sw",$/;"	p
indexSectionsWithContent.7	html/html/search/searchdata.js	/^  7: "deintw"$/;"	p
indexSectionsWithContent.7	html/search/searchdata.js	/^  7: "flt",$/;"	p
indexSectionsWithContent.8	html/search/searchdata.js	/^  8: "deintw"$/;"	p
index_	src/mysql/column.h	/^                size_t index_;$/;"	m	class:arg3::db::mysql::column
indexes_	src/mysql/binding.h	/^                std::unordered_map<size_t, std::set<size_t>> indexes_;$/;"	m	class:arg3::db::mysql::binding
info	libs/variant/tests/vendor/bandit/cmake/cotire/src/log.cpp	/^void info(const std::string& msg) {$/;"	f	namespace:logging
info	src/log.cpp	/^            void info(const char *const format, ...)$/;"	f	namespace:arg3::db::log
info	tests/vendor/bandit/cmake/cotire/src/log.cpp	/^void info(const std::string& msg) {$/;"	f	namespace:logging
info_arch	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_language_dialect_default	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	info_reporter(const failure_formatter &failure_formatter, const detail::colorizer &colorizer)$/;"	f	struct:bandit::detail::info_reporter
info_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	info_reporter(std::ostream &stm, const failure_formatter &failure_formatter,$/;"	f	struct:bandit::detail::info_reporter
info_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^struct info_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
info_reporter	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	info_reporter(const failure_formatter &failure_formatter, const detail::colorizer &colorizer)$/;"	f	struct:bandit::detail::info_reporter
info_reporter	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	info_reporter(std::ostream &stm, const failure_formatter &failure_formatter,$/;"	f	struct:bandit::detail::info_reporter
info_reporter	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^struct info_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
info_simulate	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
inherited	html/classarg3_1_1db_1_1delete__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1insert__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1modify__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql_1_1binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql_1_1stmt__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql_1_1stmt__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql__cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1mysql__stmt__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1postgres_1_1binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1postgres_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1postgres_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1postgres_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1postgres_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1postgres__cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1postgres__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1postgres__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1select__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1sqlite3__cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1sqlite3__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1sqlite3__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1sqlite_1_1cached__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1sqlite_1_1cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1sqlite_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1sqlite_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1sqlite_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1sqlite_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/classarg3_1_1db_1_1update__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/html/classarg3_1_1db_1_1delete__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/html/classarg3_1_1db_1_1insert__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/html/classarg3_1_1db_1_1modify__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/html/classarg3_1_1db_1_1select__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
inherited	html/html/classarg3_1_1db_1_1update__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"><\/a>$/;"	a
init	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  void init(const Descriptor* desc_, const char* name_, const char* arg_)$/;"	f	class:option::Option
init	src/record.h	/^            void init(const row &values)$/;"	f	class:arg3::db::record
init	src/schema.cpp	/^        void schema::init()$/;"	f	class:arg3::db::schema
init	tests/vendor/bandit/bandit/external/optionparser.h	/^  void init(const Descriptor* desc_, const char* name_, const char* arg_)$/;"	f	class:option::Option
init_search	html/html/search/search.js	/^function init_search()$/;"	f
init_search	html/search/search.js	/^function init_search()$/;"	f
inner	src/join_clause.h	/^            typedef enum { none, natural, inner, left_outer, right_outer, full_outer, cross } type;$/;"	e	enum:arg3::db::join_clause::__anon6
insert_query	html/modify_query_h/Classes/insert_query/index.html	/^<h1><a name="insert_query">insert_query<\/a><\/h1>$/;"	a
insert_query	src/insert_query.cpp	/^        insert_query::insert_query(const insert_query &other)$/;"	f	class:arg3::db::insert_query
insert_query	src/insert_query.cpp	/^        insert_query::insert_query(const std::shared_ptr<schema> &schema, const std::vector<std::string> &columns) : modify_query(schema->db())$/;"	f	class:arg3::db::insert_query
insert_query	src/insert_query.cpp	/^        insert_query::insert_query(insert_query &&other)$/;"	f	class:arg3::db::insert_query
insert_query	src/insert_query.cpp	/^        insert_query::insert_query(sqldb *db, const std::string &tableName) : modify_query(db)$/;"	f	class:arg3::db::insert_query
insert_query	src/insert_query.cpp	/^        insert_query::insert_query(sqldb *db, const std::string &tableName, const std::vector<std::string> &columns) : modify_query(db)$/;"	f	class:arg3::db::insert_query
insert_query	src/insert_query.h	/^        class insert_query : public modify_query$/;"	c	namespace:arg3::db
insert_sql	src/postgres/db.cpp	/^            string db::insert_sql(const std::shared_ptr<schema> &schema, const vector<string> &columns) const$/;"	f	class:arg3::db::postgres::db
insert_sql	src/sqldb.cpp	/^        string sqldb::insert_sql(const std::shared_ptr<schema> &schema, const vector<string> &columns) const$/;"	f	class:arg3::db::sqldb
instr	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool instr(char ch, const char* st)$/;"	f	class:option::Parser
instr	tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool instr(char ch, const char* st)$/;"	f	class:option::Parser
into	src/insert_query.cpp	/^        insert_query &insert_query::into(const std::string &value)$/;"	f	class:arg3::db::insert_query
into	src/insert_query.cpp	/^        std::string insert_query::into() const$/;"	f	class:arg3::db::insert_query
isFirst	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  bool isFirst() const$/;"	f	class:option::Option
isFirst	tests/vendor/bandit/bandit/external/optionparser.h	/^  bool isFirst() const$/;"	f	class:option::Option
isLast	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  bool isLast() const$/;"	f	class:option::Option
isLast	tests/vendor/bandit/bandit/external/optionparser.h	/^  bool isLast() const$/;"	f	class:option::Option
isTagged	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool isTagged(Option* ptr)$/;"	f	class:option::Option
isTagged	tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool isTagged(Option* ptr)$/;"	f	class:option::Option
isWideChar	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool isWideChar(unsigned ch)$/;"	f	struct:option::PrintUsageImplementation
isWideChar	tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool isWideChar(unsigned ch)$/;"	f	struct:option::PrintUsageImplementation
is_binary	libs/variant/src/variant.cpp	/^    bool variant::is_binary() const$/;"	f	class:arg3::variant
is_complex	libs/variant/src/variant.cpp	/^    bool variant::is_complex() const$/;"	f	class:arg3::variant
is_executing_	libs/variant/tests/vendor/bandit/bandit/context.h	/^        bool is_executing_;$/;"	m	class:bandit::detail::bandit_context
is_executing_	tests/vendor/bandit/bandit/context.h	/^        bool is_executing_;$/;"	m	class:bandit::detail::bandit_context
is_named	src/bindable.cpp	/^        bool bind_mapping::is_named() const$/;"	f	class:arg3::db::bind_mapping
is_null	libs/variant/src/binary.cpp	/^    bool binary::is_null() const$/;"	f	class:arg3::binary
is_null	libs/variant/src/variant.cpp	/^    bool variant::is_null() const$/;"	f	class:arg3::variant
is_numeric	libs/variant/src/variant.cpp	/^    bool variant::is_numeric() const$/;"	f	class:arg3::variant
is_open	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="is_open">is_open<\/a><\/h3>$/;"	a
is_open	src/mysql/db.cpp	/^            bool db::is_open() const$/;"	f	class:arg3::db::mysql::db
is_open	src/postgres/db.cpp	/^            bool db::is_open() const$/;"	f	class:arg3::db::postgres::db
is_open	src/sqlite/db.cpp	/^            bool db::is_open() const$/;"	f	class:arg3::db::sqlite::db
is_output_streamable	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct is_output_streamable$/;"	s	namespace:snowhouse::detail
is_output_streamable	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct is_output_streamable$/;"	s	namespace:snowhouse::detail
is_real	libs/variant/src/variant.cpp	/^    bool variant::is_real() const$/;"	f	class:arg3::variant
is_string	libs/variant/src/variant.cpp	/^    bool variant::is_string() const$/;"	f	class:arg3::variant
is_time	src/sql_value.cpp	/^        bool sql_value::is_time() const$/;"	f	class:arg3::db::sql_value
is_transient	libs/variant/src/binary.cpp	/^    bool binary::is_transient() const$/;"	f	class:arg3::binary
is_valid	html/column_h/Classes/column/index.html	/^<h3><a name="is_valid">is_valid<\/a><\/h3>$/;"	a
is_valid	html/column_h/Classes/column_impl/index.html	/^<h3><a name="is_valid">is_valid<\/a><\/h3>$/;"	a
is_valid	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<h3><a name="is_valid">is_valid<\/a><\/h3>$/;"	a
is_valid	html/mysql_column_h/Classes/mysql_column/index.html	/^<h3><a name="is_valid">is_valid<\/a><\/h3>$/;"	a
is_valid	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<h3><a name="is_valid">is_valid<\/a><\/h3>$/;"	a
is_valid	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<h3><a name="is_valid">is_valid<\/a><\/h3>$/;"	a
is_valid	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<h3><a name="is_valid">is_valid<\/a><\/h3>$/;"	a
is_valid	html/mysql_row_h/Classes/mysql_row/index.html	/^<h3><a name="is_valid">is_valid<\/a><\/h3>$/;"	a
is_valid	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<h3><a name="is_valid">is_valid<\/a><\/h3>$/;"	a
is_valid	src/column.cpp	/^        bool column::is_valid() const$/;"	f	class:arg3::db::column
is_valid	src/delete_query.cpp	/^        bool delete_query::is_valid() const$/;"	f	class:arg3::db::delete_query
is_valid	src/insert_query.cpp	/^        bool insert_query::is_valid() const$/;"	f	class:arg3::db::insert_query
is_valid	src/mysql/column.cpp	/^            bool column::is_valid() const$/;"	f	class:arg3::db::mysql::column
is_valid	src/mysql/column.cpp	/^            bool stmt_column::is_valid() const$/;"	f	class:arg3::db::mysql::stmt_column
is_valid	src/mysql/resultset.cpp	/^            bool resultset::is_valid() const$/;"	f	class:arg3::db::mysql::resultset
is_valid	src/mysql/resultset.cpp	/^            bool stmt_resultset::is_valid() const$/;"	f	class:arg3::db::mysql::stmt_resultset
is_valid	src/mysql/row.cpp	/^            bool row::is_valid() const$/;"	f	class:arg3::db::mysql::row
is_valid	src/mysql/row.cpp	/^            bool stmt_row::is_valid() const$/;"	f	class:arg3::db::mysql::stmt_row
is_valid	src/mysql/statement.cpp	/^            bool statement::is_valid() const$/;"	f	class:arg3::db::mysql::statement
is_valid	src/postgres/column.cpp	/^            bool column::is_valid() const$/;"	f	class:arg3::db::postgres::column
is_valid	src/postgres/resultset.cpp	/^            bool resultset::is_valid() const$/;"	f	class:arg3::db::postgres::resultset
is_valid	src/postgres/row.cpp	/^            bool row::is_valid() const$/;"	f	class:arg3::db::postgres::row
is_valid	src/postgres/statement.cpp	/^            bool statement::is_valid() const$/;"	f	class:arg3::db::postgres::statement
is_valid	src/query.cpp	/^        bool query::is_valid() const$/;"	f	class:arg3::db::query
is_valid	src/record.h	/^            bool is_valid() const$/;"	f	class:arg3::db::record
is_valid	src/resultset.cpp	/^        bool resultset::is_valid() const$/;"	f	class:arg3::db::resultset
is_valid	src/row.cpp	/^        bool row::is_valid() const$/;"	f	class:arg3::db::row
is_valid	src/schema.cpp	/^        bool schema::is_valid() const$/;"	f	class:arg3::db::schema
is_valid	src/sqlite/column.cpp	/^            bool cached_column::is_valid() const$/;"	f	class:arg3::db::sqlite::cached_column
is_valid	src/sqlite/column.cpp	/^            bool column::is_valid() const$/;"	f	class:arg3::db::sqlite::column
is_valid	src/sqlite/resultset.cpp	/^            bool cached_resultset::is_valid() const$/;"	f	class:arg3::db::sqlite::cached_resultset
is_valid	src/sqlite/resultset.cpp	/^            bool resultset::is_valid() const$/;"	f	class:arg3::db::sqlite::resultset
is_valid	src/sqlite/row.cpp	/^            bool cached_row::is_valid() const$/;"	f	class:arg3::db::sqlite::cached_row
is_valid	src/sqlite/row.cpp	/^            bool row::is_valid() const$/;"	f	class:arg3::db::sqlite::row
is_valid	src/sqlite/statement.cpp	/^            bool statement::is_valid() const$/;"	f	class:arg3::db::sqlite::statement
is_valid	src/update_query.cpp	/^        bool update_query::is_valid() const$/;"	f	class:arg3::db::update_query
is_wstring	libs/variant/src/variant.cpp	/^    bool variant::is_wstring() const$/;"	f	class:arg3::variant
it	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void it(const char* desc, detail::voidfunc_t func)$/;"	f	namespace:bandit
it	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void it(const char* desc, detail::voidfunc_t func, detail::listener& listener,$/;"	f	namespace:bandit
it	tests/vendor/bandit/bandit/grammar.h	/^  inline void it(const char* desc, detail::voidfunc_t func)$/;"	f	namespace:bandit
it	tests/vendor/bandit/bandit/grammar.h	/^  inline void it(const char* desc, detail::voidfunc_t func, detail::listener& listener,$/;"	f	namespace:bandit
it_failed	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::dots_reporter
it_failed	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void it_failed(const char *desc, const assertion_exception &ex)$/;"	f	struct:bandit::detail::info_reporter
it_failed	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::progress_reporter
it_failed	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::single_line_reporter
it_failed	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::spec_reporter
it_failed	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::xunit_reporter
it_failed	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_failed(const char* desc, const bandit::detail::assertion_exception& ex)$/;"	f	struct:bandit::fakes::fake_reporter
it_failed	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::dots_reporter
it_failed	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void it_failed(const char *desc, const assertion_exception &ex)$/;"	f	struct:bandit::detail::info_reporter
it_failed	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::progress_reporter
it_failed	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::single_line_reporter
it_failed	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::spec_reporter
it_failed	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_failed(const char* desc, const assertion_exception& ex)$/;"	f	struct:bandit::detail::xunit_reporter
it_failed	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_failed(const char* desc, const bandit::detail::assertion_exception& ex)$/;"	f	struct:bandit::fakes::fake_reporter
it_skip	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void it_skip(const char* desc, detail::voidfunc_t func)$/;"	f	namespace:bandit
it_skip	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void it_skip(const char* desc, detail::voidfunc_t, detail::listener& listener)$/;"	f	namespace:bandit
it_skip	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_skip(const char* \/* desc *\/)$/;"	f	struct:bandit::detail::progress_reporter
it_skip	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_skip(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
it_skip	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_skip(const char* desc)$/;"	f	struct:bandit::detail::xunit_reporter
it_skip	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_skip(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
it_skip	tests/vendor/bandit/bandit/grammar.h	/^  inline void it_skip(const char* desc, detail::voidfunc_t func)$/;"	f	namespace:bandit
it_skip	tests/vendor/bandit/bandit/grammar.h	/^  inline void it_skip(const char* desc, detail::voidfunc_t, detail::listener& listener)$/;"	f	namespace:bandit
it_skip	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_skip(const char* \/* desc *\/)$/;"	f	struct:bandit::detail::progress_reporter
it_skip	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_skip(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
it_skip	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_skip(const char* desc)$/;"	f	struct:bandit::detail::xunit_reporter
it_skip	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_skip(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
it_starting	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void it_starting(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
it_starting	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_starting(const char*) $/;"	f	struct:bandit::detail::progress_reporter
it_starting	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void it_starting(const char* desc) $/;"	f	struct:bandit::detail::single_line_reporter
it_starting	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_starting(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
it_starting	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_starting(const char* desc)$/;"	f	struct:bandit::detail::xunit_reporter
it_starting	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_starting(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
it_starting	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void it_starting(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
it_starting	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_starting(const char*) $/;"	f	struct:bandit::detail::progress_reporter
it_starting	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void it_starting(const char* desc) $/;"	f	struct:bandit::detail::single_line_reporter
it_starting	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_starting(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
it_starting	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_starting(const char* desc)$/;"	f	struct:bandit::detail::xunit_reporter
it_starting	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_starting(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
it_succeeded	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void it_succeeded(const char* desc) $/;"	f	struct:bandit::detail::dots_reporter
it_succeeded	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void it_succeeded(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
it_succeeded	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_succeeded(const char*) $/;"	f	struct:bandit::detail::progress_reporter
it_succeeded	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void it_succeeded(const char* desc) $/;"	f	struct:bandit::detail::single_line_reporter
it_succeeded	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_succeeded(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
it_succeeded	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_succeeded(const char* desc)$/;"	f	struct:bandit::detail::xunit_reporter
it_succeeded	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_succeeded(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
it_succeeded	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void it_succeeded(const char* desc) $/;"	f	struct:bandit::detail::dots_reporter
it_succeeded	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void it_succeeded(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
it_succeeded	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_succeeded(const char*) $/;"	f	struct:bandit::detail::progress_reporter
it_succeeded	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void it_succeeded(const char* desc) $/;"	f	struct:bandit::detail::single_line_reporter
it_succeeded	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_succeeded(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
it_succeeded	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_succeeded(const char* desc)$/;"	f	struct:bandit::detail::xunit_reporter
it_succeeded	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_succeeded(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
it_unknown_error	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::dots_reporter
it_unknown_error	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void it_unknown_error(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
it_unknown_error	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::progress_reporter
it_unknown_error	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::single_line_reporter
it_unknown_error	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
it_unknown_error	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::xunit_reporter
it_unknown_error	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
it_unknown_error	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::dots_reporter
it_unknown_error	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	virtual void it_unknown_error(const char *desc)$/;"	f	struct:bandit::detail::info_reporter
it_unknown_error	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::progress_reporter
it_unknown_error	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::single_line_reporter
it_unknown_error	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    virtual void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::spec_reporter
it_unknown_error	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::detail::xunit_reporter
it_unknown_error	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void it_unknown_error(const char* desc)$/;"	f	struct:bandit::fakes::fake_reporter
iterator	src/resultset.h	/^            typedef resultset_iterator<row_type, row_type> iterator;$/;"	t	class:arg3::db::resultset
iterator	src/row.h	/^            typedef row_iterator<column_type, column_type, row_impl> iterator;$/;"	t	class:arg3::db::row
join	src/join_clause.h	/^        typedef join_clause join;$/;"	t	namespace:arg3::db
join	src/select_query.cpp	/^        join_clause &select_query::join(const string &tableName, join::type type)$/;"	f	class:arg3::db::select_query
join	src/select_query.cpp	/^        select_query &select_query::join(const join_clause &value)$/;"	f	class:arg3::db::select_query
joinBy_	src/select_query.h	/^            std::string joinBy_;$/;"	m	class:arg3::db::select_query
join_	src/select_query.h	/^            join_clause join_;$/;"	m	class:arg3::db::select_query
join_clause	html/join_clause_h/Classes/join_clause/index.html	/^<h1><a name="join_clause">join_clause<\/a><\/h1>$/;"	a
join_clause	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="join_clause">join_clause<\/a><\/h3>$/;"	a
join_clause	src/join_clause.cpp	/^        join_clause::join_clause()$/;"	f	class:arg3::db::join_clause
join_clause	src/join_clause.cpp	/^        join_clause::join_clause(const join_clause &other) : tableName_(other.tableName_), type_(other.type_), on_(other.on_)$/;"	f	class:arg3::db::join_clause
join_clause	src/join_clause.cpp	/^        join_clause::join_clause(const string &tableName, join::type type) : tableName_(tableName), type_(type)$/;"	f	class:arg3::db::join_clause
join_clause	src/join_clause.cpp	/^        join_clause::join_clause(join_clause &&other) : tableName_(std::move(other.tableName_)), type_(other.type_), on_(std::move(other.on_))$/;"	f	class:arg3::db::join_clause
join_clause	src/join_clause.h	/^        class join_clause$/;"	c	namespace:arg3::db
join_clause()	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="join_clause()">join_clause()<\/a><\/h3>$/;"	a
join_clause(conststd::string,join::type)	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="join_clause(conststd::string,join::type)">join_clause(const std :: string &, join :: type)<\/a><\/h3>$/;"	a
join_clause.h	html/join_clause_h/index.html	/^<h1><a name="join_clause.h">join_clause.h<\/a><\/h1>$/;"	a
join_csv	html/query_h/index.html	/^<h3><a name="join_csv">join_csv<\/a><\/h3>$/;"	a
join_csv	src/query.h	/^    std::string join_csv(const std::vector<T> &list)$/;"	f	namespace:arg3
join_params	html/query_h/index.html	/^<h3><a name="join_params">join_params<\/a><\/h3>$/;"	a
join_params	src/query.cpp	/^    string join_params(const vector<string> &columns, bool update)$/;"	f	namespace:arg3
l00001	html/alloc_8h_source.html	/^<a href="alloc_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_ALLOC_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_ALLOC_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;{<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;    {<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno"><a class="line" href="alloc_8h.html#a029a9982db97af5863738b553d9d9c93">   18<\/a><\/span>&#160;        T *<a class="code" href="alloc_8h.html#a029a9982db97af5863738b553d9d9c93">c_alloc<\/a>(<span class="keywordtype">size_t<\/span> num = 1)<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;            <span class="keywordtype">void<\/span> *mem = calloc(num, <span class="keyword">sizeof<\/span>(T));<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;            <span class="keywordflow">if<\/span> (mem == NULL) {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;                <span class="keywordflow">throw<\/span> std::bad_alloc();<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            }<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keywordflow">return<\/span> <span class="keyword">static_cast&lt;<\/span>T *<span class="keyword">&gt;<\/span>(mem);<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        }<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        <span class="keywordtype">void<\/span> *<a class="code" href="alloc_8h.html#a029a9982db97af5863738b553d9d9c93">c_alloc<\/a>(<span class="keywordtype">size_t<\/span> size, <span class="keywordtype">size_t<\/span> num = 1);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="alloc_8h.html#a4ed0880bf5db1bc80e2689546555f138">   40<\/a><\/span>&#160;        T *c_alloc(T *value, <span class="keywordtype">size_t<\/span> num, <span class="keywordtype">size_t<\/span> oldSize)<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;        {<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keywordtype">void<\/span> *mem = realloc(value, <span class="keyword">sizeof<\/span>(T) * num);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="keywordflow">if<\/span> (mem == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <span class="keywordflow">throw<\/span> std::bad_alloc();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            }<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            T *val = <span class="keyword">static_cast&lt;<\/span>T *<span class="keyword">&gt;<\/span>(mem);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="comment">\/\/ make sure new values are initialized<\/span><\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordflow">for<\/span> (<span class="keywordtype">size_t<\/span> i = oldSize; i &lt; num; i++) {<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                memset(&amp;val[i], 0, <span class="keyword">sizeof<\/span>(T));<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            }<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <span class="keywordflow">return<\/span> val;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        }<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    }<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;}<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="alloc_8h_html_a029a9982db97af5863738b553d9d9c93"><div class="ttname"><a href="alloc_8h.html#a029a9982db97af5863738b553d9d9c93">arg3::db::c_alloc<\/a><\/div><div class="ttdeci">T * c_alloc(size_t num=1)<\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:18<\/div><\/div>$/;"	a
l00001	html/base__record_8h_source.html	/^<a href="base__record_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_BASE_RECORD_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_BASE_RECORD_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="select__query_8h.html">select_query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="modify__query_8h.html">modify_query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="schema_8h.html">schema.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;{<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    {<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        <span class="keyword">class <\/span>record_db;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        <span class="keyword">class <\/span>row;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html">   23<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="base__record_8h.html#ad6fb27e818811ae3ef07e187234274d3">   31<\/a><\/span>&#160;        <span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> <a class="code" href="base__record_8h.html#ad6fb27e818811ae3ef07e187234274d3">find_all<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> <span class="keyword">typename<\/span> base_record&lt;T&gt;::callback &amp;funk)<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        {<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(schema);<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keyword">auto<\/span> results = query.execute();<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordflow">if<\/span> (!results.is_valid()) <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> : results) {<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                <span class="keywordflow">if<\/span> (<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>.is_valid()) {<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                    <span class="keyword">auto<\/span> record = make_shared&lt;T&gt;();<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                    record-&gt;init(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                    funk(record);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                }<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            }<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        }<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno"><a class="line" href="base__record_8h.html#ae8366ab9ce16bceadfdfdf8ee135a570">   54<\/a><\/span>&#160;        <span class="keyword">inline<\/span> std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="base__record_8h.html#ad6fb27e818811ae3ef07e187234274d3">find_all<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>)<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        {<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="comment">\/* convert sql rows to objects *\/<\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; items;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            db::find_all&lt;T&gt;(schema, [&amp;](std::shared_ptr&lt;T&gt; record) { items.push_back(record); });<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <span class="keywordflow">return<\/span> items;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;        }<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno"><a class="line" href="base__record_8h.html#a0e9f94625d0058ed00a4edc1629e513d">   72<\/a><\/span>&#160;        <span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> <a class="code" href="base__record_8h.html#a0e9f94625d0058ed00a4edc1629e513d">find_by<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value,<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;                            <span class="keyword">const<\/span> <span class="keyword">typename<\/span> base_record&lt;T&gt;::callback &amp;funk)<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        {<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(schema);<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            query.where(name + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, value);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            <span class="keyword">auto<\/span> results = query.execute();<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <span class="keywordflow">if<\/span> (!results.is_valid()) <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;            <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> : results) {<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;                <span class="keywordflow">if<\/span> (<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>.is_valid()) {<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;                    <span class="keyword">auto<\/span> record = make_shared&lt;T&gt;();<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;                    record-&gt;init(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;                    funk(record);<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;                }<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            }<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;        }<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno"><a class="line" href="base__record_8h.html#a9c506fb445aa2b52cec78cdee4190ecb">  102<\/a><\/span>&#160;        <span class="keyword">inline<\/span> std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="base__record_8h.html#a0e9f94625d0058ed00a4edc1629e513d">find_by<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;        {<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            <span class="comment">\/* convert sql rows to objects *\/<\/span><\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            std::vector&lt;shared_ptr&lt;T&gt;&gt; items;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            db::find_by&lt;T&gt;(schema, name, value, [&amp;](std::shared_ptr&lt;T&gt; record) { items.push_back(record); });<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            <span class="keywordflow">return<\/span> items;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;        }<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a><\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;        {<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a> schema_type;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <span class="keyword">typedef<\/span> std::function&lt;void(std::shared_ptr&lt;T&gt;)&gt; callback;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;            std::shared_ptr&lt;schema_type&gt; schema_;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;            std::unordered_map&lt;std::string, sql_value&gt; values_;<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;            std::string idColumnName_;<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00133"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#accbdfa48ca52ae6484dbed9e589192b0">  133<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#accbdfa48ca52ae6484dbed9e589192b0">base_record<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tablename, <span class="keyword">const<\/span> std::string &amp;idColumnName)<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;                : schema_(db-&gt;schemas()-&gt;<a class="code" href="classarg3_1_1db_1_1base__record.html#a61ff8a4161e698a2e6d587d01d353669">get<\/a>(tablename)), idColumnName_(idColumnName)<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;            {<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;                <span class="keywordflow">if<\/span> (schema_ == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;                    <span class="keywordflow">throw<\/span> database_exception(<span class="stringliteral">&quot;no schema for record &quot;<\/span> + tablename);<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;                }<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;            }<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div><div class="line"><a name="l00145"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#acac4b358fc5f72a6aee0c8038b14f8b3">  145<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#acac4b358fc5f72a6aee0c8038b14f8b3">base_record<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema_type&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;columnName) : schema_(schema), idColumnName_(columnName)<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;            {<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;                <span class="keywordflow">if<\/span> (schema_ == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;                    <span class="keywordflow">throw<\/span> database_exception(<span class="stringliteral">&quot;no schema for record&quot;<\/span>);<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;                }<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;            }<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> V&gt;<\/div><div class="line"><a name="l00158"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a9d377c109d0ebddfaca0a5e38fe55876">  158<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a9d377c109d0ebddfaca0a5e38fe55876">base_record<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema_type&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;columnName, V value)<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>(schema, columnName)<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;            {<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;                <span class="keyword">set<\/span>(idColumnName_, value);<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a76122cffa79e30009de26b9da5ca4e3f">refresh<\/a>();  <span class="comment">\/\/ load up from database<\/span><\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;            }<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> V&gt;<\/div><div class="line"><a name="l00172"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a007875446e1db5af07a9332eac195401">  172<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a007875446e1db5af07a9332eac195401">base_record<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::string &amp;columnName, <span class="keyword">const<\/span> V &amp;value)<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>(db, tableName, columnName)<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;            {<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;                <span class="keyword">set<\/span>(idColumnName_, value);<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a76122cffa79e30009de26b9da5ca4e3f">refresh<\/a>();<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;            }<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;<\/div><div class="line"><a name="l00182"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#ada40bb5a8795de1170b830a721bbc869">  182<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#ada40bb5a8795de1170b830a721bbc869">base_record<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema_type&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;columnName, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>(schema, columnName)<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;            {<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">init<\/a>(values);<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;            }<\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;<\/div><div class="line"><a name="l00191"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a8860f80296c9fa70fb6da8b094837f46">  191<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a8860f80296c9fa70fb6da8b094837f46">base_record<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::string &amp;columnName, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>(db, tableName, columnName)<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;            {<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">init<\/a>(values);<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;            }<\/div><div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;<\/div><div class="line"><a name="l00200"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a9ff7dad214774619b6bc7725ac8fc527">  200<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a9ff7dad214774619b6bc7725ac8fc527">base_record<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;other) : schema_(other.schema_), values_(other.values_), idColumnName_(other.idColumnName_)<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;            {<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;            }<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;<\/div><div class="line"><a name="l00207"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a5e5c8039b6ce729b44fbb6249e983dfb">  207<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a5e5c8039b6ce729b44fbb6249e983dfb">base_record<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;                : schema_(<a class="code" href="namespacestd.html">std<\/a>::move(other.schema_)), values_(<a class="code" href="namespacestd.html">std<\/a>::move(other.values_)), idColumnName_(<a class="code" href="namespacestd.html">std<\/a>::move(other.idColumnName_))<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;            {<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;            }<\/div><div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;<\/div><div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>()<\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;            {<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;            }<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div><div class="line"><a name="l00219"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#ae4a44471a29454464b107ba12d36c600">  219<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1base__record.html#ae4a44471a29454464b107ba12d36c600">operator=<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;other)<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;            {<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;                values_ = other.values_;<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;                schema_ = other.schema_;<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;                idColumnName_ = other.idColumnName_;<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;            }<\/div><div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;<\/div><div class="line"><a name="l00231"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#abf2ae79840ecb63a75314698ab1a3663">  231<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1base__record.html#abf2ae79840ecb63a75314698ab1a3663">operator=<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;            {<\/div><div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;                values_ = std::move(other.values_);<\/div><div class="line"><a name="l00234"><\/a><span class="lineno">  234<\/span>&#160;                schema_ = std::move(other.schema_);<\/div><div class="line"><a name="l00235"><\/a><span class="lineno">  235<\/span>&#160;                idColumnName_ = std::move(other.idColumnName_);<\/div><div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;<\/div><div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;            }<\/div><div class="line"><a name="l00239"><\/a><span class="lineno">  239<\/span>&#160;<\/div><div class="line"><a name="l00243"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#ad5b4180ae469db6cec87c4efdb9629a0">  243<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#ad5b4180ae469db6cec87c4efdb9629a0">set_id<\/a>(<span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;            {<\/div><div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;                <span class="keyword">set<\/span>(idColumnName_, value);<\/div><div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;            }<\/div><div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;<\/div><div class="line"><a name="l00251"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#aa2357706ab9e9c2bd8f98ac726f60ee4">  251<\/a><\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1base__record.html#aa2357706ab9e9c2bd8f98ac726f60ee4">id<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00253"><\/a><span class="lineno">  253<\/span>&#160;                <span class="keywordflow">return<\/span> <span class="keyword">get<\/span>(idColumnName_);<\/div><div class="line"><a name="l00254"><\/a><span class="lineno">  254<\/span>&#160;            }<\/div><div class="line"><a name="l00255"><\/a><span class="lineno">  255<\/span>&#160;<\/div><div class="line"><a name="l00259"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">  259<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">init<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00260"><\/a><span class="lineno">  260<\/span>&#160;            {<\/div><div class="line"><a name="l00261"><\/a><span class="lineno">  261<\/span>&#160;                <span class="keywordflow">if<\/span> (!values.is_valid()) {<\/div><div class="line"><a name="l00262"><\/a><span class="lineno">  262<\/span>&#160;                    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00263"><\/a><span class="lineno">  263<\/span>&#160;                }<\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;<\/div><div class="line"><a name="l00265"><\/a><span class="lineno">  265<\/span>&#160;                <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> v = values.begin(); v != values.end(); v++) {<\/div><div class="line"><a name="l00266"><\/a><span class="lineno">  266<\/span>&#160;                    <span class="keyword">set<\/span>(v.name(), v-&gt;to_value());<\/div><div class="line"><a name="l00267"><\/a><span class="lineno">  267<\/span>&#160;                }<\/div><div class="line"><a name="l00268"><\/a><span class="lineno">  268<\/span>&#160;<\/div><div class="line"><a name="l00269"><\/a><span class="lineno">  269<\/span>&#160;                on_record_init(values);<\/div><div class="line"><a name="l00270"><\/a><span class="lineno">  270<\/span>&#160;            }<\/div><div class="line"><a name="l00271"><\/a><span class="lineno">  271<\/span>&#160;<\/div><div class="line"><a name="l00272"><\/a><span class="lineno">  272<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> on_record_init(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00273"><\/a><span class="lineno">  273<\/span>&#160;            {<\/div><div class="line"><a name="l00274"><\/a><span class="lineno">  274<\/span>&#160;            }<\/div><div class="line"><a name="l00275"><\/a><span class="lineno">  275<\/span>&#160;<\/div><div class="line"><a name="l00280"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a71341423b284a7961192b5f521557df6">  280<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a71341423b284a7961192b5f521557df6">is_valid<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00281"><\/a><span class="lineno">  281<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00282"><\/a><span class="lineno">  282<\/span>&#160;                <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>()-&gt;is_valid();<\/div><div class="line"><a name="l00283"><\/a><span class="lineno">  283<\/span>&#160;            }<\/div><div class="line"><a name="l00284"><\/a><span class="lineno">  284<\/span>&#160;<\/div><div class="line"><a name="l00288"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a498af4ebd0de45bd4e28fcc19c25f32b">  288<\/a><\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1base__record.html#a498af4ebd0de45bd4e28fcc19c25f32b">id_column_name<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00289"><\/a><span class="lineno">  289<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00290"><\/a><span class="lineno">  290<\/span>&#160;                <span class="keywordflow">return<\/span> idColumnName_;<\/div><div class="line"><a name="l00291"><\/a><span class="lineno">  291<\/span>&#160;            }<\/div><div class="line"><a name="l00292"><\/a><span class="lineno">  292<\/span>&#160;<\/div><div class="line"><a name="l00296"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">  296<\/a><\/span>&#160;            std::shared_ptr&lt;schema_type&gt; <a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00297"><\/a><span class="lineno">  297<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00298"><\/a><span class="lineno">  298<\/span>&#160;<\/div><div class="line"><a name="l00299"><\/a><span class="lineno">  299<\/span>&#160;                <span class="keywordflow">if<\/span> (schema_ != <span class="keyword">nullptr<\/span> &amp;&amp; !schema_-&gt;is_valid()) {<\/div><div class="line"><a name="l00300"><\/a><span class="lineno">  300<\/span>&#160;                    schema_-&gt;init();<\/div><div class="line"><a name="l00301"><\/a><span class="lineno">  301<\/span>&#160;                }<\/div><div class="line"><a name="l00302"><\/a><span class="lineno">  302<\/span>&#160;<\/div><div class="line"><a name="l00303"><\/a><span class="lineno">  303<\/span>&#160;                <span class="keywordflow">return<\/span> schema_;<\/div><div class="line"><a name="l00304"><\/a><span class="lineno">  304<\/span>&#160;            }<\/div><div class="line"><a name="l00305"><\/a><span class="lineno">  305<\/span>&#160;<\/div><div class="line"><a name="l00309"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a7817b1d5ab99a5b87aa6085f40612c2e">  309<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a7817b1d5ab99a5b87aa6085f40612c2e">exists<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00310"><\/a><span class="lineno">  310<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00311"><\/a><span class="lineno">  311<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(idColumnName_)) {<\/div><div class="line"><a name="l00312"><\/a><span class="lineno">  312<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00313"><\/a><span class="lineno">  313<\/span>&#160;                }<\/div><div class="line"><a name="l00314"><\/a><span class="lineno">  314<\/span>&#160;<\/div><div class="line"><a name="l00315"><\/a><span class="lineno">  315<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00316"><\/a><span class="lineno">  316<\/span>&#160;<\/div><div class="line"><a name="l00317"><\/a><span class="lineno">  317<\/span>&#160;                query.where(idColumnName_ + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00318"><\/a><span class="lineno">  318<\/span>&#160;<\/div><div class="line"><a name="l00319"><\/a><span class="lineno">  319<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, <span class="keyword">get<\/span>(idColumnName_));<\/div><div class="line"><a name="l00320"><\/a><span class="lineno">  320<\/span>&#160;<\/div><div class="line"><a name="l00321"><\/a><span class="lineno">  321<\/span>&#160;                <span class="keywordflow">return<\/span> query.count() &gt; 0;<\/div><div class="line"><a name="l00322"><\/a><span class="lineno">  322<\/span>&#160;            }<\/div><div class="line"><a name="l00323"><\/a><span class="lineno">  323<\/span>&#160;<\/div><div class="line"><a name="l00328"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a5e4c561423bbbb7c794adc7ffe14016e">  328<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a5e4c561423bbbb7c794adc7ffe14016e">save<\/a>()<\/div><div class="line"><a name="l00329"><\/a><span class="lineno">  329<\/span>&#160;            {<\/div><div class="line"><a name="l00330"><\/a><span class="lineno">  330<\/span>&#160;                <span class="keywordtype">size_t<\/span> index = 0;<\/div><div class="line"><a name="l00331"><\/a><span class="lineno">  331<\/span>&#160;                <span class="keywordtype">bool<\/span> rval = <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00332"><\/a><span class="lineno">  332<\/span>&#160;                <span class="keyword">auto<\/span> cols_to_save = available_columns();<\/div><div class="line"><a name="l00333"><\/a><span class="lineno">  333<\/span>&#160;<\/div><div class="line"><a name="l00334"><\/a><span class="lineno">  334<\/span>&#160;                <span class="keywordflow">if<\/span> (<a class="code" href="classarg3_1_1db_1_1base__record.html#a7817b1d5ab99a5b87aa6085f40612c2e">exists<\/a>()) {<\/div><div class="line"><a name="l00335"><\/a><span class="lineno">  335<\/span>&#160;                    <a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), cols_to_save);<\/div><div class="line"><a name="l00336"><\/a><span class="lineno">  336<\/span>&#160;<\/div><div class="line"><a name="l00337"><\/a><span class="lineno">  337<\/span>&#160;                    query.<a class="code" href="classarg3_1_1db_1_1update__query.html#af5fbab05e4c12aa572a7e9f1a355a9d0">where<\/a>(idColumnName_ + <span class="stringliteral">&quot; = $&quot;<\/span> + to_string(cols_to_save.size() + 1));<\/div><div class="line"><a name="l00338"><\/a><span class="lineno">  338<\/span>&#160;<\/div><div class="line"><a name="l00339"><\/a><span class="lineno">  339<\/span>&#160;                    index = bind_columns_to_query(query, cols_to_save);<\/div><div class="line"><a name="l00340"><\/a><span class="lineno">  340<\/span>&#160;<\/div><div class="line"><a name="l00341"><\/a><span class="lineno">  341<\/span>&#160;                    <span class="comment">\/\/ add the where parameter<\/span><\/div><div class="line"><a name="l00342"><\/a><span class="lineno">  342<\/span>&#160;                    query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(++index, <span class="keyword">get<\/span>(idColumnName_));<\/div><div class="line"><a name="l00343"><\/a><span class="lineno">  343<\/span>&#160;<\/div><div class="line"><a name="l00344"><\/a><span class="lineno">  344<\/span>&#160;                    rval = query.<a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00345"><\/a><span class="lineno">  345<\/span>&#160;                } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00346"><\/a><span class="lineno">  346<\/span>&#160;                    <a class="code" href="classarg3_1_1db_1_1insert__query.html">insert_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), cols_to_save);<\/div><div class="line"><a name="l00347"><\/a><span class="lineno">  347<\/span>&#160;<\/div><div class="line"><a name="l00348"><\/a><span class="lineno">  348<\/span>&#160;                    bind_columns_to_query(query, cols_to_save);<\/div><div class="line"><a name="l00349"><\/a><span class="lineno">  349<\/span>&#160;<\/div><div class="line"><a name="l00350"><\/a><span class="lineno">  350<\/span>&#160;                    rval = query.<a class="code" href="classarg3_1_1db_1_1insert__query.html#a1794ad08338721f1d3ffd8ded76f004a">execute<\/a>();<\/div><div class="line"><a name="l00351"><\/a><span class="lineno">  351<\/span>&#160;<\/div><div class="line"><a name="l00352"><\/a><span class="lineno">  352<\/span>&#160;                    <span class="keywordflow">if<\/span> (rval) {<\/div><div class="line"><a name="l00353"><\/a><span class="lineno">  353<\/span>&#160;                        <span class="comment">\/\/ set the new id<\/span><\/div><div class="line"><a name="l00354"><\/a><span class="lineno">  354<\/span>&#160;                        <span class="keyword">set<\/span>(idColumnName_, query.<a class="code" href="classarg3_1_1db_1_1insert__query.html#ae87029031cfd2762c898dc0b5e0a9a62">last_insert_id<\/a>());<\/div><div class="line"><a name="l00355"><\/a><span class="lineno">  355<\/span>&#160;                    }<\/div><div class="line"><a name="l00356"><\/a><span class="lineno">  356<\/span>&#160;                }<\/div><div class="line"><a name="l00357"><\/a><span class="lineno">  357<\/span>&#160;<\/div><div class="line"><a name="l00358"><\/a><span class="lineno">  358<\/span>&#160;                <span class="keywordflow">return<\/span> rval;<\/div><div class="line"><a name="l00359"><\/a><span class="lineno">  359<\/span>&#160;            }<\/div><div class="line"><a name="l00360"><\/a><span class="lineno">  360<\/span>&#160;<\/div><div class="line"><a name="l00365"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a61ff8a4161e698a2e6d587d01d353669">  365<\/a><\/span>&#160;            sql_value <span class="keyword">get<\/span>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span><\/div><div class="line"><a name="l00366"><\/a><span class="lineno">  366<\/span>&#160;            {<\/div><div class="line"><a name="l00367"><\/a><span class="lineno">  367<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(name)) {<\/div><div class="line"><a name="l00368"><\/a><span class="lineno">  368<\/span>&#160;                    <span class="keywordflow">return<\/span> <a class="code" href="sql__value_8h.html#a08bdb77f401be0f94e9bcd2f0dd4b823">sql_null<\/a>;<\/div><div class="line"><a name="l00369"><\/a><span class="lineno">  369<\/span>&#160;                }<\/div><div class="line"><a name="l00370"><\/a><span class="lineno">  370<\/span>&#160;<\/div><div class="line"><a name="l00371"><\/a><span class="lineno">  371<\/span>&#160;                <span class="keywordflow">return<\/span> values_.at(name);<\/div><div class="line"><a name="l00372"><\/a><span class="lineno">  372<\/span>&#160;            }<\/div><div class="line"><a name="l00373"><\/a><span class="lineno">  373<\/span>&#160;<\/div><div class="line"><a name="l00380"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">  380<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(<span class="keyword">const<\/span> std::string &amp;name)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00381"><\/a><span class="lineno">  381<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00382"><\/a><span class="lineno">  382<\/span>&#160;                <span class="keywordflow">return<\/span> values_.size() &gt; 0 &amp;&amp; values_.count(name) &gt; 0;<\/div><div class="line"><a name="l00383"><\/a><span class="lineno">  383<\/span>&#160;            }<\/div><div class="line"><a name="l00384"><\/a><span class="lineno">  384<\/span>&#160;<\/div><div class="line"><a name="l00390"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#adc9845aa30188b1213318d956d9c027f">  390<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <span class="keyword">set<\/span>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00391"><\/a><span class="lineno">  391<\/span>&#160;            {<\/div><div class="line"><a name="l00392"><\/a><span class="lineno">  392<\/span>&#160;                values_[name] = value;<\/div><div class="line"><a name="l00393"><\/a><span class="lineno">  393<\/span>&#160;            }<\/div><div class="line"><a name="l00394"><\/a><span class="lineno">  394<\/span>&#160;<\/div><div class="line"><a name="l00399"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a3738524bb4095b1c78ff91bfd79a6dd7">  399<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a3738524bb4095b1c78ff91bfd79a6dd7">unset<\/a>(<span class="keyword">const<\/span> std::string &amp;name)<\/div><div class="line"><a name="l00400"><\/a><span class="lineno">  400<\/span>&#160;            {<\/div><div class="line"><a name="l00401"><\/a><span class="lineno">  401<\/span>&#160;                values_.erase(name);<\/div><div class="line"><a name="l00402"><\/a><span class="lineno">  402<\/span>&#160;            }<\/div><div class="line"><a name="l00403"><\/a><span class="lineno">  403<\/span>&#160;<\/div><div class="line"><a name="l00408"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a00a57aaed06d95ee429e67055cb99a3c">  408<\/a><\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="classarg3_1_1db_1_1base__record.html#a00a57aaed06d95ee429e67055cb99a3c">find_all<\/a>()<\/div><div class="line"><a name="l00409"><\/a><span class="lineno">  409<\/span>&#160;            {<\/div><div class="line"><a name="l00410"><\/a><span class="lineno">  410<\/span>&#160;                <span class="keywordflow">return<\/span> arg3::db::find_all&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00411"><\/a><span class="lineno">  411<\/span>&#160;            }<\/div><div class="line"><a name="l00412"><\/a><span class="lineno">  412<\/span>&#160;<\/div><div class="line"><a name="l00417"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a81526c751d8a179cb6b14cd12aef4e65">  417<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a81526c751d8a179cb6b14cd12aef4e65">find_all<\/a>(<span class="keyword">const<\/span> callback &amp;funk)<\/div><div class="line"><a name="l00418"><\/a><span class="lineno">  418<\/span>&#160;            {<\/div><div class="line"><a name="l00419"><\/a><span class="lineno">  419<\/span>&#160;                arg3::db::find_all&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), funk);<\/div><div class="line"><a name="l00420"><\/a><span class="lineno">  420<\/span>&#160;            }<\/div><div class="line"><a name="l00421"><\/a><span class="lineno">  421<\/span>&#160;<\/div><div class="line"><a name="l00425"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a30b914a1f14c7b4e80bf715873bc6c1f">  425<\/a><\/span>&#160;            std::shared_ptr&lt;T&gt; <a class="code" href="classarg3_1_1db_1_1base__record.html#a30b914a1f14c7b4e80bf715873bc6c1f">find_by_id<\/a>(<span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00426"><\/a><span class="lineno">  426<\/span>&#160;            {<\/div><div class="line"><a name="l00427"><\/a><span class="lineno">  427<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00428"><\/a><span class="lineno">  428<\/span>&#160;<\/div><div class="line"><a name="l00429"><\/a><span class="lineno">  429<\/span>&#160;                query.where(idColumnName_ + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00430"><\/a><span class="lineno">  430<\/span>&#160;<\/div><div class="line"><a name="l00431"><\/a><span class="lineno">  431<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, value);<\/div><div class="line"><a name="l00432"><\/a><span class="lineno">  432<\/span>&#160;<\/div><div class="line"><a name="l00433"><\/a><span class="lineno">  433<\/span>&#160;                <span class="keyword">auto<\/span> results = query.execute();<\/div><div class="line"><a name="l00434"><\/a><span class="lineno">  434<\/span>&#160;<\/div><div class="line"><a name="l00435"><\/a><span class="lineno">  435<\/span>&#160;                <span class="keyword">auto<\/span> it = results.<a class="code" href="classarg3_1_1db_1_1resultset.html#a31b572e1b4957ed1923a2a20b947b7a3">begin<\/a>();<\/div><div class="line"><a name="l00436"><\/a><span class="lineno">  436<\/span>&#160;<\/div><div class="line"><a name="l00437"><\/a><span class="lineno">  437<\/span>&#160;                <span class="keywordflow">if<\/span> (it != results.end()) {<\/div><div class="line"><a name="l00438"><\/a><span class="lineno">  438<\/span>&#160;                    <span class="keywordflow">return<\/span> make_shared&lt;T&gt;(*it);<\/div><div class="line"><a name="l00439"><\/a><span class="lineno">  439<\/span>&#160;                }<\/div><div class="line"><a name="l00440"><\/a><span class="lineno">  440<\/span>&#160;<\/div><div class="line"><a name="l00441"><\/a><span class="lineno">  441<\/span>&#160;                <span class="keywordflow">throw<\/span> record_not_found_exception();<\/div><div class="line"><a name="l00442"><\/a><span class="lineno">  442<\/span>&#160;            }<\/div><div class="line"><a name="l00443"><\/a><span class="lineno">  443<\/span>&#160;<\/div><div class="line"><a name="l00450"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a46c1115f7120f6e4541af0e9a38b7ad3">  450<\/a><\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="classarg3_1_1db_1_1base__record.html#a46c1115f7120f6e4541af0e9a38b7ad3">find_by<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00451"><\/a><span class="lineno">  451<\/span>&#160;            {<\/div><div class="line"><a name="l00452"><\/a><span class="lineno">  452<\/span>&#160;                <span class="keywordflow">return<\/span> arg3::db::find_by&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), name, value);<\/div><div class="line"><a name="l00453"><\/a><span class="lineno">  453<\/span>&#160;            }<\/div><div class="line"><a name="l00460"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#aa96e898eff350b54ea698a985b0fa14b">  460<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#aa96e898eff350b54ea698a985b0fa14b">find_by<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value, <span class="keyword">const<\/span> callback &amp;funk)<\/div><div class="line"><a name="l00461"><\/a><span class="lineno">  461<\/span>&#160;            {<\/div><div class="line"><a name="l00462"><\/a><span class="lineno">  462<\/span>&#160;                arg3::db::find_by&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), name, value, funk);<\/div><div class="line"><a name="l00463"><\/a><span class="lineno">  463<\/span>&#160;            }<\/div><div class="line"><a name="l00464"><\/a><span class="lineno">  464<\/span>&#160;<\/div><div class="line"><a name="l00469"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a76122cffa79e30009de26b9da5ca4e3f">  469<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a76122cffa79e30009de26b9da5ca4e3f">refresh<\/a>()<\/div><div class="line"><a name="l00470"><\/a><span class="lineno">  470<\/span>&#160;            {<\/div><div class="line"><a name="l00471"><\/a><span class="lineno">  471<\/span>&#160;                <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#aace7c21c3bde447f7476d76401b620fa">refresh_by<\/a>(idColumnName_);<\/div><div class="line"><a name="l00472"><\/a><span class="lineno">  472<\/span>&#160;            }<\/div><div class="line"><a name="l00473"><\/a><span class="lineno">  473<\/span>&#160;<\/div><div class="line"><a name="l00479"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#aace7c21c3bde447f7476d76401b620fa">  479<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#aace7c21c3bde447f7476d76401b620fa">refresh_by<\/a>(<span class="keyword">const<\/span> std::string &amp;name)<\/div><div class="line"><a name="l00480"><\/a><span class="lineno">  480<\/span>&#160;            {<\/div><div class="line"><a name="l00481"><\/a><span class="lineno">  481<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(name)) {<\/div><div class="line"><a name="l00482"><\/a><span class="lineno">  482<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00483"><\/a><span class="lineno">  483<\/span>&#160;                }<\/div><div class="line"><a name="l00484"><\/a><span class="lineno">  484<\/span>&#160;<\/div><div class="line"><a name="l00485"><\/a><span class="lineno">  485<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00486"><\/a><span class="lineno">  486<\/span>&#160;<\/div><div class="line"><a name="l00487"><\/a><span class="lineno">  487<\/span>&#160;                query.where(name + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00488"><\/a><span class="lineno">  488<\/span>&#160;<\/div><div class="line"><a name="l00489"><\/a><span class="lineno">  489<\/span>&#160;                query.limit(<span class="stringliteral">&quot;1&quot;<\/span>);<\/div><div class="line"><a name="l00490"><\/a><span class="lineno">  490<\/span>&#160;<\/div><div class="line"><a name="l00491"><\/a><span class="lineno">  491<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, <span class="keyword">get<\/span>(name));<\/div><div class="line"><a name="l00492"><\/a><span class="lineno">  492<\/span>&#160;<\/div><div class="line"><a name="l00493"><\/a><span class="lineno">  493<\/span>&#160;                <span class="keyword">auto<\/span> result = query.execute();<\/div><div class="line"><a name="l00494"><\/a><span class="lineno">  494<\/span>&#160;<\/div><div class="line"><a name="l00495"><\/a><span class="lineno">  495<\/span>&#160;                <span class="keywordflow">if<\/span> (!result.next()) {<\/div><div class="line"><a name="l00496"><\/a><span class="lineno">  496<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00497"><\/a><span class="lineno">  497<\/span>&#160;                }<\/div><div class="line"><a name="l00498"><\/a><span class="lineno">  498<\/span>&#160;<\/div><div class="line"><a name="l00499"><\/a><span class="lineno">  499<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">init<\/a>(*result);<\/div><div class="line"><a name="l00500"><\/a><span class="lineno">  500<\/span>&#160;<\/div><div class="line"><a name="l00501"><\/a><span class="lineno">  501<\/span>&#160;                <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>;<\/div><div class="line"><a name="l00502"><\/a><span class="lineno">  502<\/span>&#160;            }<\/div><div class="line"><a name="l00503"><\/a><span class="lineno">  503<\/span>&#160;<\/div><div class="line"><a name="l00507"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#af3189184f3c1aba43a661c10024ba69a">  507<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#af3189184f3c1aba43a661c10024ba69a">de1ete<\/a>()<\/div><div class="line"><a name="l00508"><\/a><span class="lineno">  508<\/span>&#160;            {<\/div><div class="line"><a name="l00509"><\/a><span class="lineno">  509<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(idColumnName_)) {<\/div><div class="line"><a name="l00510"><\/a><span class="lineno">  510<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00511"><\/a><span class="lineno">  511<\/span>&#160;                }<\/div><div class="line"><a name="l00512"><\/a><span class="lineno">  512<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1delete__query.html">delete_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00513"><\/a><span class="lineno">  513<\/span>&#160;<\/div><div class="line"><a name="l00514"><\/a><span class="lineno">  514<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1update__query.html#af5fbab05e4c12aa572a7e9f1a355a9d0">where<\/a>(idColumnName_ + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00515"><\/a><span class="lineno">  515<\/span>&#160;<\/div><div class="line"><a name="l00516"><\/a><span class="lineno">  516<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, <span class="keywordtype">id<\/span>());<\/div><div class="line"><a name="l00517"><\/a><span class="lineno">  517<\/span>&#160;<\/div><div class="line"><a name="l00518"><\/a><span class="lineno">  518<\/span>&#160;                <span class="keywordflow">return<\/span> query.<a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00519"><\/a><span class="lineno">  519<\/span>&#160;            }<\/div><div class="line"><a name="l00520"><\/a><span class="lineno">  520<\/span>&#160;<\/div><div class="line"><a name="l00521"><\/a><span class="lineno">  521<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00522"><\/a><span class="lineno">  522<\/span>&#160;            std::vector&lt;std::string&gt; available_columns()<\/div><div class="line"><a name="l00523"><\/a><span class="lineno">  523<\/span>&#160;            {<\/div><div class="line"><a name="l00524"><\/a><span class="lineno">  524<\/span>&#160;                std::vector&lt;std::string&gt; columns = <a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>()-&gt;column_names();<\/div><div class="line"><a name="l00525"><\/a><span class="lineno">  525<\/span>&#160;                std::vector&lt;std::string&gt; values(columns.size());<\/div><div class="line"><a name="l00526"><\/a><span class="lineno">  526<\/span>&#160;                <span class="keyword">auto<\/span> it = std::copy_if(columns.begin(), columns.end(), values.begin(), [&amp;](<span class="keyword">const<\/span> std::string &amp;val) { <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(val); });<\/div><div class="line"><a name="l00527"><\/a><span class="lineno">  527<\/span>&#160;                values.resize(std::distance(values.begin(), it));<\/div><div class="line"><a name="l00528"><\/a><span class="lineno">  528<\/span>&#160;                <span class="keywordflow">return<\/span> values;<\/div><div class="line"><a name="l00529"><\/a><span class="lineno">  529<\/span>&#160;            }<\/div><div class="line"><a name="l00530"><\/a><span class="lineno">  530<\/span>&#160;<\/div><div class="line"><a name="l00531"><\/a><span class="lineno">  531<\/span>&#160;            <span class="keywordtype">size_t<\/span> bind_columns_to_query(<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns)<\/div><div class="line"><a name="l00532"><\/a><span class="lineno">  532<\/span>&#160;            {<\/div><div class="line"><a name="l00533"><\/a><span class="lineno">  533<\/span>&#160;                <span class="keywordtype">size_t<\/span> index = 0;<\/div><div class="line"><a name="l00534"><\/a><span class="lineno">  534<\/span>&#160;<\/div><div class="line"><a name="l00535"><\/a><span class="lineno">  535<\/span>&#160;                <span class="comment">\/\/ bind the column values<\/span><\/div><div class="line"><a name="l00536"><\/a><span class="lineno">  536<\/span>&#160;                <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> : columns) {<\/div><div class="line"><a name="l00537"><\/a><span class="lineno">  537<\/span>&#160;                    <span class="keyword">auto<\/span> value = <span class="keyword">get<\/span>(<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00538"><\/a><span class="lineno">  538<\/span>&#160;                    query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(++index, value);<\/div><div class="line"><a name="l00539"><\/a><span class="lineno">  539<\/span>&#160;                }<\/div><div class="line"><a name="l00540"><\/a><span class="lineno">  540<\/span>&#160;<\/div><div class="line"><a name="l00541"><\/a><span class="lineno">  541<\/span>&#160;                <span class="keywordflow">return<\/span> index;<\/div><div class="line"><a name="l00542"><\/a><span class="lineno">  542<\/span>&#160;            }<\/div><div class="line"><a name="l00543"><\/a><span class="lineno">  543<\/span>&#160;        };<\/div><div class="line"><a name="l00544"><\/a><span class="lineno">  544<\/span>&#160;    }<\/div><div class="line"><a name="l00545"><\/a><span class="lineno">  545<\/span>&#160;}<\/div><div class="line"><a name="l00546"><\/a><span class="lineno">  546<\/span>&#160;<\/div><div class="line"><a name="l00547"><\/a><span class="lineno">  547<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1base__record_html_ae4a44471a29454464b107ba12d36c600"><div class="ttname"><a href="classarg3_1_1db_1_1base__record.html#ae4a44471a29454464b107ba12d36c600">arg3::db::base_record::operator=<\/a><\/div><div class="ttdeci">base_record &amp; operator=(const base_record &amp;other)<\/div><div class="ttdef"><b>Definition:<\/b> base_record.h:219<\/div><\/div>$/;"	a
l00001	html/bindable_8h_source.html	/^<a href="bindable_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_BINDABLE_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_BINDABLE_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;set&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="exception_8h.html">exception.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;{<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1bindable.html">   20<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1bindable.html#a557fdf334bc3bdf78fb62e7390b58930">   30<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a557fdf334bc3bdf78fb62e7390b58930">bind_list<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> T &amp;value)<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            {<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html#a09aac616d78c663742610bd3f3d8ed53">bind_value<\/a>(index, value);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            }<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T, <span class="keyword">typename<\/span>... List&gt;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1bindable.html#a9e2d91b5dd56982ab7212d816729ab0e">   43<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a9e2d91b5dd56982ab7212d816729ab0e">bind_list<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> T &amp;value, <span class="keyword">const<\/span> List &amp;... argv)<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            {<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1bindable.html#a09aac616d78c663742610bd3f3d8ed53">bind_value<\/a>(index, value);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1bindable.html#a557fdf334bc3bdf78fb62e7390b58930">bind_list<\/a>(index + 1, argv...);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            }<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T, <span class="keyword">typename<\/span>... List&gt;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;bind_all(<span class="keyword">const<\/span> T &amp;value, <span class="keyword">const<\/span> List &amp;... argv)<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            {<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html#a557fdf334bc3bdf78fb62e7390b58930">bind_list<\/a>(1, value, argv...);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            }<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a09aac616d78c663742610bd3f3d8ed53">bind_value<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value);<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value) = 0;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> value) = 0;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value) = 0;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value) = 0;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">float<\/span> value) = 0;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value) = 0;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1) = 0;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1) = 0;<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">sql_blob<\/a> &amp;value) = 0;<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_type &amp;value) = 0;<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;time) = 0;<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value) = 0;<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;        };<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;<\/div><div class="line"><a name="l00167"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1bind__mapping.html">  167<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a><\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;        {<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;            <span class="keyword">typedef<\/span> std::unordered_map&lt;std::string, std::set&lt;unsigned&gt;&gt; type;<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;            <span class="keywordtype">void<\/span> add_named_param(<span class="keyword">const<\/span> std::string &amp;name, <span class="keywordtype">unsigned<\/span> index);<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;            <span class="keywordtype">void<\/span> rem_named_param(<span class="keyword">const<\/span> std::string &amp;name, <span class="keywordtype">unsigned<\/span> index);<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a>();<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a> &amp;other);<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a>(<a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a>();<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a> &amp;other);<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;<\/div><div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;            <span class="keyword">virtual<\/span> std::string prepare(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;<\/div><div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1bindable.html#a889796226851899b47c7148633471e5d">bind<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value);<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;            <span class="keywordtype">bool<\/span> is_named() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;<\/div><div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;            type mappings_;<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;        };<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;    }<\/div><div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;}<\/div><div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;<\/div><div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1bindable_html_a9e2d91b5dd56982ab7212d816729ab0e"><div class="ttname"><a href="classarg3_1_1db_1_1bindable.html#a9e2d91b5dd56982ab7212d816729ab0e">arg3::db::bindable::bind_list<\/a><\/div><div class="ttdeci">bindable &amp; bind_list(size_t index, const T &amp;value, const List &amp;...argv)<\/div><div class="ttdef"><b>Definition:<\/b> bindable.h:43<\/div><\/div>$/;"	a
l00001	html/column_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_COLUMN_VALUE_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_COLUMN_VALUE_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;cassert&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="exception_8h.html">exception.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;{<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1column__impl.html">   22<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a>(<a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html#ad23333c46bc9a6861424e419d781df70">is_valid<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> <a class="code" href="classarg3_1_1db_1_1column__impl.html#ae66d5e2df2a0d7916879036064be2157">to_value<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1column__impl.html#a9a78adbfd1489aa0f0897db9aaadb553">name<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;        };<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1column.html">   53<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1column.html">column<\/a><\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;        {<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">class<\/span> A, <span class="keyword">class<\/span> B, <span class="keyword">class<\/span> C&gt;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            std::shared_ptr&lt;column_impl&gt; impl_;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>();<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;column_impl&gt; &amp;impl);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;other);<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;other);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html#ad23333c46bc9a6861424e419d781df70">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> <a class="code" href="classarg3_1_1db_1_1column__impl.html#ae66d5e2df2a0d7916879036064be2157">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1column__impl.html#a9a78adbfd1489aa0f0897db9aaadb553">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            std::shared_ptr&lt;column_impl&gt; impl() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;        };<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;    }<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;}<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1column_html"><div class="ttname"><a href="classarg3_1_1db_1_1column.html">arg3::db::column<\/a><\/div><div class="ttdef"><b>Definition:<\/b> column.h:53<\/div><\/div>$/;"	a
l00001	html/exception_8h_source.html	/^<a href="exception_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_EXCEPTION_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_EXCEPTION_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define ARG3_DECLARE_EXCEPTION(CLASS, BASE)                         \\<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">    class CLASS : public BASE                                       \\<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">    {                                                               \\<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">       private:                                                     \\<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">        std::string what_;                                          \\<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">        std::string context_;                                       \\<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">                                                                    \\<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">       public:                                                      \\<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">        CLASS(const std::string &amp;what);                             \\<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">        CLASS(const std::string &amp;what, const std::string &amp;context); \\<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">        CLASS();                                                    \\<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">        virtual const char *what() const noexcept;                  \\<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">        virtual const char *context() const noexcept;               \\<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">    }<\/span><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#define ARG3_IMPLEMENT_EXCEPTION(CLASS, BASE)                                                                  \\<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">    CLASS::CLASS(const std::string &amp;what) : BASE(), what_(what)                                                \\<\/span><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">    }                                                                                                          \\<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">    CLASS::CLASS(const std::string &amp;what, const std::string &amp;context) : BASE(), what_(what), context_(context) \\<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="preprocessor">    }                                                                                                          \\<\/span><\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="preprocessor">    CLASS::CLASS()                                                                                             \\<\/span><\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="preprocessor">    }                                                                                                          \\<\/span><\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="preprocessor">    const char *CLASS::what() const noexcept                                                                   \\<\/span><\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="preprocessor">        return what_.c_str();                                                                                  \\<\/span><\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="preprocessor">    }                                                                                                          \\<\/span><\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="preprocessor">    const char *CLASS::context() const noexcept                                                                \\<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="preprocessor">        return context_.c_str();                                                                               \\<\/span><\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="preprocessor">    }<\/span><\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;{<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    {<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;        ARG3_DECLARE_EXCEPTION(database_exception, std::exception);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        ARG3_DECLARE_EXCEPTION(no_such_column_exception, database_exception);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;        ARG3_DECLARE_EXCEPTION(record_not_found_exception, database_exception);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        ARG3_DECLARE_EXCEPTION(binding_error, database_exception);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    }<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;}<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacearg3_html"><div class="ttname"><a href="namespacearg3.html">arg3<\/a><\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:9<\/div><\/div>$/;"	a
l00001	html/html/alloc_8h_source.html	/^<a href="alloc_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_ALLOC_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_ALLOC_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;{<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;    {<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno"><a class="line" href="alloc_8h.html#a029a9982db97af5863738b553d9d9c93">   18<\/a><\/span>&#160;        T *<a class="code" href="alloc_8h.html#a029a9982db97af5863738b553d9d9c93">c_alloc<\/a>(<span class="keywordtype">size_t<\/span> num = 1)<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;            <span class="keywordtype">void<\/span> *mem = calloc(num, <span class="keyword">sizeof<\/span>(T));<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;            <span class="keywordflow">if<\/span> (mem == NULL) {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;                <span class="keywordflow">throw<\/span> std::bad_alloc();<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            }<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keywordflow">return<\/span> <span class="keyword">static_cast&lt;<\/span>T *<span class="keyword">&gt;<\/span>(mem);<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        }<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        <span class="keywordtype">void<\/span> *<a class="code" href="alloc_8h.html#a029a9982db97af5863738b553d9d9c93">c_alloc<\/a>(<span class="keywordtype">size_t<\/span> size, <span class="keywordtype">size_t<\/span> num = 1);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno"><a class="line" href="alloc_8h.html#a4ed0880bf5db1bc80e2689546555f138">   40<\/a><\/span>&#160;        T *c_alloc(T *value, <span class="keywordtype">size_t<\/span> num, <span class="keywordtype">size_t<\/span> oldSize)<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;        {<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keywordtype">void<\/span> *mem = realloc(value, <span class="keyword">sizeof<\/span>(T) * num);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="keywordflow">if<\/span> (mem == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <span class="keywordflow">throw<\/span> std::bad_alloc();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            }<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            T *val = <span class="keyword">static_cast&lt;<\/span>T *<span class="keyword">&gt;<\/span>(mem);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="comment">\/\/ make sure new values are initialized<\/span><\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordflow">for<\/span> (<span class="keywordtype">size_t<\/span> i = oldSize; i &lt; num; i++) {<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                memset(&amp;val[i], 0, <span class="keyword">sizeof<\/span>(T));<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            }<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <span class="keywordflow">return<\/span> val;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        }<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    }<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;}<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="alloc_8h_html_a029a9982db97af5863738b553d9d9c93"><div class="ttname"><a href="alloc_8h.html#a029a9982db97af5863738b553d9d9c93">arg3::db::c_alloc<\/a><\/div><div class="ttdeci">T * c_alloc(size_t num=1)<\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:18<\/div><\/div>$/;"	a
l00001	html/html/base__record_8h_source.html	/^<a href="base__record_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_BASE_RECORD_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_BASE_RECORD_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="select__query_8h.html">select_query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="modify__query_8h.html">modify_query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="schema_8h.html">schema.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;{<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    {<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        <span class="keyword">class <\/span>record_db;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        <span class="keyword">class <\/span>row;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html">   23<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="base__record_8h.html#ad6fb27e818811ae3ef07e187234274d3">   31<\/a><\/span>&#160;        <span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> <a class="code" href="base__record_8h.html#ad6fb27e818811ae3ef07e187234274d3">find_all<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> <span class="keyword">typename<\/span> base_record&lt;T&gt;::callback &amp;funk)<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        {<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(schema);<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keyword">auto<\/span> results = query.execute();<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordflow">if<\/span> (!results.is_valid()) <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> : results) {<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                <span class="keywordflow">if<\/span> (<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>.is_valid()) {<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                    <span class="keyword">auto<\/span> record = make_shared&lt;T&gt;();<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                    record-&gt;init(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                    funk(record);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                }<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            }<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        }<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno"><a class="line" href="base__record_8h.html#ae8366ab9ce16bceadfdfdf8ee135a570">   54<\/a><\/span>&#160;        <span class="keyword">inline<\/span> std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="base__record_8h.html#ad6fb27e818811ae3ef07e187234274d3">find_all<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>)<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        {<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="comment">\/* convert sql rows to objects *\/<\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; items;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            db::find_all&lt;T&gt;(schema, [&amp;](std::shared_ptr&lt;T&gt; record) { items.push_back(record); });<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <span class="keywordflow">return<\/span> items;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;        }<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno"><a class="line" href="base__record_8h.html#a0e9f94625d0058ed00a4edc1629e513d">   72<\/a><\/span>&#160;        <span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> <a class="code" href="base__record_8h.html#a0e9f94625d0058ed00a4edc1629e513d">find_by<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value,<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;                            <span class="keyword">const<\/span> <span class="keyword">typename<\/span> base_record&lt;T&gt;::callback &amp;funk)<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        {<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(schema);<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            query.where(name + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, value);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            <span class="keyword">auto<\/span> results = query.execute();<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <span class="keywordflow">if<\/span> (!results.is_valid()) <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;            <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> : results) {<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;                <span class="keywordflow">if<\/span> (<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>.is_valid()) {<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;                    <span class="keyword">auto<\/span> record = make_shared&lt;T&gt;();<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;                    record-&gt;init(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;                    funk(record);<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;                }<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            }<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;        }<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno"><a class="line" href="base__record_8h.html#a9c506fb445aa2b52cec78cdee4190ecb">  102<\/a><\/span>&#160;        <span class="keyword">inline<\/span> std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="base__record_8h.html#a0e9f94625d0058ed00a4edc1629e513d">find_by<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;        {<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            <span class="comment">\/* convert sql rows to objects *\/<\/span><\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            std::vector&lt;shared_ptr&lt;T&gt;&gt; items;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            db::find_by&lt;T&gt;(schema, name, value, [&amp;](std::shared_ptr&lt;T&gt; record) { items.push_back(record); });<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            <span class="keywordflow">return<\/span> items;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;        }<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a><\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;        {<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a> schema_type;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <span class="keyword">typedef<\/span> std::function&lt;void(std::shared_ptr&lt;T&gt;)&gt; callback;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;            std::shared_ptr&lt;schema_type&gt; schema_;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;            std::unordered_map&lt;std::string, sql_value&gt; values_;<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;            std::string idColumnName_;<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00133"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#accbdfa48ca52ae6484dbed9e589192b0">  133<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#accbdfa48ca52ae6484dbed9e589192b0">base_record<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tablename, <span class="keyword">const<\/span> std::string &amp;idColumnName)<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;                : schema_(db-&gt;schemas()-&gt;<a class="code" href="classarg3_1_1db_1_1base__record.html#a61ff8a4161e698a2e6d587d01d353669">get<\/a>(tablename)), idColumnName_(idColumnName)<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;            {<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;                <span class="keywordflow">if<\/span> (schema_ == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;                    <span class="keywordflow">throw<\/span> database_exception(<span class="stringliteral">&quot;no schema for record &quot;<\/span> + tablename);<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;                }<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;            }<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div><div class="line"><a name="l00145"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#acac4b358fc5f72a6aee0c8038b14f8b3">  145<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#acac4b358fc5f72a6aee0c8038b14f8b3">base_record<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema_type&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;columnName) : schema_(schema), idColumnName_(columnName)<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;            {<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;                <span class="keywordflow">if<\/span> (schema_ == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;                    <span class="keywordflow">throw<\/span> database_exception(<span class="stringliteral">&quot;no schema for record&quot;<\/span>);<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;                }<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;            }<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> V&gt;<\/div><div class="line"><a name="l00158"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a9d377c109d0ebddfaca0a5e38fe55876">  158<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a9d377c109d0ebddfaca0a5e38fe55876">base_record<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema_type&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;columnName, V value)<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>(schema, columnName)<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;            {<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;                <span class="keyword">set<\/span>(idColumnName_, value);<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a76122cffa79e30009de26b9da5ca4e3f">refresh<\/a>();  <span class="comment">\/\/ load up from database<\/span><\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;            }<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> V&gt;<\/div><div class="line"><a name="l00172"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a007875446e1db5af07a9332eac195401">  172<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a007875446e1db5af07a9332eac195401">base_record<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::string &amp;columnName, <span class="keyword">const<\/span> V &amp;value)<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>(db, tableName, columnName)<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;            {<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;                <span class="keyword">set<\/span>(idColumnName_, value);<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a76122cffa79e30009de26b9da5ca4e3f">refresh<\/a>();<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;            }<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;<\/div><div class="line"><a name="l00182"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#ada40bb5a8795de1170b830a721bbc869">  182<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#ada40bb5a8795de1170b830a721bbc869">base_record<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema_type&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;columnName, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>(schema, columnName)<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;            {<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">init<\/a>(values);<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;            }<\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;<\/div><div class="line"><a name="l00191"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a8860f80296c9fa70fb6da8b094837f46">  191<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a8860f80296c9fa70fb6da8b094837f46">base_record<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::string &amp;columnName, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>(db, tableName, columnName)<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;            {<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">init<\/a>(values);<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;            }<\/div><div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;<\/div><div class="line"><a name="l00200"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a9ff7dad214774619b6bc7725ac8fc527">  200<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a9ff7dad214774619b6bc7725ac8fc527">base_record<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;other) : schema_(other.schema_), values_(other.values_), idColumnName_(other.idColumnName_)<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;            {<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;            }<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;<\/div><div class="line"><a name="l00207"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a5e5c8039b6ce729b44fbb6249e983dfb">  207<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html#a5e5c8039b6ce729b44fbb6249e983dfb">base_record<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;                : schema_(<a class="code" href="namespacestd.html">std<\/a>::move(other.schema_)), values_(<a class="code" href="namespacestd.html">std<\/a>::move(other.values_)), idColumnName_(<a class="code" href="namespacestd.html">std<\/a>::move(other.idColumnName_))<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;            {<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;            }<\/div><div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;<\/div><div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a>()<\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;            {<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;            }<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div><div class="line"><a name="l00219"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#ae4a44471a29454464b107ba12d36c600">  219<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1base__record.html#ae4a44471a29454464b107ba12d36c600">operator=<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;other)<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;            {<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;                values_ = other.values_;<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;                schema_ = other.schema_;<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;                idColumnName_ = other.idColumnName_;<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;            }<\/div><div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;<\/div><div class="line"><a name="l00231"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#abf2ae79840ecb63a75314698ab1a3663">  231<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1base__record.html#abf2ae79840ecb63a75314698ab1a3663">operator=<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html">base_record<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;            {<\/div><div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;                values_ = std::move(other.values_);<\/div><div class="line"><a name="l00234"><\/a><span class="lineno">  234<\/span>&#160;                schema_ = std::move(other.schema_);<\/div><div class="line"><a name="l00235"><\/a><span class="lineno">  235<\/span>&#160;                idColumnName_ = std::move(other.idColumnName_);<\/div><div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;<\/div><div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;            }<\/div><div class="line"><a name="l00239"><\/a><span class="lineno">  239<\/span>&#160;<\/div><div class="line"><a name="l00243"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#ad5b4180ae469db6cec87c4efdb9629a0">  243<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#ad5b4180ae469db6cec87c4efdb9629a0">set_id<\/a>(<span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;            {<\/div><div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;                <span class="keyword">set<\/span>(idColumnName_, value);<\/div><div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;            }<\/div><div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;<\/div><div class="line"><a name="l00251"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#aa2357706ab9e9c2bd8f98ac726f60ee4">  251<\/a><\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1base__record.html#aa2357706ab9e9c2bd8f98ac726f60ee4">id<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00253"><\/a><span class="lineno">  253<\/span>&#160;                <span class="keywordflow">return<\/span> <span class="keyword">get<\/span>(idColumnName_);<\/div><div class="line"><a name="l00254"><\/a><span class="lineno">  254<\/span>&#160;            }<\/div><div class="line"><a name="l00255"><\/a><span class="lineno">  255<\/span>&#160;<\/div><div class="line"><a name="l00259"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">  259<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">init<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00260"><\/a><span class="lineno">  260<\/span>&#160;            {<\/div><div class="line"><a name="l00261"><\/a><span class="lineno">  261<\/span>&#160;                <span class="keywordflow">if<\/span> (!values.is_valid()) {<\/div><div class="line"><a name="l00262"><\/a><span class="lineno">  262<\/span>&#160;                    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00263"><\/a><span class="lineno">  263<\/span>&#160;                }<\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;<\/div><div class="line"><a name="l00265"><\/a><span class="lineno">  265<\/span>&#160;                <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> v = values.begin(); v != values.end(); v++) {<\/div><div class="line"><a name="l00266"><\/a><span class="lineno">  266<\/span>&#160;                    <span class="keyword">set<\/span>(v.name(), v-&gt;to_value());<\/div><div class="line"><a name="l00267"><\/a><span class="lineno">  267<\/span>&#160;                }<\/div><div class="line"><a name="l00268"><\/a><span class="lineno">  268<\/span>&#160;<\/div><div class="line"><a name="l00269"><\/a><span class="lineno">  269<\/span>&#160;                on_record_init(values);<\/div><div class="line"><a name="l00270"><\/a><span class="lineno">  270<\/span>&#160;            }<\/div><div class="line"><a name="l00271"><\/a><span class="lineno">  271<\/span>&#160;<\/div><div class="line"><a name="l00272"><\/a><span class="lineno">  272<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> on_record_init(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00273"><\/a><span class="lineno">  273<\/span>&#160;            {<\/div><div class="line"><a name="l00274"><\/a><span class="lineno">  274<\/span>&#160;            }<\/div><div class="line"><a name="l00275"><\/a><span class="lineno">  275<\/span>&#160;<\/div><div class="line"><a name="l00280"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a71341423b284a7961192b5f521557df6">  280<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a71341423b284a7961192b5f521557df6">is_valid<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00281"><\/a><span class="lineno">  281<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00282"><\/a><span class="lineno">  282<\/span>&#160;                <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>()-&gt;is_valid();<\/div><div class="line"><a name="l00283"><\/a><span class="lineno">  283<\/span>&#160;            }<\/div><div class="line"><a name="l00284"><\/a><span class="lineno">  284<\/span>&#160;<\/div><div class="line"><a name="l00288"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a498af4ebd0de45bd4e28fcc19c25f32b">  288<\/a><\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1base__record.html#a498af4ebd0de45bd4e28fcc19c25f32b">id_column_name<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00289"><\/a><span class="lineno">  289<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00290"><\/a><span class="lineno">  290<\/span>&#160;                <span class="keywordflow">return<\/span> idColumnName_;<\/div><div class="line"><a name="l00291"><\/a><span class="lineno">  291<\/span>&#160;            }<\/div><div class="line"><a name="l00292"><\/a><span class="lineno">  292<\/span>&#160;<\/div><div class="line"><a name="l00296"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">  296<\/a><\/span>&#160;            std::shared_ptr&lt;schema_type&gt; <a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00297"><\/a><span class="lineno">  297<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00298"><\/a><span class="lineno">  298<\/span>&#160;<\/div><div class="line"><a name="l00299"><\/a><span class="lineno">  299<\/span>&#160;                <span class="keywordflow">if<\/span> (schema_ != <span class="keyword">nullptr<\/span> &amp;&amp; !schema_-&gt;is_valid()) {<\/div><div class="line"><a name="l00300"><\/a><span class="lineno">  300<\/span>&#160;                    schema_-&gt;init();<\/div><div class="line"><a name="l00301"><\/a><span class="lineno">  301<\/span>&#160;                }<\/div><div class="line"><a name="l00302"><\/a><span class="lineno">  302<\/span>&#160;<\/div><div class="line"><a name="l00303"><\/a><span class="lineno">  303<\/span>&#160;                <span class="keywordflow">return<\/span> schema_;<\/div><div class="line"><a name="l00304"><\/a><span class="lineno">  304<\/span>&#160;            }<\/div><div class="line"><a name="l00305"><\/a><span class="lineno">  305<\/span>&#160;<\/div><div class="line"><a name="l00309"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a7817b1d5ab99a5b87aa6085f40612c2e">  309<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a7817b1d5ab99a5b87aa6085f40612c2e">exists<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00310"><\/a><span class="lineno">  310<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00311"><\/a><span class="lineno">  311<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(idColumnName_)) {<\/div><div class="line"><a name="l00312"><\/a><span class="lineno">  312<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00313"><\/a><span class="lineno">  313<\/span>&#160;                }<\/div><div class="line"><a name="l00314"><\/a><span class="lineno">  314<\/span>&#160;<\/div><div class="line"><a name="l00315"><\/a><span class="lineno">  315<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00316"><\/a><span class="lineno">  316<\/span>&#160;<\/div><div class="line"><a name="l00317"><\/a><span class="lineno">  317<\/span>&#160;                query.where(idColumnName_ + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00318"><\/a><span class="lineno">  318<\/span>&#160;<\/div><div class="line"><a name="l00319"><\/a><span class="lineno">  319<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, <span class="keyword">get<\/span>(idColumnName_));<\/div><div class="line"><a name="l00320"><\/a><span class="lineno">  320<\/span>&#160;<\/div><div class="line"><a name="l00321"><\/a><span class="lineno">  321<\/span>&#160;                <span class="keywordflow">return<\/span> query.count() &gt; 0;<\/div><div class="line"><a name="l00322"><\/a><span class="lineno">  322<\/span>&#160;            }<\/div><div class="line"><a name="l00323"><\/a><span class="lineno">  323<\/span>&#160;<\/div><div class="line"><a name="l00328"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a5e4c561423bbbb7c794adc7ffe14016e">  328<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a5e4c561423bbbb7c794adc7ffe14016e">save<\/a>()<\/div><div class="line"><a name="l00329"><\/a><span class="lineno">  329<\/span>&#160;            {<\/div><div class="line"><a name="l00330"><\/a><span class="lineno">  330<\/span>&#160;                <span class="keywordtype">size_t<\/span> index = 0;<\/div><div class="line"><a name="l00331"><\/a><span class="lineno">  331<\/span>&#160;                <span class="keywordtype">bool<\/span> rval = <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00332"><\/a><span class="lineno">  332<\/span>&#160;                <span class="keyword">auto<\/span> cols_to_save = available_columns();<\/div><div class="line"><a name="l00333"><\/a><span class="lineno">  333<\/span>&#160;<\/div><div class="line"><a name="l00334"><\/a><span class="lineno">  334<\/span>&#160;                <span class="keywordflow">if<\/span> (<a class="code" href="classarg3_1_1db_1_1base__record.html#a7817b1d5ab99a5b87aa6085f40612c2e">exists<\/a>()) {<\/div><div class="line"><a name="l00335"><\/a><span class="lineno">  335<\/span>&#160;                    <a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), cols_to_save);<\/div><div class="line"><a name="l00336"><\/a><span class="lineno">  336<\/span>&#160;<\/div><div class="line"><a name="l00337"><\/a><span class="lineno">  337<\/span>&#160;                    query.<a class="code" href="classarg3_1_1db_1_1update__query.html#af5fbab05e4c12aa572a7e9f1a355a9d0">where<\/a>(idColumnName_ + <span class="stringliteral">&quot; = $&quot;<\/span> + to_string(cols_to_save.size() + 1));<\/div><div class="line"><a name="l00338"><\/a><span class="lineno">  338<\/span>&#160;<\/div><div class="line"><a name="l00339"><\/a><span class="lineno">  339<\/span>&#160;                    index = bind_columns_to_query(query, cols_to_save);<\/div><div class="line"><a name="l00340"><\/a><span class="lineno">  340<\/span>&#160;<\/div><div class="line"><a name="l00341"><\/a><span class="lineno">  341<\/span>&#160;                    <span class="comment">\/\/ add the where parameter<\/span><\/div><div class="line"><a name="l00342"><\/a><span class="lineno">  342<\/span>&#160;                    query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(++index, <span class="keyword">get<\/span>(idColumnName_));<\/div><div class="line"><a name="l00343"><\/a><span class="lineno">  343<\/span>&#160;<\/div><div class="line"><a name="l00344"><\/a><span class="lineno">  344<\/span>&#160;                    rval = query.<a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00345"><\/a><span class="lineno">  345<\/span>&#160;                } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00346"><\/a><span class="lineno">  346<\/span>&#160;                    <a class="code" href="classarg3_1_1db_1_1insert__query.html">insert_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), cols_to_save);<\/div><div class="line"><a name="l00347"><\/a><span class="lineno">  347<\/span>&#160;<\/div><div class="line"><a name="l00348"><\/a><span class="lineno">  348<\/span>&#160;                    bind_columns_to_query(query, cols_to_save);<\/div><div class="line"><a name="l00349"><\/a><span class="lineno">  349<\/span>&#160;<\/div><div class="line"><a name="l00350"><\/a><span class="lineno">  350<\/span>&#160;                    rval = query.<a class="code" href="classarg3_1_1db_1_1insert__query.html#a1794ad08338721f1d3ffd8ded76f004a">execute<\/a>();<\/div><div class="line"><a name="l00351"><\/a><span class="lineno">  351<\/span>&#160;<\/div><div class="line"><a name="l00352"><\/a><span class="lineno">  352<\/span>&#160;                    <span class="keywordflow">if<\/span> (rval) {<\/div><div class="line"><a name="l00353"><\/a><span class="lineno">  353<\/span>&#160;                        <span class="comment">\/\/ set the new id<\/span><\/div><div class="line"><a name="l00354"><\/a><span class="lineno">  354<\/span>&#160;                        <span class="keyword">set<\/span>(idColumnName_, query.<a class="code" href="classarg3_1_1db_1_1insert__query.html#ae87029031cfd2762c898dc0b5e0a9a62">last_insert_id<\/a>());<\/div><div class="line"><a name="l00355"><\/a><span class="lineno">  355<\/span>&#160;                    }<\/div><div class="line"><a name="l00356"><\/a><span class="lineno">  356<\/span>&#160;                }<\/div><div class="line"><a name="l00357"><\/a><span class="lineno">  357<\/span>&#160;<\/div><div class="line"><a name="l00358"><\/a><span class="lineno">  358<\/span>&#160;                <span class="keywordflow">return<\/span> rval;<\/div><div class="line"><a name="l00359"><\/a><span class="lineno">  359<\/span>&#160;            }<\/div><div class="line"><a name="l00360"><\/a><span class="lineno">  360<\/span>&#160;<\/div><div class="line"><a name="l00365"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a61ff8a4161e698a2e6d587d01d353669">  365<\/a><\/span>&#160;            sql_value <span class="keyword">get<\/span>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span><\/div><div class="line"><a name="l00366"><\/a><span class="lineno">  366<\/span>&#160;            {<\/div><div class="line"><a name="l00367"><\/a><span class="lineno">  367<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(name)) {<\/div><div class="line"><a name="l00368"><\/a><span class="lineno">  368<\/span>&#160;                    <span class="keywordflow">return<\/span> <a class="code" href="sql__value_8h.html#a08bdb77f401be0f94e9bcd2f0dd4b823">sql_null<\/a>;<\/div><div class="line"><a name="l00369"><\/a><span class="lineno">  369<\/span>&#160;                }<\/div><div class="line"><a name="l00370"><\/a><span class="lineno">  370<\/span>&#160;<\/div><div class="line"><a name="l00371"><\/a><span class="lineno">  371<\/span>&#160;                <span class="keywordflow">return<\/span> values_.at(name);<\/div><div class="line"><a name="l00372"><\/a><span class="lineno">  372<\/span>&#160;            }<\/div><div class="line"><a name="l00373"><\/a><span class="lineno">  373<\/span>&#160;<\/div><div class="line"><a name="l00380"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">  380<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(<span class="keyword">const<\/span> std::string &amp;name)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00381"><\/a><span class="lineno">  381<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00382"><\/a><span class="lineno">  382<\/span>&#160;                <span class="keywordflow">return<\/span> values_.size() &gt; 0 &amp;&amp; values_.count(name) &gt; 0;<\/div><div class="line"><a name="l00383"><\/a><span class="lineno">  383<\/span>&#160;            }<\/div><div class="line"><a name="l00384"><\/a><span class="lineno">  384<\/span>&#160;<\/div><div class="line"><a name="l00390"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#adc9845aa30188b1213318d956d9c027f">  390<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <span class="keyword">set<\/span>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00391"><\/a><span class="lineno">  391<\/span>&#160;            {<\/div><div class="line"><a name="l00392"><\/a><span class="lineno">  392<\/span>&#160;                values_[name] = value;<\/div><div class="line"><a name="l00393"><\/a><span class="lineno">  393<\/span>&#160;            }<\/div><div class="line"><a name="l00394"><\/a><span class="lineno">  394<\/span>&#160;<\/div><div class="line"><a name="l00399"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a3738524bb4095b1c78ff91bfd79a6dd7">  399<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a3738524bb4095b1c78ff91bfd79a6dd7">unset<\/a>(<span class="keyword">const<\/span> std::string &amp;name)<\/div><div class="line"><a name="l00400"><\/a><span class="lineno">  400<\/span>&#160;            {<\/div><div class="line"><a name="l00401"><\/a><span class="lineno">  401<\/span>&#160;                values_.erase(name);<\/div><div class="line"><a name="l00402"><\/a><span class="lineno">  402<\/span>&#160;            }<\/div><div class="line"><a name="l00403"><\/a><span class="lineno">  403<\/span>&#160;<\/div><div class="line"><a name="l00408"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a00a57aaed06d95ee429e67055cb99a3c">  408<\/a><\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="classarg3_1_1db_1_1base__record.html#a00a57aaed06d95ee429e67055cb99a3c">find_all<\/a>()<\/div><div class="line"><a name="l00409"><\/a><span class="lineno">  409<\/span>&#160;            {<\/div><div class="line"><a name="l00410"><\/a><span class="lineno">  410<\/span>&#160;                <span class="keywordflow">return<\/span> arg3::db::find_all&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00411"><\/a><span class="lineno">  411<\/span>&#160;            }<\/div><div class="line"><a name="l00412"><\/a><span class="lineno">  412<\/span>&#160;<\/div><div class="line"><a name="l00417"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a81526c751d8a179cb6b14cd12aef4e65">  417<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a81526c751d8a179cb6b14cd12aef4e65">find_all<\/a>(<span class="keyword">const<\/span> callback &amp;funk)<\/div><div class="line"><a name="l00418"><\/a><span class="lineno">  418<\/span>&#160;            {<\/div><div class="line"><a name="l00419"><\/a><span class="lineno">  419<\/span>&#160;                arg3::db::find_all&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), funk);<\/div><div class="line"><a name="l00420"><\/a><span class="lineno">  420<\/span>&#160;            }<\/div><div class="line"><a name="l00421"><\/a><span class="lineno">  421<\/span>&#160;<\/div><div class="line"><a name="l00425"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a30b914a1f14c7b4e80bf715873bc6c1f">  425<\/a><\/span>&#160;            std::shared_ptr&lt;T&gt; <a class="code" href="classarg3_1_1db_1_1base__record.html#a30b914a1f14c7b4e80bf715873bc6c1f">find_by_id<\/a>(<span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00426"><\/a><span class="lineno">  426<\/span>&#160;            {<\/div><div class="line"><a name="l00427"><\/a><span class="lineno">  427<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00428"><\/a><span class="lineno">  428<\/span>&#160;<\/div><div class="line"><a name="l00429"><\/a><span class="lineno">  429<\/span>&#160;                query.where(idColumnName_ + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00430"><\/a><span class="lineno">  430<\/span>&#160;<\/div><div class="line"><a name="l00431"><\/a><span class="lineno">  431<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, value);<\/div><div class="line"><a name="l00432"><\/a><span class="lineno">  432<\/span>&#160;<\/div><div class="line"><a name="l00433"><\/a><span class="lineno">  433<\/span>&#160;                <span class="keyword">auto<\/span> results = query.execute();<\/div><div class="line"><a name="l00434"><\/a><span class="lineno">  434<\/span>&#160;<\/div><div class="line"><a name="l00435"><\/a><span class="lineno">  435<\/span>&#160;                <span class="keyword">auto<\/span> it = results.<a class="code" href="classarg3_1_1db_1_1resultset.html#a31b572e1b4957ed1923a2a20b947b7a3">begin<\/a>();<\/div><div class="line"><a name="l00436"><\/a><span class="lineno">  436<\/span>&#160;<\/div><div class="line"><a name="l00437"><\/a><span class="lineno">  437<\/span>&#160;                <span class="keywordflow">if<\/span> (it != results.end()) {<\/div><div class="line"><a name="l00438"><\/a><span class="lineno">  438<\/span>&#160;                    <span class="keywordflow">return<\/span> make_shared&lt;T&gt;(*it);<\/div><div class="line"><a name="l00439"><\/a><span class="lineno">  439<\/span>&#160;                }<\/div><div class="line"><a name="l00440"><\/a><span class="lineno">  440<\/span>&#160;<\/div><div class="line"><a name="l00441"><\/a><span class="lineno">  441<\/span>&#160;                <span class="keywordflow">throw<\/span> record_not_found_exception();<\/div><div class="line"><a name="l00442"><\/a><span class="lineno">  442<\/span>&#160;            }<\/div><div class="line"><a name="l00443"><\/a><span class="lineno">  443<\/span>&#160;<\/div><div class="line"><a name="l00450"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a46c1115f7120f6e4541af0e9a38b7ad3">  450<\/a><\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="classarg3_1_1db_1_1base__record.html#a46c1115f7120f6e4541af0e9a38b7ad3">find_by<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value)<\/div><div class="line"><a name="l00451"><\/a><span class="lineno">  451<\/span>&#160;            {<\/div><div class="line"><a name="l00452"><\/a><span class="lineno">  452<\/span>&#160;                <span class="keywordflow">return<\/span> arg3::db::find_by&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), name, value);<\/div><div class="line"><a name="l00453"><\/a><span class="lineno">  453<\/span>&#160;            }<\/div><div class="line"><a name="l00460"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#aa96e898eff350b54ea698a985b0fa14b">  460<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#aa96e898eff350b54ea698a985b0fa14b">find_by<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> sql_value &amp;value, <span class="keyword">const<\/span> callback &amp;funk)<\/div><div class="line"><a name="l00461"><\/a><span class="lineno">  461<\/span>&#160;            {<\/div><div class="line"><a name="l00462"><\/a><span class="lineno">  462<\/span>&#160;                arg3::db::find_by&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>(), name, value, funk);<\/div><div class="line"><a name="l00463"><\/a><span class="lineno">  463<\/span>&#160;            }<\/div><div class="line"><a name="l00464"><\/a><span class="lineno">  464<\/span>&#160;<\/div><div class="line"><a name="l00469"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#a76122cffa79e30009de26b9da5ca4e3f">  469<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#a76122cffa79e30009de26b9da5ca4e3f">refresh<\/a>()<\/div><div class="line"><a name="l00470"><\/a><span class="lineno">  470<\/span>&#160;            {<\/div><div class="line"><a name="l00471"><\/a><span class="lineno">  471<\/span>&#160;                <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#aace7c21c3bde447f7476d76401b620fa">refresh_by<\/a>(idColumnName_);<\/div><div class="line"><a name="l00472"><\/a><span class="lineno">  472<\/span>&#160;            }<\/div><div class="line"><a name="l00473"><\/a><span class="lineno">  473<\/span>&#160;<\/div><div class="line"><a name="l00479"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#aace7c21c3bde447f7476d76401b620fa">  479<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#aace7c21c3bde447f7476d76401b620fa">refresh_by<\/a>(<span class="keyword">const<\/span> std::string &amp;name)<\/div><div class="line"><a name="l00480"><\/a><span class="lineno">  480<\/span>&#160;            {<\/div><div class="line"><a name="l00481"><\/a><span class="lineno">  481<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(name)) {<\/div><div class="line"><a name="l00482"><\/a><span class="lineno">  482<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00483"><\/a><span class="lineno">  483<\/span>&#160;                }<\/div><div class="line"><a name="l00484"><\/a><span class="lineno">  484<\/span>&#160;<\/div><div class="line"><a name="l00485"><\/a><span class="lineno">  485<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00486"><\/a><span class="lineno">  486<\/span>&#160;<\/div><div class="line"><a name="l00487"><\/a><span class="lineno">  487<\/span>&#160;                query.where(name + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00488"><\/a><span class="lineno">  488<\/span>&#160;<\/div><div class="line"><a name="l00489"><\/a><span class="lineno">  489<\/span>&#160;                query.limit(<span class="stringliteral">&quot;1&quot;<\/span>);<\/div><div class="line"><a name="l00490"><\/a><span class="lineno">  490<\/span>&#160;<\/div><div class="line"><a name="l00491"><\/a><span class="lineno">  491<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, <span class="keyword">get<\/span>(name));<\/div><div class="line"><a name="l00492"><\/a><span class="lineno">  492<\/span>&#160;<\/div><div class="line"><a name="l00493"><\/a><span class="lineno">  493<\/span>&#160;                <span class="keyword">auto<\/span> result = query.execute();<\/div><div class="line"><a name="l00494"><\/a><span class="lineno">  494<\/span>&#160;<\/div><div class="line"><a name="l00495"><\/a><span class="lineno">  495<\/span>&#160;                <span class="keywordflow">if<\/span> (!result.next()) {<\/div><div class="line"><a name="l00496"><\/a><span class="lineno">  496<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00497"><\/a><span class="lineno">  497<\/span>&#160;                }<\/div><div class="line"><a name="l00498"><\/a><span class="lineno">  498<\/span>&#160;<\/div><div class="line"><a name="l00499"><\/a><span class="lineno">  499<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1base__record.html#a022c048f249543383fa5ba8aaeb3ebc7">init<\/a>(*result);<\/div><div class="line"><a name="l00500"><\/a><span class="lineno">  500<\/span>&#160;<\/div><div class="line"><a name="l00501"><\/a><span class="lineno">  501<\/span>&#160;                <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>;<\/div><div class="line"><a name="l00502"><\/a><span class="lineno">  502<\/span>&#160;            }<\/div><div class="line"><a name="l00503"><\/a><span class="lineno">  503<\/span>&#160;<\/div><div class="line"><a name="l00507"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1base__record.html#af3189184f3c1aba43a661c10024ba69a">  507<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#af3189184f3c1aba43a661c10024ba69a">de1ete<\/a>()<\/div><div class="line"><a name="l00508"><\/a><span class="lineno">  508<\/span>&#160;            {<\/div><div class="line"><a name="l00509"><\/a><span class="lineno">  509<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(idColumnName_)) {<\/div><div class="line"><a name="l00510"><\/a><span class="lineno">  510<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00511"><\/a><span class="lineno">  511<\/span>&#160;                }<\/div><div class="line"><a name="l00512"><\/a><span class="lineno">  512<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1delete__query.html">delete_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>());<\/div><div class="line"><a name="l00513"><\/a><span class="lineno">  513<\/span>&#160;<\/div><div class="line"><a name="l00514"><\/a><span class="lineno">  514<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1update__query.html#af5fbab05e4c12aa572a7e9f1a355a9d0">where<\/a>(idColumnName_ + <span class="stringliteral">&quot; = $1&quot;<\/span>);<\/div><div class="line"><a name="l00515"><\/a><span class="lineno">  515<\/span>&#160;<\/div><div class="line"><a name="l00516"><\/a><span class="lineno">  516<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(1, <span class="keywordtype">id<\/span>());<\/div><div class="line"><a name="l00517"><\/a><span class="lineno">  517<\/span>&#160;<\/div><div class="line"><a name="l00518"><\/a><span class="lineno">  518<\/span>&#160;                <span class="keywordflow">return<\/span> query.<a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00519"><\/a><span class="lineno">  519<\/span>&#160;            }<\/div><div class="line"><a name="l00520"><\/a><span class="lineno">  520<\/span>&#160;<\/div><div class="line"><a name="l00521"><\/a><span class="lineno">  521<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00522"><\/a><span class="lineno">  522<\/span>&#160;            std::vector&lt;std::string&gt; available_columns()<\/div><div class="line"><a name="l00523"><\/a><span class="lineno">  523<\/span>&#160;            {<\/div><div class="line"><a name="l00524"><\/a><span class="lineno">  524<\/span>&#160;                std::vector&lt;std::string&gt; columns = <a class="code" href="classarg3_1_1db_1_1base__record.html#a8fe6893f126529ee8292571eee53b715">schema<\/a>()-&gt;column_names();<\/div><div class="line"><a name="l00525"><\/a><span class="lineno">  525<\/span>&#160;                std::vector&lt;std::string&gt; values(columns.size());<\/div><div class="line"><a name="l00526"><\/a><span class="lineno">  526<\/span>&#160;                <span class="keyword">auto<\/span> it = std::copy_if(columns.begin(), columns.end(), values.begin(), [&amp;](<span class="keyword">const<\/span> std::string &amp;val) { <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1base__record.html#ae9809ea32a28163215541c5729a43039">has<\/a>(val); });<\/div><div class="line"><a name="l00527"><\/a><span class="lineno">  527<\/span>&#160;                values.resize(std::distance(values.begin(), it));<\/div><div class="line"><a name="l00528"><\/a><span class="lineno">  528<\/span>&#160;                <span class="keywordflow">return<\/span> values;<\/div><div class="line"><a name="l00529"><\/a><span class="lineno">  529<\/span>&#160;            }<\/div><div class="line"><a name="l00530"><\/a><span class="lineno">  530<\/span>&#160;<\/div><div class="line"><a name="l00531"><\/a><span class="lineno">  531<\/span>&#160;            <span class="keywordtype">size_t<\/span> bind_columns_to_query(<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns)<\/div><div class="line"><a name="l00532"><\/a><span class="lineno">  532<\/span>&#160;            {<\/div><div class="line"><a name="l00533"><\/a><span class="lineno">  533<\/span>&#160;                <span class="keywordtype">size_t<\/span> index = 0;<\/div><div class="line"><a name="l00534"><\/a><span class="lineno">  534<\/span>&#160;<\/div><div class="line"><a name="l00535"><\/a><span class="lineno">  535<\/span>&#160;                <span class="comment">\/\/ bind the column values<\/span><\/div><div class="line"><a name="l00536"><\/a><span class="lineno">  536<\/span>&#160;                <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> : columns) {<\/div><div class="line"><a name="l00537"><\/a><span class="lineno">  537<\/span>&#160;                    <span class="keyword">auto<\/span> value = <span class="keyword">get<\/span>(<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00538"><\/a><span class="lineno">  538<\/span>&#160;                    query.<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(++index, value);<\/div><div class="line"><a name="l00539"><\/a><span class="lineno">  539<\/span>&#160;                }<\/div><div class="line"><a name="l00540"><\/a><span class="lineno">  540<\/span>&#160;<\/div><div class="line"><a name="l00541"><\/a><span class="lineno">  541<\/span>&#160;                <span class="keywordflow">return<\/span> index;<\/div><div class="line"><a name="l00542"><\/a><span class="lineno">  542<\/span>&#160;            }<\/div><div class="line"><a name="l00543"><\/a><span class="lineno">  543<\/span>&#160;        };<\/div><div class="line"><a name="l00544"><\/a><span class="lineno">  544<\/span>&#160;    }<\/div><div class="line"><a name="l00545"><\/a><span class="lineno">  545<\/span>&#160;}<\/div><div class="line"><a name="l00546"><\/a><span class="lineno">  546<\/span>&#160;<\/div><div class="line"><a name="l00547"><\/a><span class="lineno">  547<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1base__record_html_ae4a44471a29454464b107ba12d36c600"><div class="ttname"><a href="classarg3_1_1db_1_1base__record.html#ae4a44471a29454464b107ba12d36c600">arg3::db::base_record::operator=<\/a><\/div><div class="ttdeci">base_record &amp; operator=(const base_record &amp;other)<\/div><div class="ttdef"><b>Definition:<\/b> base_record.h:219<\/div><\/div>$/;"	a
l00001	html/html/bindable_8h_source.html	/^<a href="bindable_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_BINDABLE_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_BINDABLE_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;{<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;    {<\/div><div class="line"><a name="l00017"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1bindable.html">   17<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;        {<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value) = 0;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value) = 0;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value) = 0;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1) = 0;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1) = 0;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value) = 0;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value) = 0;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        };<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;    }<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;}<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacearg3_html"><div class="ttname"><a href="namespacearg3.html">arg3<\/a><\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:9<\/div><\/div>$/;"	a
l00001	html/html/column_8h_source.html	/^<a href="column_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_COLUMN_VALUE_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_COLUMN_VALUE_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;cassert&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="exception_8h.html">exception.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;{<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1column__impl.html">   22<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a>(<a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html#ad23333c46bc9a6861424e419d781df70">is_valid<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keyword">virtual<\/span> sql_value <a class="code" href="classarg3_1_1db_1_1column__impl.html#ae66d5e2df2a0d7916879036064be2157">to_value<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1column__impl.html#a9a78adbfd1489aa0f0897db9aaadb553">name<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;        };<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1column.html">   53<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1column.html">column<\/a><\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;        {<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">class<\/span> A, <span class="keyword">class<\/span> B, <span class="keyword">class<\/span> C&gt;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            std::shared_ptr&lt;column_impl&gt; impl_;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>();<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;column_impl&gt; &amp;impl);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;other);<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;other);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html#ad23333c46bc9a6861424e419d781df70">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1column__impl.html#ae66d5e2df2a0d7916879036064be2157">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1column__impl.html#a9a78adbfd1489aa0f0897db9aaadb553">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            std::shared_ptr&lt;column_impl&gt; impl() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;        };<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;    }<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;}<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1column_html"><div class="ttname"><a href="classarg3_1_1db_1_1column.html">arg3::db::column<\/a><\/div><div class="ttdef"><b>Definition:<\/b> column.h:53<\/div><\/div>$/;"	a
l00001	html/html/exception_8h_source.html	/^<a href="exception_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_EXCEPTION_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_EXCEPTION_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define ARG3_DECLARE_EXCEPTION(CLASS, BASE)                         \\<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">    class CLASS : public BASE                                       \\<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">    {                                                               \\<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">       private:                                                     \\<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">        std::string what_;                                          \\<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">        std::string context_;                                       \\<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">                                                                    \\<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">       public:                                                      \\<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="preprocessor">        CLASS(const std::string &amp;what);                             \\<\/span><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="preprocessor">        CLASS(const std::string &amp;what, const std::string &amp;context); \\<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="preprocessor">        CLASS();                                                    \\<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="preprocessor">        virtual const char *what() const noexcept;                  \\<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<span class="preprocessor">        virtual const char *context() const noexcept;               \\<\/span><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<span class="preprocessor">    }<\/span><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<span class="preprocessor">#define ARG3_IMPLEMENT_EXCEPTION(CLASS, BASE)                                                                  \\<\/span><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<span class="preprocessor">    CLASS::CLASS(const std::string &amp;what) : BASE(), what_(what)                                                \\<\/span><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<span class="preprocessor">    }                                                                                                          \\<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="preprocessor">    CLASS::CLASS(const std::string &amp;what, const std::string &amp;context) : BASE(), what_(what), context_(context) \\<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<span class="preprocessor">    }                                                                                                          \\<\/span><\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<span class="preprocessor">    CLASS::CLASS()                                                                                             \\<\/span><\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="preprocessor">    }                                                                                                          \\<\/span><\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="preprocessor">    const char *CLASS::what() const noexcept                                                                   \\<\/span><\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="preprocessor">        return what_.c_str();                                                                                  \\<\/span><\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<span class="preprocessor">    }                                                                                                          \\<\/span><\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<span class="preprocessor">    const char *CLASS::context() const noexcept                                                                \\<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="preprocessor">    {                                                                                                          \\<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="preprocessor">        return context_.c_str();                                                                               \\<\/span><\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<span class="preprocessor">    }<\/span><\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;{<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;    {<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;        ARG3_DECLARE_EXCEPTION(database_exception, std::exception);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        ARG3_DECLARE_EXCEPTION(no_such_column_exception, database_exception);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;        ARG3_DECLARE_EXCEPTION(record_not_found_exception, database_exception);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        ARG3_DECLARE_EXCEPTION(binding_error, database_exception);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;    }<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;}<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacearg3_html"><div class="ttname"><a href="namespacearg3.html">arg3<\/a><\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:9<\/div><\/div>$/;"	a
l00001	html/html/join__clause_8h_source.html	/^<a href="join__clause_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_JOIN_CLAUSE_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_JOIN_CLAUSE_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="where__clause_8h.html">where_clause.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;        <span class="comment">\/\/ define join types in a namespace<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;        <span class="keyword">namespace <\/span>join<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;        {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="join__clause_8h.html#a27117065fcc3ac94e65003310d95a5a9">   20<\/a><\/span>&#160;            <span class="keyword">typedef<\/span> <span class="keyword">enum<\/span> { inner, left, right, outer } <a class="code" href="join__clause_8h.html#a27117065fcc3ac94e65003310d95a5a9">type<\/a>;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        }<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1join__clause.html">   27<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            std::string tableName_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <a class="code" href="join__clause_8h.html#a27117065fcc3ac94e65003310d95a5a9">join::type<\/a> type_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> on_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a>();<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keyword">explicit<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a>(<span class="keyword">const<\/span> std::string &amp;tableName, <a class="code" href="join__clause_8h.html#a27117065fcc3ac94e65003310d95a5a9">join::type<\/a> joinType = join::inner);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;other);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a>(<a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;other);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a>();<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            std::string to_string() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <span class="keywordtype">bool<\/span> empty() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;set_type(<a class="code" href="join__clause_8h.html#a27117065fcc3ac94e65003310d95a5a9">join::type<\/a> value);<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;set_table_name(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;on(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;on(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            <span class="keyword">explicit<\/span> <span class="keyword">operator<\/span> std::string();<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;        };<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;        std::ostream &amp;<a class="code" href="join__clause_8h.html#a35039c607a67329c80e6c0275ec789e2">operator&lt;&lt;<\/a>(std::ostream &amp;out, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;join);<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;        <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> <span class="keyword">operator<\/span><span class="stringliteral">&quot;&quot;<\/span> _join(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *cstr, <span class="keywordtype">size_t<\/span> len);<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;    }<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;}<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1where__clause_html"><div class="ttname"><a href="classarg3_1_1db_1_1where__clause.html">arg3::db::where_clause<\/a><\/div><div class="ttdef"><b>Definition:<\/b> where_clause.h:20<\/div><\/div>$/;"	a
l00001	html/html/log_8h_source.html	/^<a href="log_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_LOG_H_<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_LOG_H_<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;cstring&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef __attribute__<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define __attribute__(x)<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;{<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;    {<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;        <span class="keyword">namespace <\/span>log<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;            <span class="comment">\/* standard printf style functions *\/<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;            <span class="keywordtype">void<\/span> error(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<span class="keyword">const<\/span> format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keywordtype">void<\/span> warn(const <span class="keywordtype">char<\/span> *const format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keywordtype">void<\/span> info(const <span class="keywordtype">char<\/span> *const format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keywordtype">void<\/span> debug(const <span class="keywordtype">char<\/span> *const format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keywordtype">void<\/span> trace(const <span class="keywordtype">char<\/span> *const format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keywordtype">void<\/span> error(<span class="keywordtype">int<\/span> errnum);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;        }<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    }<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;}<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacearg3_html"><div class="ttname"><a href="namespacearg3.html">arg3<\/a><\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:9<\/div><\/div>$/;"	a
l00001	html/html/modify__query_8h_source.html	/^<a href="modify__query_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MODIFY_QUERY_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MODIFY_QUERY_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="query_8h.html">query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="where__clause_8h.html">where_clause.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;{<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1modify__query.html">   20<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1modify__query.html#aa29bd820545852f2b8b3341c6fbc989d">   27<\/a><\/span>&#160;            constexpr <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#aa29bd820545852f2b8b3341c6fbc989d">BATCH<\/a> = (1 &lt;&lt; 0);<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;other);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a>();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;other);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a6c955b78da91788c0182e6d554ceb705">to_string<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a2e9484322a39b13fcb5936fd0c843edd">table_name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1modify__query.html#a06377cde227c0b3d93b0731f7180c76f">set_flags<\/a>(<span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1modify__query.html#a2e9484322a39b13fcb5936fd0c843edd">table_name<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#ae11866e6b14e45a06761a28443d39db2">last_number_of_changes<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            std::vector&lt;std::string&gt; columns_;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            std::string tableName_;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            <span class="keywordtype">int<\/span> flags_;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            <span class="keywordtype">int<\/span> numChanges_;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;        };<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1insert__query.html">  101<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1insert__query.html">insert_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a><\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;        {<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            <span class="keyword">using<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query::modify_query<\/a>;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a6c955b78da91788c0182e6d554ceb705">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> lastId_;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;        };<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1update__query.html">  129<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a><\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;        {<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;            <span class="keyword">using<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query::modify_query<\/a>;<\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html">where<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;where(<span class="keyword">const<\/span> <span class="keywordtype">string<\/span> &amp;value);<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a6c955b78da91788c0182e6d554ceb705">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> where_;<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;        };<\/div><div class="line"><a name="l00156"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1delete__query.html">  156<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1delete__query.html">delete_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a><\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;        {<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;            <span class="keyword">using<\/span> update_query::update_query;<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a6c955b78da91788c0182e6d554ceb705">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;        };<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;    }<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;}<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1schema_html"><div class="ttname"><a href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a><\/div><div class="ttdef"><b>Definition:<\/b> schema.h:32<\/div><\/div>$/;"	a
l00001	html/html/mysql__binding_8h_source.html	/^<a href="mysql__binding_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_BINDING_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_BINDING_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="bindable_8h.html">bindable.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        <span class="keyword">class <\/span>mysql_binding : <span class="keyword">public<\/span> bindable<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>mysql_column;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            MYSQL_BIND *value_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keywordtype">void<\/span> copy_value(<span class="keyword">const<\/span> MYSQL_BIND *other, <span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="keywordtype">void<\/span> clear_value();<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keywordtype">void<\/span> clear_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keywordtype">bool<\/span> reallocate_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            mysql_binding();<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            mysql_binding(<span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            mysql_binding(<span class="keyword">const<\/span> MYSQL_BIND &amp;value);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            mysql_binding(MYSQL_BIND *value, <span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            mysql_binding(MYSQL_FIELD *fields, <span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            mysql_binding(<span class="keyword">const<\/span> mysql_binding &amp;other);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            mysql_binding(mysql_binding &amp;&amp;other);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            mysql_binding &amp;operator=(<span class="keyword">const<\/span> mysql_binding &amp;other);<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;            mysql_binding &amp;operator=(mysql_binding &amp;&amp;other);<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_binding();<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            <span class="keywordtype">void<\/span> bind_result(MYSQL_STMT *stmt) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            MYSQL_BIND *<span class="keyword">get<\/span>(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            sql_value to_value(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            mysql_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            mysql_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            mysql_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;            mysql_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            mysql_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;            mysql_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            mysql_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            <span class="keywordtype">void<\/span> bind_params(MYSQL_STMT *stmt) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;        };<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;    }<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;}<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="bindable_8h_html"><div class="ttname"><a href="bindable_8h.html">bindable.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/mysql__column_8h_source.html	/^<a href="mysql__column_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_COLUMN_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_COLUMN_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="column_8h.html">column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">class <\/span>mysql_binding;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        <span class="keyword">class <\/span>mysql_column : <span class="keyword">public<\/span> column_impl<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keywordtype">string<\/span> name_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            MYSQL_ROW value_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            shared_ptr&lt;MYSQL_RES&gt; res_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keywordtype">size_t<\/span> index_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            mysql_column(<span class="keyword">const<\/span> shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW value, <span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            mysql_column(<span class="keyword">const<\/span> mysql_column &amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            mysql_column(mysql_column &amp;&amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_column();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            mysql_column &amp;operator=(<span class="keyword">const<\/span> mysql_column &amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            mysql_column &amp;operator=(mysql_column &amp;&amp;other);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            sql_value to_value() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            std::string name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;        };<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        <span class="keyword">class <\/span>mysql_stmt_column : <span class="keyword">public<\/span> column_impl<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;        {<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            std::string name_;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            std::shared_ptr&lt;mysql_binding&gt; value_;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keywordtype">size_t<\/span> position_;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            mysql_stmt_column(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> shared_ptr&lt;mysql_binding&gt; &amp;bindings, <span class="keywordtype">size_t<\/span> position);<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            mysql_stmt_column(<span class="keyword">const<\/span> mysql_stmt_column &amp;other);<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            mysql_stmt_column(mysql_stmt_column &amp;&amp;other);<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_stmt_column();<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            mysql_stmt_column &amp;operator=(<span class="keyword">const<\/span> mysql_stmt_column &amp;other);<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            mysql_stmt_column &amp;operator=(mysql_stmt_column &amp;&amp;other);<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            sql_value to_value() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            std::string name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        };<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;        <span class="keyword">class <\/span>mysql_cached_column : <span class="keyword">public<\/span> column_impl<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;        {<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;            std::string name_;<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;            sql_value value_;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;            <span class="keywordtype">int<\/span> type_;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;            <span class="keywordtype">void<\/span> set_value(<span class="keyword">const<\/span> shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW pValue, <span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            mysql_cached_column(<span class="keyword">const<\/span> std::string &amp;name, mysql_binding &amp;bindings, <span class="keywordtype">size_t<\/span> position);<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;            mysql_cached_column(<span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW value, <span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;            mysql_cached_column(<span class="keyword">const<\/span> mysql_cached_column &amp;other);<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;            mysql_cached_column(mysql_cached_column &amp;&amp;other);<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_cached_column();<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;            mysql_cached_column &amp;operator=(<span class="keyword">const<\/span> mysql_cached_column &amp;other);<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;            mysql_cached_column &amp;operator=(mysql_cached_column &amp;&amp;other);<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;            sql_value to_value() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;            std::string name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;        };<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;    }<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;}<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacearg3_html"><div class="ttname"><a href="namespacearg3.html">arg3<\/a><\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:9<\/div><\/div>$/;"	a
l00001	html/html/mysql__db_8h_source.html	/^<a href="mysql__db_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_SQLDB_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_SQLDB_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">class <\/span>mysql_db : <span class="keyword">public<\/span> sqldb<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>base_query;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>mysql_statement;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>mysql_resultset;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>mysql_cached_resultset;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            std::shared_ptr&lt;MYSQL&gt; db_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            mysql_db(<span class="keyword">const<\/span> uri &amp;connInfo);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            mysql_db(<span class="keyword">const<\/span> mysql_db &amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            mysql_db(mysql_db &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            mysql_db &amp;operator=(<span class="keyword">const<\/span> mysql_db &amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            mysql_db &amp;operator=(mysql_db &amp;&amp;other);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_db();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">bool<\/span> is_open() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">void<\/span> open();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <span class="keywordtype">void<\/span> close();<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keywordtype">int<\/span> last_number_of_changes() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            <span class="keywordtype">string<\/span> last_error() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            resultset execute(<span class="keyword">const<\/span> <span class="keywordtype">string<\/span> &amp;sql, <span class="keywordtype">bool<\/span> cache = <span class="keyword">false<\/span>);<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            shared_ptr&lt;statement&gt; create_statement();<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        };<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    }<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;}<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="sqldb_8h_html"><div class="ttname"><a href="sqldb_8h.html">sqldb.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/mysql__resultset_8h_source.html	/^<a href="mysql__resultset_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_RESULTSET_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resultset_8h.html">resultset.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">class <\/span>mysql_db;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">class <\/span>mysql_binding;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        <span class="keyword">class <\/span>mysql_resultset : <span class="keyword">public<\/span> resultset_impl<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;        {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>select_query;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>row;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>resultset_iterator;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            std::shared_ptr&lt;MYSQL_RES&gt; res_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            MYSQL_ROW row_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            mysql_db *db_;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            mysql_resultset(mysql_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="comment">\/* do not allow copying *\/<\/span><\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            mysql_resultset(<span class="keyword">const<\/span> mysql_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            mysql_resultset &amp;operator=(<span class="keyword">const<\/span> mysql_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="comment">\/* allow moving *\/<\/span><\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            mysql_resultset(mysql_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            mysql_resultset &amp;operator=(mysql_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_resultset();<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            row current_row();<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;        };<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        <span class="keyword">class <\/span>mysql_stmt_resultset : <span class="keyword">public<\/span> resultset_impl<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;        {<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>select_query;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>row;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>resultset_iterator;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            std::shared_ptr&lt;MYSQL_STMT&gt; stmt_;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            std::shared_ptr&lt;MYSQL_RES&gt; metadata_;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;            mysql_db *db_;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;            std::shared_ptr&lt;mysql_binding&gt; bindings_;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;            <span class="keywordtype">int<\/span> status_;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            <span class="keywordtype">void<\/span> prepare_results();<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            mysql_stmt_resultset(mysql_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_STMT&gt; &amp;stmt);<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;            <span class="comment">\/* non-copyable *\/<\/span><\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;            mysql_stmt_resultset(<span class="keyword">const<\/span> mysql_stmt_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;            mysql_stmt_resultset &amp;operator=(<span class="keyword">const<\/span> mysql_stmt_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;            <span class="comment">\/* allow moving *\/<\/span><\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;            mysql_stmt_resultset(mysql_stmt_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;            mysql_stmt_resultset &amp;operator=(mysql_stmt_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_stmt_resultset();<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;            row current_row();<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;        };<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;        <span class="keyword">class <\/span>mysql_cached_resultset : <span class="keyword">public<\/span> resultset_impl<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;        {<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>select_query;<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>row;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>resultset_iterator;<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;row_impl&gt;&gt; rows_;<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;            <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;            mysql_cached_resultset(sqldb *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_STMT&gt; &amp;stmt);<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;            mysql_cached_resultset(mysql_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res);<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;            <span class="comment">\/* non-copyable *\/<\/span><\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;            mysql_cached_resultset(<span class="keyword">const<\/span> mysql_cached_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;            mysql_cached_resultset &amp;operator=(<span class="keyword">const<\/span> mysql_cached_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;            <span class="comment">\/* allow moving *\/<\/span><\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;            mysql_cached_resultset(mysql_cached_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;            mysql_cached_resultset &amp;operator=(mysql_cached_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_cached_resultset();<\/div><div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;<\/div><div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;            row current_row();<\/div><div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;<\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;        };<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div><div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;        <span class="keyword">namespace <\/span>helper<\/div><div class="line"><a name="l00217"><\/a><span class="lineno">  217<\/span>&#160;        {<\/div><div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;            <span class="keyword">struct <\/span>mysql_res_delete {<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;                <span class="keywordtype">void<\/span> operator()(MYSQL_RES *p) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;            };<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;        }<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;    }<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;}<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;<\/div><div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;<\/div><div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="resultset_8h_html"><div class="ttname"><a href="resultset_8h.html">resultset.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/mysql__row_8h_source.html	/^<a href="mysql__row_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_ROW_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="row_8h.html">row.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="mysql__column_8h.html">mysql_column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">class <\/span>mysql_db;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">class <\/span>mysql_binding;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;        <span class="keyword">class <\/span>mysql_row : <span class="keyword">public<\/span> row_impl<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;        {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>mysql_resultset;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            MYSQL_ROW row_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            std::shared_ptr&lt;MYSQL_RES&gt; res_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            mysql_db *db_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            mysql_row(mysql_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW row);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_row();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            mysql_row(<span class="keyword">const<\/span> mysql_row &amp;other);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            mysql_row(mysql_row &amp;&amp;other);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            mysql_row &amp;operator=(<span class="keyword">const<\/span> mysql_row &amp;other);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            mysql_row &amp;operator=(mysql_row &amp;&amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            column_type column(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            column_type column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;        };<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;        <span class="keyword">class <\/span>mysql_stmt_row : <span class="keyword">public<\/span> row_impl<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;        {<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>mysql_stmt_resultset;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            std::shared_ptr&lt;mysql_binding&gt; fields_;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;            std::shared_ptr&lt;MYSQL_RES&gt; metadata_;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;            std::shared_ptr&lt;MYSQL_STMT&gt; stmt_;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            mysql_db *db_;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;            mysql_stmt_row(mysql_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_STMT&gt; &amp;stmt, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;metadata,<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;                           <span class="keyword">const<\/span> std::shared_ptr&lt;mysql_binding&gt; &amp;fields);<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_stmt_row();<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;            mysql_stmt_row(<span class="keyword">const<\/span> mysql_stmt_row &amp;other);<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;            mysql_stmt_row(mysql_stmt_row &amp;&amp;other);<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            mysql_stmt_row &amp;operator=(<span class="keyword">const<\/span> mysql_stmt_row &amp;other);<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;            mysql_stmt_row &amp;operator=(mysql_stmt_row &amp;&amp;other);<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;            column_type column(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;            column_type column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;        };<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;        <span class="keyword">class <\/span>mysql_cached_row : <span class="keyword">public<\/span> row_impl<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;        {<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>mysql_stmt_resultset;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;mysql_cached_column&gt;&gt; columns_;<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;            mysql_cached_row(sqldb *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, mysql_binding &amp;fields);<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;            mysql_cached_row(sqldb *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW row);<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_cached_row() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;            mysql_cached_row(<span class="keyword">const<\/span> mysql_cached_row &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;            mysql_cached_row(mysql_cached_row &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;            mysql_cached_row &amp;operator=(<span class="keyword">const<\/span> mysql_cached_row &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;            mysql_cached_row &amp;operator=(mysql_cached_row &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;            column_type column(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;<\/div><div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;            column_type column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;        };<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;    }<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;}<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;<\/div><div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;<\/div><div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="mysql__column_8h_html"><div class="ttname"><a href="mysql__column_8h.html">mysql_column.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/mysql__statement_8h_source.html	/^<a href="mysql__statement_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="statement_8h.html">statement.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="mysql__binding_8h.html">mysql_binding.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">class <\/span>mysql_db;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        <span class="keyword">class <\/span>mysql_statement : <span class="keyword">public<\/span> statement<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            mysql_db *db_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            std::shared_ptr&lt;MYSQL_STMT&gt; stmt_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            mysql_binding bindings_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            mysql_statement(mysql_db *db);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            mysql_statement(<span class="keyword">const<\/span> mysql_statement &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            mysql_statement(mysql_statement &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            mysql_statement &amp;operator=(<span class="keyword">const<\/span> mysql_statement &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            mysql_statement &amp;operator=(mysql_statement &amp;&amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keyword">virtual<\/span> ~mysql_statement();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">void<\/span> prepare(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            resultset results();<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <span class="keywordtype">bool<\/span> result();<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keywordtype">void<\/span> finish();<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keywordtype">int<\/span> last_number_of_changes();<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id();<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;            std::string last_error();<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            mysql_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;            mysql_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;            mysql_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;            mysql_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            mysql_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            mysql_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            mysql_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;        };<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;    }<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;}<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="statement_8h_html"><div class="ttname"><a href="statement_8h.html">statement.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/postgres__binding_8h_source.html	/^<a href="postgres__binding_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_BINDING_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_BINDING_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="bindable_8h.html">bindable.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">class <\/span>postgres_binding : <span class="keyword">public<\/span> bindable<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        {<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>postgres_column;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>postgres_statement;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keywordtype">char<\/span> **values_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            Oid *types_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keywordtype">int<\/span> *lengths_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keywordtype">int<\/span> *formats_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="keywordtype">void<\/span> copy_value(<span class="keyword">const<\/span> postgres_binding &amp;other);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keywordtype">void<\/span> clear_value();<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keywordtype">void<\/span> clear_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">bool<\/span> reallocate_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            postgres_binding();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            postgres_binding(<span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            postgres_binding(<span class="keyword">const<\/span> postgres_binding &amp;other);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            postgres_binding(postgres_binding &amp;&amp;other);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            postgres_binding &amp;operator=(<span class="keyword">const<\/span> postgres_binding &amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            postgres_binding &amp;operator=(postgres_binding &amp;&amp;other);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <span class="keyword">virtual<\/span> ~postgres_binding();<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            sql_value to_value(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            postgres_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            postgres_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            postgres_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            postgres_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            postgres_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            postgres_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            postgres_binding &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        };<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    }<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;}<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="bindable_8h_html"><div class="ttname"><a href="bindable_8h.html">bindable.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/postgres__column_8h_source.html	/^<a href="postgres__column_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_COLUMN_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_COLUMN_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="column_8h.html">column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#define postgres_default_column postgres_cached_column<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        <span class="keyword">class <\/span>postgres_column : <span class="keyword">public<\/span> column_impl<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keywordtype">int<\/span> column_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keywordtype">int<\/span> row_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            postgres_column(<span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">int<\/span> row, <span class="keywordtype">int<\/span> column);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            postgres_column(<span class="keyword">const<\/span> postgres_column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            postgres_column(postgres_column &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="keyword">virtual<\/span> ~postgres_column();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            postgres_column &amp;operator=(<span class="keyword">const<\/span> postgres_column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            postgres_column &amp;operator=(postgres_column &amp;&amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            sql_value to_value() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            std::string name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        };<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;        <span class="keyword">class <\/span>postgres_cached_column : <span class="keyword">public<\/span> column_impl<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        {<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            std::string name_;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            sql_value value_;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="keywordtype">int<\/span> length_;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keywordtype">int<\/span> type_;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            <span class="keywordtype">void<\/span> set_value(<span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">size_t<\/span> row, <span class="keywordtype">size_t<\/span> column);<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            postgres_cached_column(<span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">size_t<\/span> row, <span class="keywordtype">size_t<\/span> column);<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            postgres_cached_column(<span class="keyword">const<\/span> postgres_cached_column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            postgres_cached_column(postgres_cached_column &amp;&amp;other);<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keyword">virtual<\/span> ~postgres_cached_column();<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            postgres_cached_column &amp;operator=(<span class="keyword">const<\/span> postgres_cached_column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            postgres_cached_column &amp;operator=(postgres_cached_column &amp;&amp;other);<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            sql_value to_value() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            std::string name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        };<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;    }<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;}<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacearg3_html"><div class="ttname"><a href="namespacearg3.html">arg3<\/a><\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:9<\/div><\/div>$/;"	a
l00001	html/html/postgres__db_8h_source.html	/^<a href="postgres__db_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef POSTGRES_DB_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define POSTGRES_DB_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">class <\/span>postgres_db : <span class="keyword">public<\/span> sqldb<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>base_query;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>postgres_statement;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>postgres_resultset;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>postgres_cached_resultset;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            shared_ptr&lt;PGconn&gt; db_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            postgres_db(<span class="keyword">const<\/span> uri &amp;info);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            postgres_db(<span class="keyword">const<\/span> postgres_db &amp;other);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            postgres_db(postgres_db &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            postgres_db &amp;operator=(<span class="keyword">const<\/span> postgres_db &amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            postgres_db &amp;operator=(postgres_db &amp;&amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keyword">virtual<\/span> ~postgres_db();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">bool<\/span> is_open() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">void<\/span> open();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <span class="keywordtype">void<\/span> close();<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <span class="keywordtype">int<\/span> last_number_of_changes() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            std::string last_error() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            resultset execute(<span class="keyword">const<\/span> std::string &amp;sql, <span class="keywordtype">bool<\/span> cache = <span class="keyword">false<\/span>);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            std::shared_ptr&lt;statement&gt; create_statement();<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> lastId_;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <span class="keywordtype">int<\/span> lastNumChanges_;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keywordtype">void<\/span> set_last_insert_id(<span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keywordtype">void<\/span> set_last_number_of_changes(<span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;        };<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;        <span class="keyword">namespace <\/span>helper<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;        {<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keyword">struct <\/span>postgres_res_delete {<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                <span class="keywordtype">void<\/span> operator()(PGresult *p) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            };<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        }<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;    }<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;}<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="sqldb_8h_html"><div class="ttname"><a href="sqldb_8h.html">sqldb.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/postgres__resultset_8h_source.html	/^<a href="postgres__resultset_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_RESULTSET_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resultset_8h.html">resultset.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">class <\/span>postgres_db;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        <span class="keyword">class <\/span>postgres_resultset : <span class="keyword">public<\/span> resultset_impl<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>select_query;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>row;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>resultset_iterator;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            postgres_db *db_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            postgres_resultset(postgres_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            postgres_resultset(<span class="keyword">const<\/span> postgres_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            postgres_resultset(postgres_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="keyword">virtual<\/span> ~postgres_resultset();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            postgres_resultset &amp;operator=(<span class="keyword">const<\/span> postgres_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            postgres_resultset &amp;operator=(postgres_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            row current_row();<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        };<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;        <span class="keyword">class <\/span>postgres_cached_resultset : <span class="keyword">public<\/span> resultset_impl<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;        {<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>select_query;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>row;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>resultset_iterator;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            postgres_db *db_;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;row_impl&gt;&gt; rows_;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            postgres_cached_resultset(postgres_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt);<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            postgres_cached_resultset(<span class="keyword">const<\/span> postgres_cached_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            postgres_cached_resultset(postgres_cached_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            <span class="keyword">virtual<\/span> ~postgres_cached_resultset();<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            postgres_cached_resultset &amp;operator=(<span class="keyword">const<\/span> postgres_cached_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            postgres_cached_resultset &amp;operator=(postgres_cached_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            row current_row();<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;        };<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;    }<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;}<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="resultset_8h_html"><div class="ttname"><a href="resultset_8h.html">resultset.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/postgres__row_8h_source.html	/^<a href="postgres__row_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_ROW_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="row_8h.html">row.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="postgres__column_8h.html">postgres_column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#define postgres_default_row arg3::db::postgres_cached_row<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;{<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;    {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">class <\/span>postgres_db;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;        <span class="keyword">class <\/span>postgres_row : <span class="keyword">public<\/span> row_impl<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;        {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>postgres_resultset;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            postgres_db *db_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">int<\/span> row_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            postgres_row(postgres_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">int<\/span> row);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="keyword">virtual<\/span> ~postgres_row();<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            postgres_row(<span class="keyword">const<\/span> postgres_row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            postgres_row(postgres_row &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            postgres_row &amp;operator=(<span class="keyword">const<\/span> postgres_row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            postgres_row &amp;operator=(postgres_row &amp;&amp;other);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            column_type column(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            column_type column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        };<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;        <span class="keyword">class <\/span>postgres_cached_row : <span class="keyword">public<\/span> row_impl<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        {<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>postgres_resultset;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;postgres_cached_column&gt;&gt; columns_;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            postgres_cached_row(postgres_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">size_t<\/span> row);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="keyword">virtual<\/span> ~postgres_cached_row();<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            postgres_cached_row(<span class="keyword">const<\/span> postgres_cached_row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            postgres_cached_row(postgres_cached_row &amp;&amp;other);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            postgres_cached_row &amp;operator=(<span class="keyword">const<\/span> postgres_cached_row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;            postgres_cached_row &amp;operator=(postgres_cached_row &amp;&amp;other);<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            column_type column(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            column_type column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;        };<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;    }<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;}<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="postgres__column_8h_html"><div class="ttname"><a href="postgres__column_8h.html">postgres_column.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/postgres__statement_8h_source.html	/^<a href="postgres__statement_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="statement_8h.html">statement.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="postgres__binding_8h.html">postgres_binding.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">class <\/span>postgres_db;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        <span class="keyword">class <\/span>postgres_statement : <span class="keyword">public<\/span> statement<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            postgres_db *db_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            postgres_binding bindings_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            std::string sql_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            postgres_statement(postgres_db *db);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            postgres_statement(<span class="keyword">const<\/span> postgres_statement &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            postgres_statement(postgres_statement &amp;&amp;other);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            postgres_statement &amp;operator=(<span class="keyword">const<\/span> postgres_statement &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            postgres_statement &amp;operator=(postgres_statement &amp;&amp;other);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="keyword">virtual<\/span> ~postgres_statement();<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keywordtype">void<\/span> prepare(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            resultset results();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keywordtype">bool<\/span> result();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keywordtype">void<\/span> finish();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keywordtype">int<\/span> last_number_of_changes();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            std::string last_error();<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            postgres_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            postgres_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            postgres_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            postgres_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            postgres_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            postgres_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            postgres_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        };<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;    }<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;}<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="statement_8h_html"><div class="ttname"><a href="statement_8h.html">statement.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/query_8h_source.html	/^<a href="query_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_QUERY_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_QUERY_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;map&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="schema_8h.html">schema.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="statement_8h.html">statement.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;{<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    {<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1query.html">   25<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        {<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="keywordtype">size_t<\/span> assert_binding_index(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            std::shared_ptr&lt;statement&gt; stmt_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            std::vector&lt;sql_value&gt; bindings_;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <span class="keywordtype">void<\/span> prepare(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html#ada185ac2b666865639aa07edd14108f0">query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html#ada185ac2b666865639aa07edd14108f0">query<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html#ada185ac2b666865639aa07edd14108f0">query<\/a>(<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#a71373e8a8b3ba79dd3a06faafab71f11">operator=<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;other);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#a71373e8a8b3ba79dd3a06faafab71f11">operator=<\/a>(<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#a522ac3702c19aef655697d06b7ff55a0">bind_value<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_value &amp;v);<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1query.html#ab57fd25085c7a6921a194cb1a4252822">last_error<\/a>();<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;        };<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;    }<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;    <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00133"><\/a><span class="lineno"><a class="line" href="query_8h.html#ab95e62f7b77945c88f600e1d7ecd387e">  133<\/a><\/span>&#160;    std::string <a class="code" href="query_8h.html#ab95e62f7b77945c88f600e1d7ecd387e">join_csv<\/a>(<span class="keyword">const<\/span> std::vector&lt;T&gt; &amp;list)<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;    {<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;        ostringstream buf;<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;        <span class="keywordflow">if<\/span> (list.size() &gt; 0) {<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;            ostream_iterator&lt;T&gt; it(buf, <span class="stringliteral">&quot;,&quot;<\/span>);<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;            copy(list.begin(), list.end() - 1, it);<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;            buf &lt;&lt; *(list.end() - 1);<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;        }<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;        <span class="keywordflow">return<\/span> buf.str();<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;    }<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;    std::string <a class="code" href="query_8h.html#aeb8f13d523bd91b1be2853bc3d6b420b">join_params<\/a>(<span class="keyword">const<\/span> vector&lt;std::string&gt; &amp;columns, <span class="keywordtype">bool<\/span> update);<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;}<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="statement_8h_html"><div class="ttname"><a href="statement_8h.html">statement.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/resultset_8h_source.html	/^<a href="resultset_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_RESULTSET_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="row_8h.html">row.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="exception_8h.html">exception.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;        <span class="keyword">class <\/span>resultset;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1resultset__impl.html">   21<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <span class="comment">\/* non-copyable *\/<\/span><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a>(<a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> next() = 0;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> current_row() = 0;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> reset() = 0;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;        };<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> ValueType, <span class="keyword">typename<\/span> NonConst&gt;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1resultset__iterator.html">   50<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> : <span class="keyword">public<\/span> std::iterator&lt;std::input_iterator_tag, ValueType&gt;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;        {<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            shared_ptr&lt;resultset_impl&gt; rs_;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <span class="keywordtype">int<\/span> pos_;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            NonConst value_;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>(<span class="keyword">const<\/span> shared_ptr&lt;resultset_impl&gt; &amp;rset, <span class="keywordtype">int<\/span> position) : rs_(rset), pos_(position), value_(rset-&gt;current_row())<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            {<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            }<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other) : rs_(other.rs_), pos_(other.pos_), value_(other.value_)<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            {<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            }<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>(<a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;&amp;other) : rs_(std::move(other.rs_)), pos_(other.pos_), value_(std::move(other.value_))<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            {<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;                other.rs_ = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;                other.pos_ = -1;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            }<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            ~<a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>()<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            {<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            }<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            {<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;                rs_ = std::move(other.rs_);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                pos_ = other.pos_;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;                value_ = std::move(other.value_);<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;                other.rs_ = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;                other.pos_ = -1;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;            }<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            ValueType &amp;operator*()<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            {<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;                <span class="keywordflow">return<\/span> value_;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            }<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;operator++()<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            {<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;                <span class="keywordflow">if<\/span> (pos_ == -1 || rs_ == <span class="keyword">nullptr<\/span>) <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;                <span class="keywordtype">bool<\/span> res = rs_-&gt;next();<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;                <span class="keywordflow">if<\/span> (res) {<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;                    pos_++;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;                    value_ = rs_-&gt;current_row();<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;                } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;                    pos_ = -1;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;                }<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            }<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            ValueType *operator-&gt;()<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;            {<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;                <span class="keywordflow">return<\/span> &amp;(operator*());<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;            }<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> operator++(<span class="keywordtype">int<\/span>)<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;            {<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;                ++(*this);<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            }<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> operator+(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;            {<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;                tmp += n;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;            }<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;operator+=(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;            {<\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;                <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i = 0; i &lt; n; i++) <span class="keyword">operator<\/span>++();<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;            }<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            <span class="keywordtype">bool<\/span> operator==(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;                <span class="keywordflow">return<\/span> pos_ == other.pos_;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;            }<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;            <span class="keywordtype">bool<\/span> operator!=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;                <span class="keywordflow">return<\/span> !operator==(other);<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;            }<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&lt;(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;                <span class="keywordflow">if<\/span> (pos_ == -1 &amp;&amp; other.pos_ == -1)<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;                <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (pos_ == -1)<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;                <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (other.pos_ == -1)<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>;<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;                <span class="keywordflow">else<\/span><\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;                    <span class="keywordflow">return<\/span> pos_ &lt; other.pos_;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;            }<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&lt;=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;                <span class="keywordflow">return<\/span> operator&lt;(other) || operator==(other);<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;            }<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&gt;(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;                <span class="keywordflow">return<\/span> !operator&lt;(other);<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;            }<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&gt;=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;                <span class="keywordflow">return<\/span> operator&gt;(other) || operator==(other);<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;            }<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;        };<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div><div class="line"><a name="l00178"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1resultset.html">  178<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a><\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;        {<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;            std::shared_ptr&lt;resultset_impl&gt; impl_;<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator&lt;row, row&gt;<\/a> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">iterator<\/a>;<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator&lt;const row, row&gt;<\/a> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">const_iterator<\/a>;<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;resultset_impl&gt; &amp;impl);<\/div><div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;            <span class="comment">\/* non-copyable *\/<\/span><\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>();<\/div><div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;            <span class="comment">\/* non-copyable *\/<\/span><\/div><div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;<\/div><div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;            iterator begin();<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;            const_iterator begin() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div><div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;            iterator end();<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;            const_iterator end() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;<\/div><div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> current_row();<\/div><div class="line"><a name="l00231"><\/a><span class="lineno">  231<\/span>&#160;<\/div><div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;<\/div><div class="line"><a name="l00241"><\/a><span class="lineno">  241<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> operator*();<\/div><div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;<\/div><div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;<\/div><div class="line"><a name="l00251"><\/a><span class="lineno">  251<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;<\/div><div class="line"><a name="l00256"><\/a><span class="lineno">  256<\/span>&#160;            <span class="keywordtype">void<\/span> for_each(<span class="keyword">const<\/span> std::function&lt;<span class="keywordtype">void<\/span>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;)&gt; &amp;funk) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;<\/div><div class="line"><a name="l00261"><\/a><span class="lineno">  261<\/span>&#160;            std::shared_ptr&lt;resultset_impl&gt; impl() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00262"><\/a><span class="lineno">  262<\/span>&#160;        };<\/div><div class="line"><a name="l00263"><\/a><span class="lineno">  263<\/span>&#160;    }<\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;}<\/div><div class="line"><a name="l00265"><\/a><span class="lineno">  265<\/span>&#160;<\/div><div class="line"><a name="l00266"><\/a><span class="lineno">  266<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1resultset__impl_html"><div class="ttname"><a href="classarg3_1_1db_1_1resultset__impl.html">arg3::db::resultset_impl<\/a><\/div><div class="ttdef"><b>Definition:<\/b> resultset.h:21<\/div><\/div>$/;"	a
l00001	html/html/row_8h_source.html	/^<a href="row_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_ROW_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="column_8h.html">column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;iterator&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00019"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1row__impl.html">   19<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">arg3::db::column<\/a> <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a>;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a>(<a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">virtual<\/span> std::string column_name(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keyword">virtual<\/span> column_type <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keyword">virtual<\/span> column_type <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;        };<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">class<\/span> ValueType, <span class="keyword">class<\/span> NonConst, <span class="keyword">class<\/span> RowType&gt;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1row__iterator.html">   46<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> : <span class="keyword">public<\/span> std::iterator&lt;std::random_access_iterator_tag, ValueType&gt;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;        {<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            std::shared_ptr&lt;RowType&gt; row_;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">int<\/span> position_;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            NonConst currentValue_;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="keywordtype">void<\/span> set_current_value(<span class="keywordtype">size_t<\/span> index)<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            {<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                assert(row_ != <span class="keyword">nullptr<\/span>);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <span class="keywordflow">if<\/span> (index &gt;= 0 &amp;&amp; index &lt; row_-&gt;size()) {<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                    currentValue_ = row_-&gt;column(index);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                }<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            }<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>() : row_(<span class="keyword">nullptr<\/span>), position_(-1)<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            {<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            }<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;RowType&gt; &amp;pRow, <span class="keywordtype">int<\/span> position) : row_(pRow), position_(position)<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            {<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            }<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other) : row_(other.row_), position_(other.position_)<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            {<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            }<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>(<a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;&amp;other) : row_(std::move(other.row_)), position_(other.position_)<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            {<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;                other.row_ = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            }<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>()<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            {<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            }<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            {<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                row_ = other.row_;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;                position_ = other.position_;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            }<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            {<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;                row_ = std::move(other.row_);<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;                position_ = other.position_;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;                other.row_ = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            }<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;            ValueType &amp;operator*()<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;            {<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;                set_current_value(position_);<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;                <span class="keywordflow">return<\/span> currentValue_;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            }<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;            ValueType *operator-&gt;()<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            {<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;                set_current_value(position_);<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;                <span class="keywordflow">return<\/span> &amp;currentValue_;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            }<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;            ValueType operator[](<span class="keywordtype">size_t<\/span> nPosition)<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;            {<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;                set_current_value(nPosition);<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;                <span class="keywordflow">return<\/span> currentValue_;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;            }<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator++()<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;            {<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;                <span class="keywordflow">if<\/span> (position_ &lt; row_-&gt;size()) ++position_;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;            }<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> operator++(<span class="keywordtype">int<\/span>)<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;            {<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;                ++(*this);<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;            }<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator--()<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;            {<\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;                <span class="keywordflow">if<\/span> (position_ &gt; 0) --position_;<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;            }<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> operator--(<span class="keywordtype">int<\/span>)<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;            {<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;                --(*this);<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;            }<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> operator+(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;            {<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;                tmp += n;<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;            }<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator+=(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;            {<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;                position_ = std::min(position_ + n, row_-&gt;size());<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;            }<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> operator-(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;            {<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;                tmp -= n;<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;            }<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator-=(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;            {<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;                position_ = std::max(position_ - n, 0);<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;            }<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;            <span class="keywordtype">bool<\/span> operator==(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;                <span class="keywordflow">return<\/span> position_ == other.position_;<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;            }<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;            <span class="keywordtype">bool<\/span> operator!=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;                <span class="keywordflow">return<\/span> !operator==(other);<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;            }<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&lt;(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;                <span class="keywordflow">return<\/span> position_ &lt; other.position_;<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;            }<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&lt;=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;                <span class="keywordflow">return<\/span> operator&lt;(other) || operator==(other);<\/div><div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;            }<\/div><div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&gt;(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;                <span class="keywordflow">return<\/span> !operator&lt;(other);<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;            }<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&gt;=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;                <span class="keywordflow">return<\/span> operator&gt;(other) || operator==(other);<\/div><div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;            }<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;            <span class="keywordtype">int<\/span> operator-(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;            {<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;                <span class="keywordflow">if<\/span> (position_ &gt;= other.position_)<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;                    <span class="keywordflow">return<\/span> position_ - other.position_;<\/div><div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;                <span class="keywordflow">else<\/span><\/div><div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;                    <span class="keywordflow">return<\/span> 0;<\/div><div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;            }<\/div><div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;            std::string name()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;                assert(row_ != <span class="keyword">nullptr<\/span>);<\/div><div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;                <span class="keywordflow">return<\/span> row_-&gt;column_name(position_);<\/div><div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;            }<\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;        };<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;<\/div><div class="line"><a name="l00219"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1row.html">  219<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">row<\/a><\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;        {<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;            std::shared_ptr&lt;row_impl&gt; impl_;<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">arg3::db::column<\/a> <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a>;<\/div><div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator&lt;column_type, column_type, row_impl&gt;<\/a> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">iterator<\/a>;<\/div><div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator&lt;const column_type, column_type, const row_impl&gt;<\/a> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">const_iterator<\/a>;<\/div><div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;<\/div><div class="line"><a name="l00229"><\/a><span class="lineno">  229<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>();<\/div><div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;row_impl&gt; &amp;impl);<\/div><div class="line"><a name="l00231"><\/a><span class="lineno">  231<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;other);<\/div><div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>();<\/div><div class="line"><a name="l00234"><\/a><span class="lineno">  234<\/span>&#160;<\/div><div class="line"><a name="l00235"><\/a><span class="lineno">  235<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;other);<\/div><div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;<\/div><div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;            <span class="comment">\/\/ Methods<\/span><\/div><div class="line"><a name="l00239"><\/a><span class="lineno">  239<\/span>&#160;            iterator begin();<\/div><div class="line"><a name="l00240"><\/a><span class="lineno">  240<\/span>&#160;<\/div><div class="line"><a name="l00241"><\/a><span class="lineno">  241<\/span>&#160;            const_iterator begin() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;<\/div><div class="line"><a name="l00243"><\/a><span class="lineno">  243<\/span>&#160;            const_iterator cbegin() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;<\/div><div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;            iterator end();<\/div><div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;<\/div><div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;            const_iterator end() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00248"><\/a><span class="lineno">  248<\/span>&#160;<\/div><div class="line"><a name="l00249"><\/a><span class="lineno">  249<\/span>&#160;            const_iterator cend() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00250"><\/a><span class="lineno">  250<\/span>&#160;<\/div><div class="line"><a name="l00251"><\/a><span class="lineno">  251<\/span>&#160;            column_type operator[](<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;<\/div><div class="line"><a name="l00253"><\/a><span class="lineno">  253<\/span>&#160;            column_type operator[](<span class="keyword">const<\/span> <span class="keywordtype">string<\/span> &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00254"><\/a><span class="lineno">  254<\/span>&#160;<\/div><div class="line"><a name="l00255"><\/a><span class="lineno">  255<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00256"><\/a><span class="lineno">  256<\/span>&#160;<\/div><div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;            column_type <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00258"><\/a><span class="lineno">  258<\/span>&#160;<\/div><div class="line"><a name="l00259"><\/a><span class="lineno">  259<\/span>&#160;            column_type column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00260"><\/a><span class="lineno">  260<\/span>&#160;<\/div><div class="line"><a name="l00261"><\/a><span class="lineno">  261<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00262"><\/a><span class="lineno">  262<\/span>&#160;<\/div><div class="line"><a name="l00263"><\/a><span class="lineno">  263<\/span>&#160;            <span class="keywordtype">bool<\/span> empty() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;<\/div><div class="line"><a name="l00265"><\/a><span class="lineno">  265<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00266"><\/a><span class="lineno">  266<\/span>&#160;<\/div><div class="line"><a name="l00267"><\/a><span class="lineno">  267<\/span>&#160;            <span class="keywordtype">void<\/span> for_each(<span class="keyword">const<\/span> std::function&lt;<span class="keywordtype">void<\/span>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">db::column<\/a> &amp;)&gt; &amp;funk) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00268"><\/a><span class="lineno">  268<\/span>&#160;<\/div><div class="line"><a name="l00269"><\/a><span class="lineno">  269<\/span>&#160;            std::shared_ptr&lt;row_impl&gt; impl() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00270"><\/a><span class="lineno">  270<\/span>&#160;        };<\/div><div class="line"><a name="l00271"><\/a><span class="lineno">  271<\/span>&#160;    }<\/div><div class="line"><a name="l00272"><\/a><span class="lineno">  272<\/span>&#160;}<\/div><div class="line"><a name="l00273"><\/a><span class="lineno">  273<\/span>&#160;<\/div><div class="line"><a name="l00274"><\/a><span class="lineno">  274<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1column_html"><div class="ttname"><a href="classarg3_1_1db_1_1column.html">arg3::db::column<\/a><\/div><div class="ttdef"><b>Definition:<\/b> column.h:53<\/div><\/div>$/;"	a
l00001	html/html/schema_8h_source.html	/^<a href="schema_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SCHEMA_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SCHEMA_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;{<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    {<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1column__definition.html">   20<\/a><\/span>&#160;        <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1column__definition.html">column_definition<\/a> {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;            std::string name;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;            <span class="keywordtype">bool<\/span> pk;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            std::string type;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        };<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        std::ostream &amp;<a class="code" href="join__clause_8h.html#a35039c607a67329c80e6c0275ec789e2">operator&lt;&lt;<\/a>(std::ostream &amp;os, <span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1column__definition.html">column_definition<\/a> &amp;def);<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1schema.html">   32<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a><\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;        {<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            std::string tableName_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            std::vector&lt;column_definition&gt; columns_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tablename);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>();<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>(<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;other);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> init();<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            std::vector&lt;column_definition&gt; columns() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            std::vector&lt;std::string&gt; column_names() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            std::vector&lt;std::string&gt; primary_keys() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            std::string table_name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <a class="code" href="structarg3_1_1db_1_1column__definition.html">column_definition<\/a> operator[](<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;        };<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;    }<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;}<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1schema_html"><div class="ttname"><a href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a><\/div><div class="ttdef"><b>Definition:<\/b> schema.h:32<\/div><\/div>$/;"	a
l00001	html/html/schema__factory_8h_source.html	/^<a href="schema__factory_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SCHEMA_FACTORY_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SCHEMA_FACTORY_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;functional&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="schema_8h.html">schema.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;{<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;    {<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1schema__factory.html">   24<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            std::unordered_map&lt;std::string, std::shared_ptr&lt;schema&gt;&gt; schema_cache_;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            std::shared_ptr&lt;schema&gt; create(<span class="keyword">const<\/span> std::string &amp;tableName);<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a>(<a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;other);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            std::shared_ptr&lt;schema&gt; <span class="keyword">get<\/span>(<span class="keyword">const<\/span> std::string &amp;tableName);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keywordtype">void<\/span> clear(<span class="keyword">const<\/span> std::string &amp;tablename);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        };<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    }<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;}<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="schema_8h_html"><div class="ttname"><a href="schema_8h.html">schema.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/select__query_8h_source.html	/^<a href="select__query_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SELECT_QUERY_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SELECT_QUERY_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="query_8h.html">query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resultset_8h.html">resultset.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="where__clause_8h.html">where_clause.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="join__clause_8h.html">join_clause.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;{<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;    {<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1select__query.html">   22<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> where_;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> join_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            std::string limit_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            std::string orderBy_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            std::string groupBy_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            std::string joinBy_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            std::vector&lt;std::string&gt; columns_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            std::string tableName_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>(<a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            std::vector&lt;std::string&gt; columns() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            std::string limit() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            std::string order_by() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            std::string group_by() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;other);<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html">where<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">string<\/span> &amp;value);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;where(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;limit(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;order_by(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;group_by(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;join(<span class="keyword">const<\/span> std::string &amp;tableName, <a class="code" href="join__clause_8h.html#a27117065fcc3ac94e65003310d95a5a9">join::type<\/a> type = join::inner);<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;join(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            std::string to_string() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> execute();<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            <span class="keywordtype">void<\/span> execute(<span class="keyword">const<\/span> std::function&lt;<span class="keywordtype">void<\/span>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;)&gt; &amp;);<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            <span class="keywordtype">int<\/span> count();<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;            std::string table_name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;table_name(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1select__query.html#adf34a6a966f9bf2e975973cf22b8a7bf">   94<\/a><\/span>&#160;            T <a class="code" href="classarg3_1_1db_1_1select__query.html#adf34a6a966f9bf2e975973cf22b8a7bf">execute_scalar<\/a>()<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            {<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;                <span class="keyword">auto<\/span> rs = execute();<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;                <span class="keywordflow">if<\/span> (!rs.is_valid() || rs.begin() == rs.end()) <span class="keywordflow">return<\/span> T();<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;                <span class="keyword">auto<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> = rs.begin();<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;                <span class="keyword">auto<\/span> col = <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>-&gt;begin();<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;                <span class="keywordflow">return<\/span> col-&gt;to_value();<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            }<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;        };<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;    }<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;}<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1schema_html"><div class="ttname"><a href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a><\/div><div class="ttdef"><b>Definition:<\/b> schema.h:32<\/div><\/div>$/;"	a
l00001	html/html/sql__value_8h_source.html	/^<a href="sql__value_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQL_VALUE_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQL_VALUE_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;variant.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;iostream&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;cmath&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;        <span class="keyword">class <\/span>base_query;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;        <span class="keyword">class <\/span>bindable;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">extern<\/span> <span class="keyword">const<\/span> nullptr_t <a class="code" href="sql__value_8h.html#a08bdb77f401be0f94e9bcd2f0dd4b823">sql_null<\/a>;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        <span class="keyword">typedef<\/span> arg3::binary sql_blob;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        <span class="keyword">typedef<\/span> nullptr_t sql_null_t;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;        <span class="keyword">typedef<\/span> arg3::variant sql_value;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;        <span class="keywordtype">void<\/span> bind(bindable *obj, <span class="keywordtype">int<\/span> index, <span class="keyword">const<\/span> sql_value &amp;value);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;        <span class="keywordtype">void<\/span> bind(<span class="keyword">const<\/span> shared_ptr&lt;bindable&gt; &amp;obj, <span class="keywordtype">int<\/span> index, <span class="keyword">const<\/span> sql_value &amp;value);<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;    }<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;}<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacestd.html">std<\/a><\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;{<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;    <span class="comment">\/*<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="comment">     * some standard to_string functions<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<span class="comment">     *\/<\/span><\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;    <span class="keywordtype">string<\/span> to_string(<span class="keyword">const<\/span> nullptr_t &amp;value);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;    <span class="keywordtype">string<\/span> to_string(<span class="keyword">const<\/span> std::string &amp;value);  <span class="comment">\/\/ yep<\/span><\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;    ostream &amp;<a class="code" href="join__clause_8h.html#a35039c607a67329c80e6c0275ec789e2">operator&lt;&lt;<\/a>(ostream &amp;out, <span class="keyword">const<\/span> nullptr_t &amp;null);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;}<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="join__clause_8h_html_a35039c607a67329c80e6c0275ec789e2"><div class="ttname"><a href="join__clause_8h.html#a35039c607a67329c80e6c0275ec789e2">arg3::db::operator&lt;&lt;<\/a><\/div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;out, const join_clause &amp;join)<\/div><\/div>$/;"	a
l00001	html/html/sqldb_8h_source.html	/^<a href="sqldb_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLDB_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLDB_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="schema__factory_8h.html">schema_factory.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="statement_8h.html">statement.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;{<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        <span class="keyword">class <\/span>resultset;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1uri.html">   23<\/a><\/span>&#160;        <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1uri.html">uri<\/a> {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1uri.html#aff68ad5fc8af250e73b79fc655901a59">   28<\/a><\/span>&#160;            <a class="code" href="structarg3_1_1db_1_1uri.html#aff68ad5fc8af250e73b79fc655901a59">uri<\/a>(<span class="keyword">const<\/span> std::string &amp;url)<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;                <a class="code" href="structarg3_1_1db_1_1uri.html#a0c97dc61c7150be800af3b846544bd49">parse<\/a>(url);<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            }<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="structarg3_1_1db_1_1uri.html#a0c97dc61c7150be800af3b846544bd49">parse<\/a>(<span class="keyword">const<\/span> std::string &amp;url);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            std::string protocol, user, password, host, port, path, <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>, value;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <span class="keyword">operator<\/span> std::string()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                <span class="keywordflow">return<\/span> value;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            }<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;        };<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        <span class="keyword">namespace <\/span>log<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;        {<\/div><div class="line"><a name="l00049"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5">   49<\/a><\/span>&#160;            <span class="keyword">typedef<\/span> <span class="keyword">enum<\/span> {<\/div><div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a241738d243c2679c1b74bbade8340643">   51<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a241738d243c2679c1b74bbade8340643">None<\/a> = 0,<\/div><div class="line"><a name="l00053"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5ae821bee0490efa7db42007f5605f8da0">   53<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5ae821bee0490efa7db42007f5605f8da0">Error<\/a> = 1,<\/div><div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a8499d7223e924bb02de403fb892b2c32">   55<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a8499d7223e924bb02de403fb892b2c32">Warn<\/a> = 2,<\/div><div class="line"><a name="l00057"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a06d40ebfe7ccc2612873dd2b716fda5b">   57<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a06d40ebfe7ccc2612873dd2b716fda5b">Info<\/a> = 3,<\/div><div class="line"><a name="l00059"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a84f00790b02e10f9c303c3c76e5b0ca1">   59<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a84f00790b02e10f9c303c3c76e5b0ca1">Debug<\/a> = 4,<\/div><div class="line"><a name="l00061"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a1cfd907f2968dd37b311048dc38d2fe8">   61<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5a1cfd907f2968dd37b311048dc38d2fe8">Trace<\/a> = 5<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            } <a class="code" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5">Level<\/a>;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            <span class="keywordtype">void<\/span> set_level(<a class="code" href="sqldb_8h.html#aea36aea77d3aec8b2d9cb74ce1dcc3e5">Level<\/a> level);<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;        }<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqldb.html">   70<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a><\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;        {<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00076"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqldb.html#afc162aabe92b1326aaa3a160ad7819ed">   76<\/a><\/span>&#160;            <span class="keyword">typedef<\/span> <span class="keyword">enum<\/span> { CACHE_NONE, CACHE_RESULTSET, CACHE_ROW, CACHE_COLUMN } <a class="code" href="classarg3_1_1db_1_1sqldb.html#afc162aabe92b1326aaa3a160ad7819ed">CacheLevel<\/a>;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="keyword">static<\/span> std::shared_ptr&lt;sqldb&gt; from_uri(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>(<span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1uri.html">uri<\/a> &amp;connectionInfo);<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> is_open() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> open() = 0;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> close() = 0;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> query_schema(<span class="keyword">const<\/span> std::string &amp;tablename, std::vector&lt;column_definition&gt; &amp;columns);<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">int<\/span> last_number_of_changes() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            <a class="code" href="structarg3_1_1db_1_1uri.html">uri<\/a> connection_info() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> execute(<span class="keyword">const<\/span> std::string &amp;sql, <span class="keywordtype">bool<\/span> cache) = 0;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> execute(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            <span class="keyword">virtual<\/span> std::string last_error() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> *schemas();<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;            <span class="keyword">virtual<\/span> shared_ptr&lt;statement&gt; create_statement() = 0;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            <span class="keywordtype">void<\/span> set_cache_level(CacheLevel level);<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;            CacheLevel cache_level() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <a class="code" href="structarg3_1_1db_1_1uri.html">uri<\/a> connectionInfo_;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;            CacheLevel cacheLevel_;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> schema_factory_;<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;        };<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;    }<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;}<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="statement_8h_html"><div class="ttname"><a href="statement_8h.html">statement.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/sqlite3__column_8h_source.html	/^<a href="sqlite3__column_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_COLUMN_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_COLUMN_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="column_8h.html">column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#define sqlite3_default_column sqlite3_cached_column<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_column : <span class="keyword">public<\/span> column_impl<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        {<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keywordtype">int<\/span> column_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            sqlite3_column(<span class="keyword">const<\/span> shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt, <span class="keywordtype">int<\/span> column);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            sqlite3_column(<span class="keyword">const<\/span> sqlite3_column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            sqlite3_column(sqlite3_column &amp;&amp;other);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keyword">virtual<\/span> ~sqlite3_column();<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            sqlite3_column &amp;operator=(<span class="keyword">const<\/span> sqlite3_column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            sqlite3_column &amp;operator=(sqlite3_column &amp;&amp;other);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            sql_value to_value() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            std::string name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        };<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_cached_column : <span class="keyword">public<\/span> column_impl<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        {<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            std::string name_;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            sql_value value_;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">int<\/span> type_;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keywordtype">void<\/span> set_value(std::shared_ptr&lt;sqlite3_stmt&gt; stmt, <span class="keywordtype">int<\/span> column);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            sqlite3_cached_column(shared_ptr&lt;sqlite3_stmt&gt; stmt, <span class="keywordtype">int<\/span> column);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            sqlite3_cached_column(<span class="keyword">const<\/span> sqlite3_cached_column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            sqlite3_cached_column(sqlite3_cached_column &amp;&amp;other);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <span class="keyword">virtual<\/span> ~sqlite3_cached_column();<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            sqlite3_cached_column &amp;operator=(<span class="keyword">const<\/span> sqlite3_cached_column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            sqlite3_cached_column &amp;operator=(sqlite3_cached_column &amp;&amp;other);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            sql_value to_value() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            std::string name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        };<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;    }<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;}<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacearg3_html"><div class="ttname"><a href="namespacearg3.html">arg3<\/a><\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:9<\/div><\/div>$/;"	a
l00001	html/html/sqlite3__db_8h_source.html	/^<a href="sqlite3__db_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_SQLDB_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_SQLDB_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_db : <span class="keyword">public<\/span> sqldb<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>base_query;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqlite3_statement;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            std::shared_ptr&lt;sqlite3&gt; db_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            sqlite3_db(<span class="keyword">const<\/span> uri &amp;info);<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            sqlite3_db(<span class="keyword">const<\/span> sqlite3_db &amp;other);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            sqlite3_db(sqlite3_db &amp;&amp;other);<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            sqlite3_db &amp;operator=(<span class="keyword">const<\/span> sqlite3_db &amp;other);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            sqlite3_db &amp;operator=(sqlite3_db &amp;&amp;other);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <span class="keyword">virtual<\/span> ~sqlite3_db();<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <span class="keywordtype">bool<\/span> is_open() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keywordtype">void<\/span> open(<span class="keywordtype">int<\/span> flags);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="keywordtype">void<\/span> open();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keywordtype">void<\/span> close();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">int<\/span> last_number_of_changes() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="keywordtype">void<\/span> query_schema(<span class="keyword">const<\/span> std::string &amp;tableName, std::vector&lt;column_definition&gt; &amp;columns);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            resultset execute(<span class="keyword">const<\/span> std::string &amp;sql, <span class="keywordtype">bool<\/span> cache = <span class="keyword">false<\/span>);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            std::string last_error() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            std::shared_ptr&lt;statement&gt; create_statement();<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        };<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;    }<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;}<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="sqldb_8h_html"><div class="ttname"><a href="sqldb_8h.html">sqldb.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/sqlite3__resultset_8h_source.html	/^<a href="sqlite3__resultset_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_RESULTSET_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resultset_8h.html">resultset.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_db;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_resultset : <span class="keyword">public<\/span> resultset_impl<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>select_query;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>row;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>resultset_iterator;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            sqlite3_db *db_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">int<\/span> status_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            sqlite3_resultset(sqlite3_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            sqlite3_resultset(<span class="keyword">const<\/span> sqlite3_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            sqlite3_resultset(sqlite3_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keyword">virtual<\/span> ~sqlite3_resultset();<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            sqlite3_resultset &amp;operator=(<span class="keyword">const<\/span> sqlite3_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            sqlite3_resultset &amp;operator=(sqlite3_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            row current_row();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;        };<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_cached_resultset : <span class="keyword">public<\/span> resultset_impl<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;        {<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>select_query;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>row;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>resultset_iterator;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            sqlite3_db *db_;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;row_impl&gt;&gt; rows_;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            sqlite3_cached_resultset(sqlite3_db *db, shared_ptr&lt;sqlite3_stmt&gt; stmt);<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            sqlite3_cached_resultset(<span class="keyword">const<\/span> sqlite3_cached_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            sqlite3_cached_resultset(sqlite3_cached_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keyword">virtual<\/span> ~sqlite3_cached_resultset();<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            sqlite3_cached_resultset &amp;operator=(<span class="keyword">const<\/span> sqlite3_cached_resultset &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            sqlite3_cached_resultset &amp;operator=(sqlite3_cached_resultset &amp;&amp;other);<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;            row current_row();<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;        };<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;    }<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;}<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="resultset_8h_html"><div class="ttname"><a href="resultset_8h.html">resultset.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/sqlite3__row_8h_source.html	/^<a href="sqlite3__row_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_ROW_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="row_8h.html">row.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqlite3__column_8h.html">sqlite3_column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#define sqlite3_default_row arg3::db::sqlite3_cached_row<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_db;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_row : <span class="keyword">public<\/span> row_impl<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;        {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqlite3_resultset;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            sqlite3_db *db_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            sqlite3_row(sqlite3_db *db, <span class="keyword">const<\/span> std::shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="keyword">virtual<\/span> ~sqlite3_row();<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            sqlite3_row(<span class="keyword">const<\/span> sqlite3_row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            sqlite3_row(sqlite3_row &amp;&amp;other);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            sqlite3_row &amp;operator=(<span class="keyword">const<\/span> sqlite3_row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            sqlite3_row &amp;operator=(sqlite3_row &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            column_type column(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            column_type column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;        };<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_cached_row : <span class="keyword">public<\/span> row_impl<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        {<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>sqlite3_resultset;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;sqlite3_cached_column&gt;&gt; columns_;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            sqlite3_cached_row(sqlite3_db *db, std::shared_ptr&lt;sqlite3_stmt&gt; stmt);<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            <span class="keyword">virtual<\/span> ~sqlite3_cached_row();<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            sqlite3_cached_row(<span class="keyword">const<\/span> sqlite3_cached_row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            sqlite3_cached_row(sqlite3_cached_row &amp;&amp;other);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            sqlite3_cached_row &amp;operator=(<span class="keyword">const<\/span> sqlite3_cached_row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            sqlite3_cached_row &amp;operator=(sqlite3_cached_row &amp;&amp;other);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            column_type column(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            column_type column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;        };<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;    }<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;}<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="sqlite3__column_8h_html"><div class="ttname"><a href="sqlite3__column_8h.html">sqlite3_column.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/sqlite3__statement_8h_source.html	/^<a href="sqlite3__statement_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_STATEMENT_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="statement_8h.html">statement.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;{<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_db;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_statement : <span class="keyword">public<\/span> statement<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        {<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            sqlite3_db *db_;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            sqlite3_statement(sqlite3_db *db);<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            sqlite3_statement(<span class="keyword">const<\/span> sqlite3_statement &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            sqlite3_statement(sqlite3_statement &amp;&amp;other);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            sqlite3_statement &amp;operator=(<span class="keyword">const<\/span> sqlite3_statement &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            sqlite3_statement &amp;operator=(sqlite3_statement &amp;&amp;other);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keyword">virtual<\/span> ~sqlite3_statement();<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="comment">\/* statement overrides *\/<\/span><\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keywordtype">void<\/span> prepare(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            resultset results();<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keywordtype">bool<\/span> result();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keywordtype">void<\/span> finish();<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">int<\/span> last_number_of_changes();<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            std::string last_error();<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id();<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            sqlite3_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            sqlite3_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            sqlite3_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            sqlite3_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            sqlite3_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            sqlite3_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            sqlite3_statement &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;        };<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        <span class="keyword">struct <\/span>sqlite3_stmt_delete {<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <span class="keywordtype">void<\/span> operator()(sqlite3_stmt *p) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        };<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;    }<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;}<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="statement_8h_html"><div class="ttname"><a href="statement_8h.html">statement.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/statement_8h_source.html	/^<a href="statement_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="bindable_8h.html">bindable.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resultset_8h.html">resultset.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;{<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    {<\/div><div class="line"><a name="l00018"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1statement.html">   18<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1statement.html">statement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#ad04c59042ee2a3ae4219602bbd7a15ce">prepare<\/a>(<span class="keyword">const<\/span> std::string &amp;sql) = 0;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#a9f25d625551bf9634dc9bc0004292b3e">finish<\/a>() = 0;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#a57108b429488fef2d19c6df47c99ce8e">reset<\/a>() = 0;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#af6e1108c5f353f9194d046b6008fd9e6">is_valid<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> <a class="code" href="classarg3_1_1db_1_1statement.html#aed8894234571e8c340970560ae1e7fa1">results<\/a>() = 0;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#a5dcd8886973349d19c67cd58947fcb52">result<\/a>() = 0;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#aef96b534c652ac923b8d1468e2b14b2d">last_number_of_changes<\/a>() = 0;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1statement.html#a30ad16ce3941fea75e8a62336c38e11e">last_error<\/a>() = 0;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#a0fbf96e1c361854675f75b1ebe125880">last_insert_id<\/a>() = 0;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;        };<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;    }<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;}<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="bindable_8h_html"><div class="ttname"><a href="bindable_8h.html">bindable.h<\/a><\/div><\/div>$/;"	a
l00001	html/html/where__clause_8h_source.html	/^<a href="where__clause_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_WHERE_CLAUSE_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_WHERE_CLAUSE_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1where__clause.html">   20<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            std::string value_;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            std::vector&lt;where_clause&gt; and_;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            std::vector&lt;where_clause&gt; or_;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html#a04409609ae61634e824813813666fd64">where_clause<\/a>();<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keyword">explicit<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html#a04409609ae61634e824813813666fd64">where_clause<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html#a04409609ae61634e824813813666fd64">where_clause<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;other);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html#a04409609ae61634e824813813666fd64">where_clause<\/a>(<a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;other);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a>();<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1where__clause.html#a3863d4a732924a7da3780594c101c8b7">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <span class="keyword">explicit<\/span> <span class="keyword">operator<\/span> std::string();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html#ac76a3c1644bd1461792d9244092694f2">operator&amp;&amp;<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html#ac76a3c1644bd1461792d9244092694f2">operator&amp;&amp;<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html#a24f12d5e55d8e6fb0989a7aa3dd4801b">operator||<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html#a24f12d5e55d8e6fb0989a7aa3dd4801b">operator||<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html#a947c9e6bc40b716ea23f1faa9945a411">empty<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html#a6ea6aee9e736d9759207dd14d41ffa28">reset<\/a>();<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;        };<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;        std::ostream &amp;<a class="code" href="join__clause_8h.html#a35039c607a67329c80e6c0275ec789e2">operator&lt;&lt;<\/a>(std::ostream &amp;out, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html">where<\/a>);<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;        <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> <span class="keyword">operator<\/span><span class="stringliteral">&quot;&quot;<\/span> _where(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *cstr, <span class="keywordtype">size_t<\/span> len);<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div><div class="line"><a name="l00108"><\/a><span class="lineno"><a class="line" href="where__clause_8h.html#a739570ef21a8fbd1363d6d887afdcc9d">  108<\/a><\/span>&#160;        <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> where;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;    }<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;}<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1where__clause_html_a24f12d5e55d8e6fb0989a7aa3dd4801b"><div class="ttname"><a href="classarg3_1_1db_1_1where__clause.html#a24f12d5e55d8e6fb0989a7aa3dd4801b">arg3::db::where_clause::operator||<\/a><\/div><div class="ttdeci">where_clause &amp; operator||(const where_clause &amp;value)<\/div><\/div>$/;"	a
l00001	html/join__clause_8h_source.html	/^<a href="join__clause_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_JOIN_CLAUSE_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_JOIN_CLAUSE_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="where__clause_8h.html">where_clause.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1join__clause.html">   20<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1join__clause.html#aae63ef1827478e38d9e11cf16905175b">   24<\/a><\/span>&#160;            <span class="keyword">typedef<\/span> <span class="keyword">enum<\/span> { none, natural, inner, left_outer, right_outer, full_outer, cross } <a class="code" href="classarg3_1_1db_1_1join__clause.html#aae63ef1827478e38d9e11cf16905175b">type<\/a>;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            std::string tableName_;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            type type_;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> on_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html#aeda317474eab2465131d8b1f114d106c">join_clause<\/a>();<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="keyword">explicit<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html#aeda317474eab2465131d8b1f114d106c">join_clause<\/a>(<span class="keyword">const<\/span> std::string &amp;tableName, type joinType = none);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html#aeda317474eab2465131d8b1f114d106c">join_clause<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html#aeda317474eab2465131d8b1f114d106c">join_clause<\/a>(<a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a>();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1join__clause.html#a12c55bf13d578c4b1d4b75ba1cf1fd40">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html#a7d3eefa59eedc2945a3cc55004e99e4e">empty<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html#ac661dce813e193979b67e50d31141ab9">reset<\/a>();<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1join__clause.html#abab336d3ed9fc75ed01c7351fd736ddd">set_type<\/a>(type value);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1join__clause.html#a7106d07c589ef8a75133963a84574142">set_table_name<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1join__clause.html#af7966066aec7ca0d8d0758d2d6e4cad9">on<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1join__clause.html#af7966066aec7ca0d8d0758d2d6e4cad9">on<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keyword">explicit<\/span> <span class="keyword">operator<\/span> std::string();<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;        };<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;        <span class="comment">\/* simplify type name *\/<\/span><\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;        <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join<\/a>;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;        std::ostream &amp;<a class="code" href="join__clause_8h.html#a35039c607a67329c80e6c0275ec789e2">operator&lt;&lt;<\/a>(std::ostream &amp;out, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;join);<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;    }<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;}<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1where__clause_html"><div class="ttname"><a href="classarg3_1_1db_1_1where__clause.html">arg3::db::where_clause<\/a><\/div><div class="ttdef"><b>Definition:<\/b> where_clause.h:20<\/div><\/div>$/;"	a
l00001	html/log_8h_source.html	/^<a href="log_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_LOG_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_LOG_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;cstring&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#ifndef __attribute__<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#define __attribute__(x)<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;{<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;    {<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;        <span class="keyword">namespace <\/span>log<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;            <span class="keyword">extern<\/span> FILE *file;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;            <span class="keyword">extern<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *LevelNames[];<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="comment">\/* standard printf style functions *\/<\/span><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keywordtype">void<\/span> error(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<span class="keyword">const<\/span> format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keywordtype">void<\/span> warn(const <span class="keywordtype">char<\/span> *const format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keywordtype">void<\/span> info(const <span class="keywordtype">char<\/span> *const format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keywordtype">void<\/span> debug(const <span class="keywordtype">char<\/span> *const format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="keywordtype">void<\/span> trace(const <span class="keywordtype">char<\/span> *const format, ...) __attribute__((format(printf, 1, 2)));<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keywordtype">void<\/span> error(<span class="keywordtype">int<\/span> errnum);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;        }<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;    }<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;}<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="namespacearg3_html"><div class="ttname"><a href="namespacearg3.html">arg3<\/a><\/div><div class="ttdef"><b>Definition:<\/b> alloc.h:9<\/div><\/div>$/;"	a
l00001	html/modify__query_8h_source.html	/^<a href="modify__query_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MODIFY_QUERY_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MODIFY_QUERY_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="query_8h.html">query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="where__clause_8h.html">where_clause.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;{<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1modify__query.html">   20<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1modify__query.html#a193b36e1bcb10d4202258609ce47930f">   27<\/a><\/span>&#160;            constexpr <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#a193b36e1bcb10d4202258609ce47930f">Batch<\/a> = (1 &lt;&lt; 0);<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *<a class="code" href="classarg3_1_1db_1_1query.html#a950365f4c68b215c290864f9a8f93ccc">db<\/a>, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *<a class="code" href="classarg3_1_1db_1_1query.html#a950365f4c68b215c290864f9a8f93ccc">db<\/a>, <span class="keyword">const<\/span> std::string &amp;tableName);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;other);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query<\/a>(<a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a>();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;other);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a6c955b78da91788c0182e6d554ceb705">to_string<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a2e9484322a39b13fcb5936fd0c843edd">table_name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1modify__query.html#a06377cde227c0b3d93b0731f7180c76f">set_flags<\/a>(<span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1modify__query.html#a2e9484322a39b13fcb5936fd0c843edd">table_name<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#ae11866e6b14e45a06761a28443d39db2">last_number_of_changes<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            std::vector&lt;std::string&gt; columns_;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            std::string tableName_;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            <span class="keywordtype">int<\/span> flags_;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            <span class="keywordtype">int<\/span> numChanges_;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;        };<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1insert__query.html">  101<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1insert__query.html">insert_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a><\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;        {<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            <span class="keyword">using<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query::modify_query<\/a>;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a6c955b78da91788c0182e6d554ceb705">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> lastId_;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;        };<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1update__query.html">  129<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a><\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;        {<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;            <span class="keyword">using<\/span> <a class="code" href="classarg3_1_1db_1_1modify__query.html#a663a6f0d04360a25dd86d000fed47db3">modify_query::modify_query<\/a>;<\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html">where<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>... List&gt;<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a> &amp;where(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value, <span class="keyword">const<\/span> List &amp;... args)<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;            {<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;                where(value);<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;                bind_all(args...);<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;            }<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;where(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>... List&gt;<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a> &amp;where(<span class="keyword">const<\/span> std::string &amp;value, <span class="keyword">const<\/span> List &amp;... args)<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;            {<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;                where(value);<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;                bind_all(args...);<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;            }<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a6c955b78da91788c0182e6d554ceb705">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> where_;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;        };<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;<\/div><div class="line"><a name="l00173"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1delete__query.html">  173<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1delete__query.html">delete_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a><\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;        {<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;            <span class="keyword">using<\/span> update_query::update_query;<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1modify__query.html#a6c955b78da91788c0182e6d554ceb705">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;        };<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;    }<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;}<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1schema_html"><div class="ttname"><a href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a><\/div><div class="ttdef"><b>Definition:<\/b> schema.h:35<\/div><\/div>$/;"	a
l00001	html/mysql_2binding_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_BINDING_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_BINDING_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;..\/sql_value.h&quot;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#include &quot;..\/bindable.h&quot;<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;{<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;    {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">namespace <\/span>mysql<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">namespace <\/span>data_mapper<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;                sql_value to_value(MYSQL_BIND *binding);<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;                sql_value to_value(<span class="keywordtype">int<\/span> type, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *value, <span class="keywordtype">size_t<\/span> length);<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            }<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql_1_1binding.html">   35<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">arg3::db::bind_mapping<\/a><\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            {<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span>mysql_column;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                MYSQL_BIND *value_;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                <span class="keywordtype">void<\/span> copy_value(<span class="keyword">const<\/span> MYSQL_BIND *other, <span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                <span class="keywordtype">void<\/span> clear_value();<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                <span class="keywordtype">void<\/span> clear_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <span class="keywordtype">bool<\/span> reallocate_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a>();<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a>(<span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a>(<span class="keyword">const<\/span> MYSQL_BIND &amp;value);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a>(MYSQL_BIND *value, <span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a>(MYSQL_FIELD *fields, <span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;                <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;other);<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;other);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a>();<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;                MYSQL_BIND *<span class="keyword">get<\/span>(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> to_value(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;                <span class="keywordtype">int<\/span> sql_type(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;                <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> value);<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">float<\/span> value);<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">sql_blob<\/a> &amp;value);<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_type &amp;value);<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;value);<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> &amp;bind(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value);<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;                <span class="keywordtype">void<\/span> bind_params(MYSQL_STMT *stmt) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;                <span class="keywordtype">void<\/span> bind_result(MYSQL_STMT *stmt) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;                std::string prepare(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;                <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;            };<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;        }<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;    }<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;}<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="sql__value_8h_html_a235cefa981caffaaecb70c346e603c42"><div class="ttname"><a href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">arg3::db::sql_blob<\/a><\/div><div class="ttdeci">arg3::binary sql_blob<\/div><div class="ttdef"><b>Definition:<\/b> sql_value.h:34<\/div><\/div>$/;"	a
l00001	html/mysql_2column_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_COLUMN_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_COLUMN_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;..\/column.h&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">namespace <\/span>mysql<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keyword">class <\/span>binding;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql_1_1column.html">   29<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html">column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                std::string name_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;                MYSQL_ROW value_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;                std::shared_ptr&lt;MYSQL_RES&gt; res_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;                <span class="keywordtype">size_t<\/span> index_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#a3f73053293c3e8a9028e114c7f055c32">column<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW value, <span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#a3f73053293c3e8a9028e114c7f055c32">column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html">column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#a3f73053293c3e8a9028e114c7f055c32">column<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html">column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html">column<\/a>();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html">column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html">column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html">column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html">column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <span class="comment">\/* column_impl overrides *\/<\/span><\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#ab978a918a0eef7441de4c3017c02e9a4">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#a462097305f1d209c6f089265c82e44d1">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#a0da5bc5b59599152203b4732914e7760">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            };<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">   62<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            {<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;                std::string name_;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;                std::shared_ptr&lt;mysql::binding&gt; value_;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;                <span class="keywordtype">size_t<\/span> position_;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a>(<span class="keyword">const<\/span> std::string &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#a0da5bc5b59599152203b4732914e7760">name<\/a>, <span class="keyword">const<\/span> std::shared_ptr&lt;binding&gt; &amp;bindings, <span class="keywordtype">size_t<\/span> position);<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a>();<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__column.html">stmt_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;                <span class="comment">\/* column_impl overrides *\/<\/span><\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#ab978a918a0eef7441de4c3017c02e9a4">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#a462097305f1d209c6f089265c82e44d1">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;                <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1mysql_1_1column.html#a0da5bc5b59599152203b4732914e7760">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            };<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;        }<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;    }<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;}<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1mysql_1_1column_html_a0da5bc5b59599152203b4732914e7760"><div class="ttname"><a href="classarg3_1_1db_1_1mysql_1_1column.html#a0da5bc5b59599152203b4732914e7760">arg3::db::mysql::column::name<\/a><\/div><div class="ttdeci">std::string name() const <\/div><\/div>$/;"	a
l00001	html/mysql_2db_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_SQLDB_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_SQLDB_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;..\/sqldb.h&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">namespace <\/span>mysql<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql_1_1db.html">   26<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;                <span class="keyword">friend<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;                <span class="keyword">friend<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;               <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                std::shared_ptr&lt;MYSQL&gt; db_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a84218a6d01b37fd34bcfebd7b3019ccd">db<\/a>(<span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1uri__type.html">uri<\/a> &amp;connInfo);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a84218a6d01b37fd34bcfebd7b3019ccd">db<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a> &amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a84218a6d01b37fd34bcfebd7b3019ccd">db<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a> &amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a>();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="comment">\/* sqldb overrides *\/<\/span><\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a7b56616b1983d40ee7f7db231079f152">is_open<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a9de6a453cc5697d3ffe663276a885a85">open<\/a>();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a2dc274c7a0ca91c1d51329c1be9faa0a">close<\/a>();<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a6cecc757aa5170088e12377d81e32efa">last_insert_id<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a50f2125437e5e873e3e852ee530f5ffc">last_number_of_changes<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a768c71df51351bbbf65586dcdbeedba5">last_error<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#a4e57c83a436cca2d413f3793943132f6">execute<\/a>(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                std::shared_ptr&lt;statement_type&gt; <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html#aee3dffe8bec43936ca87dfde40d088a1">create_statement<\/a>();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            };<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        }<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;    }<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;}<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="structarg3_1_1db_1_1uri__type_html"><div class="ttname"><a href="structarg3_1_1db_1_1uri__type.html">arg3::db::uri_type<\/a><\/div><div class="ttdef"><b>Definition:<\/b> sqldb.h:56<\/div><\/div>$/;"	a
l00001	html/mysql_2resultset_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_RESULTSET_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;..\/resultset.h&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">namespace <\/span>mysql<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keyword">class <\/span>db;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <span class="keyword">class <\/span>binding;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql_1_1resultset.html">   30<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            {<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">arg3::db::row<\/a>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">arg3::db::sqldb<\/a>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;                <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                std::shared_ptr&lt;MYSQL_RES&gt; res_;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                MYSQL_ROW row_;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *db_;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#a335e34a19efce351fd8636a5638fe4f4">resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a>, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#a335e34a19efce351fd8636a5638fe4f4">resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#a335e34a19efce351fd8636a5638fe4f4">resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a>();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                <span class="comment">\/* resultset_impl overrides *\/<\/span><\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#a5b5ec5e46edb135274a1a0437f6b87bb">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row.html">resultset::row_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#a41fae9adb9bb5672e95a77f4d6711210">current_row<\/a>();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#ac79257eb9d60673249d165fc3910fcd0">reset<\/a>();<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#ac06b1f303616210b7d9f2898f3260ff3">next<\/a>();<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#a401801c4f592b1c93f3b1d3d1b6541b1">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            };<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">   68<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            {<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;                <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;                std::shared_ptr&lt;MYSQL_STMT&gt; stmt_;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;                std::shared_ptr&lt;MYSQL_RES&gt; metadata_;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *db_;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                std::shared_ptr&lt;mysql::binding&gt; bindings_;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;                <span class="keywordtype">int<\/span> status_;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;                <span class="keywordtype">void<\/span> prepare_results();<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a>, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_STMT&gt; &amp;stmt);<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;                <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a>();<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;                <span class="comment">\/* resultset_impl overrides *\/<\/span><\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#a5b5ec5e46edb135274a1a0437f6b87bb">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row.html">stmt_resultset::row_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#a41fae9adb9bb5672e95a77f4d6711210">current_row<\/a>();<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#ac79257eb9d60673249d165fc3910fcd0">reset<\/a>();<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#ac06b1f303616210b7d9f2898f3260ff3">next<\/a>();<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html#a401801c4f592b1c93f3b1d3d1b6541b1">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;            };<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;            <span class="keyword">namespace <\/span>helper<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            {<\/div><div class="line"><a name="l00111"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1mysql_1_1helper_1_1res__delete.html">  111<\/a><\/span>&#160;                <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1mysql_1_1helper_1_1res__delete.html">res_delete<\/a> {<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;                    <span class="keywordtype">void<\/span> operator()(MYSQL_RES *p) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;                };<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;            }<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;        }<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;    }<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;}<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1mysql_1_1resultset_html_a401801c4f592b1c93f3b1d3d1b6541b1"><div class="ttname"><a href="classarg3_1_1db_1_1mysql_1_1resultset.html#a401801c4f592b1c93f3b1d3d1b6541b1">arg3::db::mysql::resultset::size<\/a><\/div><div class="ttdeci">size_t size() const <\/div><\/div>$/;"	a
l00001	html/mysql_2row_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_ROW_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;..\/row.h&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;column.h&quot;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">namespace <\/span>mysql<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        {<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <span class="keyword">class <\/span>db;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">class <\/span>binding;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql_1_1row.html">   31<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html">row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            {<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1resultset.html">resultset<\/a>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;                MYSQL_ROW row_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;                std::shared_ptr&lt;MYSQL_RES&gt; res_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *db_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#a53b9389b965f8606a4b70814ae02a866">row<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a>, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <span class="keyword">virtual<\/span> ~row();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#a53b9389b965f8606a4b70814ae02a866">row<\/a>(<span class="keyword">const<\/span> row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#a53b9389b965f8606a4b70814ae02a866">row<\/a>(row &amp;&amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                row &amp;operator=(<span class="keyword">const<\/span> row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                row &amp;operator=(row &amp;&amp;other);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <span class="comment">\/* row_impl overrides *\/<\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#a6fac130e529de7d3456c3b38799d7162">column_name<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#ac948139da2d8480685bea21375ebc4b3">column<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#ac948139da2d8480685bea21375ebc4b3">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#a194773f8321caff25957951311c7fd0c">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#a78cea745bbaf76aa55db592563520a7a">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            };<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">   67<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            {<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__resultset.html">stmt_resultset<\/a>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;                std::shared_ptr&lt;mysql::binding&gt; fields_;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;                std::shared_ptr&lt;MYSQL_RES&gt; metadata_;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;                std::shared_ptr&lt;MYSQL_STMT&gt; stmt_;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *db_;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;                <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a>, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_STMT&gt; &amp;stmt, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;metadata,<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;                         <span class="keyword">const<\/span> std::shared_ptr&lt;mysql::binding&gt; &amp;fields);<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a>();<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql_1_1stmt__row.html">stmt_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;                <span class="comment">\/* row_impl overrides *\/<\/span><\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#a6fac130e529de7d3456c3b38799d7162">column_name<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#ac948139da2d8480685bea21375ebc4b3">column<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#ac948139da2d8480685bea21375ebc4b3">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#a194773f8321caff25957951311c7fd0c">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1row.html#a78cea745bbaf76aa55db592563520a7a">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;            };<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;        }<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;    }<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;}<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1mysql_1_1row_html_a78cea745bbaf76aa55db592563520a7a"><div class="ttname"><a href="classarg3_1_1db_1_1mysql_1_1row.html#a78cea745bbaf76aa55db592563520a7a">arg3::db::mysql::row::is_valid<\/a><\/div><div class="ttdeci">bool is_valid() const <\/div><\/div>$/;"	a
l00001	html/mysql_2statement_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;..\/statement.h&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;binding.h&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">namespace <\/span>mysql<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keyword">class <\/span>db;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql_1_1statement.html">   29<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html">arg3::db::statement<\/a><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *db_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;                std::shared_ptr&lt;MYSQL_STMT&gt; stmt_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1binding.html">binding<\/a> bindings_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a50fa796f3e219fc8de873232cb00d368">statement<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">mysql::db<\/a> *<a class="code" href="classarg3_1_1db_1_1mysql_1_1db.html">db<\/a>);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a50fa796f3e219fc8de873232cb00d368">statement<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a50fa796f3e219fc8de873232cb00d368">statement<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a>();<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <span class="comment">\/* statement overrides *\/<\/span><\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a60273be621364c1f480b6d86906ed637">prepare<\/a>(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a2ea82527198fffab7ff435d71c1267dd">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#acecde9cebbea636e0ea0b5156edb2f59">results<\/a>();<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a89f004b16e5c9f14b4d22ac2ce1a9486">result<\/a>();<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#aa803cdd21d1ab98ee017d54b0051b815">finish<\/a>();<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#aa4672796b2acd5210db136cdd30fb431">reset<\/a>();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a7a7d55bc174738ee74b1200da1bf0099">last_number_of_changes<\/a>();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#ae1f09d5fede6df94ff50ee31c581f449">last_insert_id<\/a>();<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#ad3cdf53bfa1d1c5931f4efa7f6975e74">last_error<\/a>();<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;                <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> value);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">float<\/span> value);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">sql_blob<\/a> &amp;value);<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_type &amp;value);<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;value);<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql_1_1statement.html#a71c40ad44fc372eabe34e38814543525">bind<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value);<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            };<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        }<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;    }<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;}<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1mysql_1_1statement_html_aa4672796b2acd5210db136cdd30fb431"><div class="ttname"><a href="classarg3_1_1db_1_1mysql_1_1statement.html#aa4672796b2acd5210db136cdd30fb431">arg3::db::mysql::statement::reset<\/a><\/div><div class="ttdeci">void reset()<\/div><\/div>$/;"	a
l00001	html/mysql__binding_8h_source.html	/^<a href="mysql__binding_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_BINDING_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_BINDING_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="bindable_8h.html">bindable.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__binding.html">   26<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__column.html">mysql_column<\/a>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            MYSQL_BIND *value_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keywordtype">void<\/span> copy_value(<span class="keyword">const<\/span> MYSQL_BIND *other, <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a05473bb45de74ecb503ccbfdb00f17ce">size<\/a>);<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="keywordtype">void<\/span> clear_value();<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keywordtype">void<\/span> clear_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keywordtype">bool<\/span> reallocate_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#ac400cbb60a7924372fd35176cd87621c">mysql_binding<\/a>();<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#ac400cbb60a7924372fd35176cd87621c">mysql_binding<\/a>(<span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#ac400cbb60a7924372fd35176cd87621c">mysql_binding<\/a>(<span class="keyword">const<\/span> MYSQL_BIND &amp;value);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#ac400cbb60a7924372fd35176cd87621c">mysql_binding<\/a>(MYSQL_BIND *value, <span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#ac400cbb60a7924372fd35176cd87621c">mysql_binding<\/a>(MYSQL_FIELD *fields, <span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#ac400cbb60a7924372fd35176cd87621c">mysql_binding<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;other);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#ac400cbb60a7924372fd35176cd87621c">mysql_binding<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;other);<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a>();<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a40b6e2cbe4b7f2d027665de3c678175e">bind_result<\/a>(MYSQL_STMT *stmt) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a05473bb45de74ecb503ccbfdb00f17ce">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            MYSQL_BIND *<span class="keyword">get<\/span>(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#af71eb4de900b272e580751d781057a8a">to_value<\/a>(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#aabbec9497db8e524f1091c185f0f996e">sql_type<\/a>(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a5cf863c65f085c40065176295dcc0930">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a5cf863c65f085c40065176295dcc0930">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a5cf863c65f085c40065176295dcc0930">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a5cf863c65f085c40065176295dcc0930">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a5cf863c65f085c40065176295dcc0930">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a5cf863c65f085c40065176295dcc0930">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a5cf863c65f085c40065176295dcc0930">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a137a7dbb6e4c962164932150ff68ee12">bind_params<\/a>(MYSQL_STMT *stmt) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__binding.html#a7ed4ddc462a389ccff4cd0640679e87e">reset<\/a>();<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;        };<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;    }<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;}<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="bindable_8h_html"><div class="ttname"><a href="bindable_8h.html">bindable.h<\/a><\/div><\/div>$/;"	a
l00001	html/mysql__column_8h_source.html	/^<a href="mysql__column_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_COLUMN_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_COLUMN_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="column_8h.html">column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">class <\/span>mysql_binding;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__column.html">   26<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__column.html">mysql_column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keywordtype">string<\/span> name_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            MYSQL_ROW value_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            shared_ptr&lt;MYSQL_RES&gt; res_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keywordtype">size_t<\/span> index_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__column.html#adb7797d5aa16f3d9c42b67291ed233cc">mysql_column<\/a>(<span class="keyword">const<\/span> shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW value, <span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__column.html#adb7797d5aa16f3d9c42b67291ed233cc">mysql_column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__column.html">mysql_column<\/a> &amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__column.html#adb7797d5aa16f3d9c42b67291ed233cc">mysql_column<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__column.html">mysql_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__column.html">mysql_column<\/a>();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__column.html">mysql_column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__column.html">mysql_column<\/a> &amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__column.html">mysql_column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__column.html">mysql_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__column.html#a76c623dbb8f59a45c0ddf16dc7840d90">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1mysql__column.html#af6ecfc6e28015b54ebd34c51fd10cca7">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__column.html#a08d0c68d065b95064a4213d3af517d90">sql_type<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1mysql__column.html#ac9829424748d87e015b9ebb3210eb44f">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;        };<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__stmt__column.html">   74<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;        {<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            std::string name_;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            std::shared_ptr&lt;mysql_binding&gt; value_;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keywordtype">size_t<\/span> position_;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a>(<span class="keyword">const<\/span> std::string &amp;<a class="code" href="classarg3_1_1db_1_1mysql__column.html#ac9829424748d87e015b9ebb3210eb44f">name<\/a>, <span class="keyword">const<\/span> shared_ptr&lt;mysql_binding&gt; &amp;bindings, <span class="keywordtype">size_t<\/span> position);<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a> &amp;other);<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a>();<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a> &amp;other);<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__stmt__column.html">mysql_stmt_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__column.html#a76c623dbb8f59a45c0ddf16dc7840d90">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1mysql__column.html#af6ecfc6e28015b54ebd34c51fd10cca7">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__column.html#a08d0c68d065b95064a4213d3af517d90">sql_type<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1mysql__column.html#ac9829424748d87e015b9ebb3210eb44f">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        };<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__cached__column.html">  122<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;        {<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;            std::string name_;<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;            sql_value value_;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;            <span class="keywordtype">int<\/span> type_;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;            <span class="keywordtype">void<\/span> set_value(<span class="keyword">const<\/span> shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW pValue, <span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a>(<span class="keyword">const<\/span> std::string &amp;<a class="code" href="classarg3_1_1db_1_1mysql__column.html#ac9829424748d87e015b9ebb3210eb44f">name<\/a>, <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;bindings, <span class="keywordtype">size_t<\/span> position);<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW value, <span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a> &amp;other);<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a>();<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a> &amp;other);<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__cached__column.html">mysql_cached_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__column.html#a76c623dbb8f59a45c0ddf16dc7840d90">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1mysql__column.html#af6ecfc6e28015b54ebd34c51fd10cca7">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__column.html#a08d0c68d065b95064a4213d3af517d90">sql_type<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1mysql__column.html#ac9829424748d87e015b9ebb3210eb44f">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;        };<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;    }<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;}<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1mysql__column_html"><div class="ttname"><a href="classarg3_1_1db_1_1mysql__column.html">arg3::db::mysql_column<\/a><\/div><div class="ttdef"><b>Definition:<\/b> mysql_column.h:26<\/div><\/div>$/;"	a
l00001	html/mysql__db_8h_source.html	/^<a href="mysql__db_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_SQLDB_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_SQLDB_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__db.html">   24<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>base_query;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            std::shared_ptr&lt;MYSQL&gt; db_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html#abd1a59e23c4a56c764be30b6cdab6bcb">mysql_db<\/a>(<span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1uri.html">uri<\/a> &amp;connInfo);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html#abd1a59e23c4a56c764be30b6cdab6bcb">mysql_db<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> &amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html#abd1a59e23c4a56c764be30b6cdab6bcb">mysql_db<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> &amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a>();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__db.html#ac6e0907dbed80be6bd29e01be510ab5a">is_open<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__db.html#af43681eead7bb4f63827d44404b6dfab">open<\/a>();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__db.html#aedfb7def25508c5b1a006f401b5dff1b">close<\/a>();<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__db.html#a49904ef043678ed708ea13b9fe4c0e39">last_insert_id<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__db.html#a1441e636b81bd279af4aedaaa2b24600">last_number_of_changes<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            <span class="keywordtype">string<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__db.html#a751fbc00f2202998af825240622d62f9">last_error<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__db.html#ada0315b71e0dfdb75b67af9e6345055d">execute<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">string<\/span> &amp;sql, <span class="keywordtype">bool<\/span> cache = <span class="keyword">false<\/span>);<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            shared_ptr&lt;statement&gt; <a class="code" href="classarg3_1_1db_1_1mysql__db.html#a23ec15ed984d8e960b117468877e6cac">create_statement<\/a>();<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        };<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    }<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;}<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1mysql__db_html_a1441e636b81bd279af4aedaaa2b24600"><div class="ttname"><a href="classarg3_1_1db_1_1mysql__db.html#a1441e636b81bd279af4aedaaa2b24600">arg3::db::mysql_db::last_number_of_changes<\/a><\/div><div class="ttdeci">int last_number_of_changes() const <\/div><\/div>$/;"	a
l00001	html/mysql__resultset_8h_source.html	/^<a href="mysql__resultset_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_RESULTSET_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resultset_8h.html">resultset.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">class <\/span>mysql_db;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">class <\/span>mysql_binding;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__resultset.html">   28<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;        {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            std::shared_ptr&lt;MYSQL_RES&gt; res_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            MYSQL_ROW row_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db_;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a06e285fa55d32bdeff0fe29161082a04">mysql_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="comment">\/* do not allow copying *\/<\/span><\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a06e285fa55d32bdeff0fe29161082a04">mysql_resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="comment">\/* allow moving *\/<\/span><\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a06e285fa55d32bdeff0fe29161082a04">mysql_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a>();<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a5d35fcb421ebb0e36d35ee372bcd6405">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a032e9cb9f070ed4ddc0e9aa1bb3d8938">current_row<\/a>();<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a2d79777b2d03cecf73103f44f4a1c09b">reset<\/a>();<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#aec022358bb861f078fe32be4d35d1302">next<\/a>();<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a01b57d021fc6b37535f8a7fb458526c2">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;        };<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">   89<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;        {<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            std::shared_ptr&lt;MYSQL_STMT&gt; stmt_;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            std::shared_ptr&lt;MYSQL_RES&gt; metadata_;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db_;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;            std::shared_ptr&lt;mysql_binding&gt; bindings_;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;            <span class="keywordtype">int<\/span> status_;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            <span class="keywordtype">void<\/span> prepare_results();<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_STMT&gt; &amp;stmt);<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;            <span class="comment">\/* non-copyable *\/<\/span><\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;            <span class="comment">\/* allow moving *\/<\/span><\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a>();<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a5d35fcb421ebb0e36d35ee372bcd6405">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a032e9cb9f070ed4ddc0e9aa1bb3d8938">current_row<\/a>();<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a2d79777b2d03cecf73103f44f4a1c09b">reset<\/a>();<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#aec022358bb861f078fe32be4d35d1302">next<\/a>();<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a01b57d021fc6b37535f8a7fb458526c2">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;        };<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__cached__resultset.html">  153<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;        {<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>;<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;row_impl&gt;&gt; rows_;<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;            <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_STMT&gt; &amp;stmt);<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res);<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;            <span class="comment">\/* non-copyable *\/<\/span><\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;            <span class="comment">\/* allow moving *\/<\/span><\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__cached__resultset.html">mysql_cached_resultset<\/a>();<\/div><div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a5d35fcb421ebb0e36d35ee372bcd6405">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;<\/div><div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a032e9cb9f070ed4ddc0e9aa1bb3d8938">current_row<\/a>();<\/div><div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a2d79777b2d03cecf73103f44f4a1c09b">reset<\/a>();<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#aec022358bb861f078fe32be4d35d1302">next<\/a>();<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;<\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__resultset.html#a01b57d021fc6b37535f8a7fb458526c2">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;        };<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div><div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;        <span class="keyword">namespace <\/span>helper<\/div><div class="line"><a name="l00217"><\/a><span class="lineno">  217<\/span>&#160;        {<\/div><div class="line"><a name="l00219"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1helper_1_1mysql__res__delete.html">  219<\/a><\/span>&#160;            <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1helper_1_1mysql__res__delete.html">mysql_res_delete<\/a> {<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;                <span class="keywordtype">void<\/span> operator()(MYSQL_RES *p) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;            };<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;        }<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;    }<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;}<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;<\/div><div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;<\/div><div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1mysql__resultset_html_a01b57d021fc6b37535f8a7fb458526c2"><div class="ttname"><a href="classarg3_1_1db_1_1mysql__resultset.html#a01b57d021fc6b37535f8a7fb458526c2">arg3::db::mysql_resultset::size<\/a><\/div><div class="ttdeci">size_t size() const <\/div><\/div>$/;"	a
l00001	html/mysql__row_8h_source.html	/^<a href="mysql__row_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_ROW_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="row_8h.html">row.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="mysql__column_8h.html">mysql_column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">class <\/span>mysql_db;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">class <\/span>mysql_binding;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__row.html">   29<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__row.html">mysql_row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;        {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__resultset.html">mysql_resultset<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            MYSQL_ROW row_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            std::shared_ptr&lt;MYSQL_RES&gt; res_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__row.html#ac7869a80053c07d28cba9803e46b7e7b">mysql_row<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__row.html">mysql_row<\/a>();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__row.html#ac7869a80053c07d28cba9803e46b7e7b">mysql_row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__row.html">mysql_row<\/a> &amp;other);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__row.html#ac7869a80053c07d28cba9803e46b7e7b">mysql_row<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__row.html">mysql_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__row.html">mysql_row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__row.html">mysql_row<\/a> &amp;other);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__row.html">mysql_row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__row.html">mysql_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a282b4adbf384fcab39da730d95a57ea9">column_name<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a46476e09a9f425b72a86842470f60758">column<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a46476e09a9f425b72a86842470f60758">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#afb8e98874e1230442c21d00543a6d5f1">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a10b9023181dfa6a53e643b26dc9939c6">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;        };<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__stmt__row.html">   90<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;        {<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a>;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            std::shared_ptr&lt;mysql_binding&gt; fields_;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;            std::shared_ptr&lt;MYSQL_RES&gt; metadata_;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;            std::shared_ptr&lt;MYSQL_STMT&gt; stmt_;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db_;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_STMT&gt; &amp;stmt, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;metadata,<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;                           <span class="keyword">const<\/span> std::shared_ptr&lt;mysql_binding&gt; &amp;fields);<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a>();<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a> &amp;other);<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a> &amp;other);<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__stmt__row.html">mysql_stmt_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a282b4adbf384fcab39da730d95a57ea9">column_name<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a46476e09a9f425b72a86842470f60758">column<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a46476e09a9f425b72a86842470f60758">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#afb8e98874e1230442c21d00543a6d5f1">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a10b9023181dfa6a53e643b26dc9939c6">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;        };<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<\/div><div class="line"><a name="l00150"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__cached__row.html">  150<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;        {<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__stmt__resultset.html">mysql_stmt_resultset<\/a>;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;mysql_cached_column&gt;&gt; columns_;<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> &amp;fields);<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;MYSQL_RES&gt; &amp;res, MYSQL_ROW <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__cached__row.html">mysql_cached_row<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a282b4adbf384fcab39da730d95a57ea9">column_name<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a46476e09a9f425b72a86842470f60758">column<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;<\/div><div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a46476e09a9f425b72a86842470f60758">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#afb8e98874e1230442c21d00543a6d5f1">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__row.html#a10b9023181dfa6a53e643b26dc9939c6">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;        };<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;    }<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;}<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;<\/div><div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;<\/div><div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1mysql__row_html_a282b4adbf384fcab39da730d95a57ea9"><div class="ttname"><a href="classarg3_1_1db_1_1mysql__row.html#a282b4adbf384fcab39da730d95a57ea9">arg3::db::mysql_row::column_name<\/a><\/div><div class="ttdeci">std::string column_name(size_t position) const <\/div><\/div>$/;"	a
l00001	html/mysql__statement_8h_source.html	/^<a href="mysql__statement_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_MYSQL_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_MYSQL_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBMYSQLCLIENT<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;mysql\/mysql.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="statement_8h.html">statement.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="mysql__binding_8h.html">mysql_binding.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">class <\/span>mysql_db;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1mysql__statement.html">   27<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html">statement<\/a><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            std::shared_ptr&lt;MYSQL_STMT&gt; stmt_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__binding.html">mysql_binding<\/a> bindings_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#a2068a80f19d3fda9853736272582e193">mysql_statement<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__db.html">mysql_db<\/a> *db);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#a2068a80f19d3fda9853736272582e193">mysql_statement<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#a2068a80f19d3fda9853736272582e193">mysql_statement<\/a>(<a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a>();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#a8fe95181a928104ddbe6dd900524289c">prepare<\/a>(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#ac472dc38bff196e7199dcd1170ac60e2">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#a87a700252c6973977a6409adf9faa171">results<\/a>();<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#a3fdf1d565e994ff8e375b2bd2c71e2bc">result<\/a>();<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#ada0d35f93464811de9a484d1efc74567">finish<\/a>();<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#ad065fdd4be080c57dcc8c01ca05ac929">reset<\/a>();<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#a798db0b03d3b3fc6297b5fba5e9401df">last_number_of_changes<\/a>();<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#a6f329e16b0f30582fb20bbce8e8c8dc6">last_insert_id<\/a>();<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1mysql__statement.html#a9a86b7cafe910bc4bf9e6d65c1135587">last_error<\/a>();<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1mysql__statement.html">mysql_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;        };<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;    }<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;}<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="statement_8h_html"><div class="ttname"><a href="statement_8h.html">statement.h<\/a><\/div><\/div>$/;"	a
l00001	html/postgres_2binding_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_BINDING_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_BINDING_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;..\/sql_value.h&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &quot;..\/bindable.h&quot;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">namespace <\/span>postgres<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        {<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <span class="keyword">namespace <\/span>data_mapper<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            {<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;                sql_value to_value(Oid type, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *value, <span class="keywordtype">int<\/span> len);<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            }<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="comment">\/*<\/span><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<span class="comment">             * utility class to simplify binding query parameters<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<span class="comment">             *\/<\/span><\/div><div class="line"><a name="l00032"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres_1_1binding.html">   32<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1bind__mapping.html">arg3::db::bind_mapping<\/a><\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            {<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1column.html">column<\/a>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a>;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                <span class="keywordtype">char<\/span> **values_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                Oid *types_;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                <span class="keywordtype">int<\/span> *lengths_;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                <span class="keywordtype">int<\/span> *formats_;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                <span class="keywordtype">void<\/span> copy_value(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                <span class="keywordtype">void<\/span> clear_value();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <span class="keywordtype">void<\/span> clear_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                <span class="keywordtype">bool<\/span> reallocate_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a>();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a>(<span class="keywordtype">size_t<\/span> size);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;other);<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;other);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a>();<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;                <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> to_value(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;                <span class="keywordtype">int<\/span> sql_type(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> value);<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">float<\/span> value);<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">sql_blob<\/a> &amp;value);<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_type &amp;value);<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;value);<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> &amp;bind(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value);<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;                std::string prepare(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;                <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            };<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;        }<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;    }<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;}<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="sql__value_8h_html_a235cefa981caffaaecb70c346e603c42"><div class="ttname"><a href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">arg3::db::sql_blob<\/a><\/div><div class="ttdeci">arg3::binary sql_blob<\/div><div class="ttdef"><b>Definition:<\/b> sql_value.h:34<\/div><\/div>$/;"	a
l00001	html/postgres_2column_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_COLUMN_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_COLUMN_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;..\/column.h&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">namespace <\/span>postgres<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres_1_1column.html">   26<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1column.html">column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;                std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;                <span class="keywordtype">int<\/span> column_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;                <span class="keywordtype">int<\/span> row_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1column.html#a73fd3e5dba6baf93cd66ea2ad250174a">column<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html">row<\/a>, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1column.html#a73fd3e5dba6baf93cd66ea2ad250174a">column<\/a>(<span class="keyword">const<\/span> column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1column.html#a73fd3e5dba6baf93cd66ea2ad250174a">column<\/a>(column &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                <span class="keyword">virtual<\/span> ~column();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                column &amp;operator=(<span class="keyword">const<\/span> column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                column &amp;operator=(column &amp;&amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="comment">\/* column_impl overrides *\/<\/span><\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1column.html#accfd384fb42caadc70247310a9b290d0">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> <a class="code" href="classarg3_1_1db_1_1postgres_1_1column.html#a7fd8aa01c0b77d5ab2c001f9bbc03f16">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1postgres_1_1column.html#a4056bf246f566c57c211471d14d89a0f">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            };<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;        }<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;    }<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;}<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1postgres_1_1column_html_a7fd8aa01c0b77d5ab2c001f9bbc03f16"><div class="ttname"><a href="classarg3_1_1db_1_1postgres_1_1column.html#a7fd8aa01c0b77d5ab2c001f9bbc03f16">arg3::db::postgres::column::to_value<\/a><\/div><div class="ttdeci">sql_value to_value() const <\/div><\/div>$/;"	a
l00001	html/postgres_2db_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef POSTGRES_DB_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define POSTGRES_DB_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;..\/sqldb.h&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">namespace <\/span>postgres<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres_1_1db.html">   26<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;               <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                std::shared_ptr&lt;PGconn&gt; db_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#a3671f54ec10e04c912d0dfc960f734c9">db<\/a>(<span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1uri__type.html">uri<\/a> &amp;info);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#a3671f54ec10e04c912d0dfc960f734c9">db<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a> &amp;other);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#a3671f54ec10e04c912d0dfc960f734c9">db<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a> &amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a>();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <span class="comment">\/* sqldb overrides *\/<\/span><\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#ae148694cc6a0be5fcfb9ac2b57378e65">is_open<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#a4ce7098ea0602db341dcb7d97d77762d">open<\/a>();<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#a33476a4a6c8e21238671296a09ea0b78">close<\/a>();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#af9989e2919a918cc8cf0c2760c806eb0">last_insert_id<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#afde4a5ff1a7fec3a4a49abce681bb510">last_number_of_changes<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#a84b166a58beb68ec8fbb8e87a691554e">last_error<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset_type<\/a> <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#ae82106abf007910ba38b366b6c4397a5">execute<\/a>(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                std::shared_ptr&lt;statement_type&gt; <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html#a33d1661b6eaf1297ff4c110145ae9c0a">create_statement<\/a>();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                std::string insert_sql(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> lastId_;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;                <span class="keywordtype">int<\/span> lastNumChanges_;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;                <span class="keywordtype">void<\/span> set_last_insert_id(<span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;                <span class="keywordtype">void<\/span> set_last_number_of_changes(<span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            };<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno"><a class="line" href="namespacearg3_1_1db_1_1postgres_1_1helper.html">   68<\/a><\/span>&#160;            <span class="keyword">namespace <\/span>helper<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            {<\/div><div class="line"><a name="l00070"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1postgres_1_1helper_1_1res__delete.html">   70<\/a><\/span>&#160;                <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1postgres_1_1helper_1_1res__delete.html">res_delete<\/a> {<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;                    <span class="keywordtype">void<\/span> operator()(PGresult *p) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;                };<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            }<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        }<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;    }<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;}<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="structarg3_1_1db_1_1uri__type_html"><div class="ttname"><a href="structarg3_1_1db_1_1uri__type.html">arg3::db::uri_type<\/a><\/div><div class="ttdef"><b>Definition:<\/b> sqldb.h:56<\/div><\/div>$/;"	a
l00001	html/postgres_2resultset_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_RESULTSET_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;..\/resultset.h&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">namespace <\/span>postgres<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keyword">class <\/span>db;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres_1_1resultset.html">   29<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;                <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;                std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">postgres::db<\/a> *db_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html#a648a41dd5d89fa3cd3363584d7fc118f">resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">postgres::db<\/a> *<a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a>, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html#a648a41dd5d89fa3cd3363584d7fc118f">resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html#a648a41dd5d89fa3cd3363584d7fc118f">resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a>();<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <span class="comment">\/* resultset_impl overrides *\/<\/span><\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html#af4ad87741d3711e45b1a303e9e54bcca">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row.html">row_type<\/a> <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html#a8246d792b5d84b4d52adaa176b5d77af">current_row<\/a>();<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html#af5738741a961722a977a4c6b664aecbf">reset<\/a>();<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html#a0d1b01cac53cfb51cd6c50ef31b864db">next<\/a>();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html#a9cec45ad2336d37d4586c229e7b8ca7e">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            };<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;        }<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;    }<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;}<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1postgres_1_1resultset_html_a8246d792b5d84b4d52adaa176b5d77af"><div class="ttname"><a href="classarg3_1_1db_1_1postgres_1_1resultset.html#a8246d792b5d84b4d52adaa176b5d77af">arg3::db::postgres::resultset::current_row<\/a><\/div><div class="ttdeci">row_type current_row()<\/div><\/div>$/;"	a
l00001	html/postgres_2row_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_ROW_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;..\/row.h&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;column.h&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">namespace <\/span>postgres<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keyword">class <\/span>db;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres_1_1row.html">   29<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html">row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1resultset.html">resultset<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;                std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">postgres::db<\/a> *db_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;                <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;                <span class="keywordtype">int<\/span> row_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html#a2201e731b02f532ca0f8c937cf678bea">row<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">postgres::db<\/a> *<a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a>, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="keyword">virtual<\/span> ~row();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html#a2201e731b02f532ca0f8c937cf678bea">row<\/a>(<span class="keyword">const<\/span> row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html#a2201e731b02f532ca0f8c937cf678bea">row<\/a>(row &amp;&amp;other);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                row &amp;operator=(<span class="keyword">const<\/span> row &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                row &amp;operator=(row &amp;&amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html#aea58b745f3b9b13f27e162dacb0e79f2">column_name<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html#aeeb08fec07b85471e0cc8499f05b3978">column<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html#aeeb08fec07b85471e0cc8499f05b3978">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html#a1dad46d81feb7b88573b362537cc35b7">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1row.html#a3d71375c4f407eb56a4b8461d9ecbfe4">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            };<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;        }<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;    }<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;}<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1postgres_1_1row_html_aea58b745f3b9b13f27e162dacb0e79f2"><div class="ttname"><a href="classarg3_1_1db_1_1postgres_1_1row.html#aea58b745f3b9b13f27e162dacb0e79f2">arg3::db::postgres::row::column_name<\/a><\/div><div class="ttdeci">std::string column_name(size_t nPosition) const <\/div><\/div>$/;"	a
l00001	html/postgres_2statement_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;..\/statement.h&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;binding.h&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">namespace <\/span>postgres<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keyword">class <\/span>db;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres_1_1statement.html">   29<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html">arg3::db::statement<\/a><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">postgres::db<\/a> *db_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;                std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> bindings_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;                std::string sql_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#aa772b671dc8ea065da1e18b380cfa3c8">statement<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">postgres::db<\/a> *<a class="code" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a>);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#aa772b671dc8ea065da1e18b380cfa3c8">statement<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#aa772b671dc8ea065da1e18b380cfa3c8">statement<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a>();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <span class="comment">\/* statement overrides *\/<\/span><\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ad3b175f9cb1bef75e7d8488169b7f4ea">prepare<\/a>(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#a847453939e4174eff8266ec7e5f5251a">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset_type<\/a> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#acc3c5272b17efb6652fcd5f45582b2ab">results<\/a>();<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#aff5074a60c2b5a3e739e0da76a4b9f8e">result<\/a>();<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#adfd53339de0eadfb54de8cc7e0c69ba1">finish<\/a>();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#a78cfeacff23490f53ddc5840aa1c2a99">reset<\/a>();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#a69c01d064848fa4b408d47d296b2e662">last_number_of_changes<\/a>();<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#a24af2b4abc6d588c1167edc649cbda0f">last_error<\/a>();<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab34ce6e0d23172e448c772562cde6367">last_insert_id<\/a>();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;                <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> value);<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">float<\/span> value);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">sql_blob<\/a> &amp;value);<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_type &amp;value);<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;value);<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1postgres_1_1statement.html#ab576d8fc6f74cb00793ee47b45ccf55b">bind<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value);<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            };<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;        }<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;    }<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;}<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1postgres_1_1statement_html_a69c01d064848fa4b408d47d296b2e662"><div class="ttname"><a href="classarg3_1_1db_1_1postgres_1_1statement.html#a69c01d064848fa4b408d47d296b2e662">arg3::db::postgres::statement::last_number_of_changes<\/a><\/div><div class="ttdeci">int last_number_of_changes()<\/div><\/div>$/;"	a
l00001	html/postgres__binding_8h_source.html	/^<a href="postgres__binding_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_BINDING_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_BINDING_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="bindable_8h.html">bindable.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres__binding.html">   23<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a><\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        {<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__column.html">postgres_column<\/a>;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a>;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keywordtype">char<\/span> **values_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            Oid *types_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keywordtype">int<\/span> *lengths_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keywordtype">int<\/span> *formats_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="keywordtype">void<\/span> copy_value(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;other);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keywordtype">void<\/span> clear_value();<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keywordtype">void<\/span> clear_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">bool<\/span> reallocate_value(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html#a2da46aeb67fe65740b6318316bbdbb0f">postgres_binding<\/a>();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html#a2da46aeb67fe65740b6318316bbdbb0f">postgres_binding<\/a>(<span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__binding.html#a6e30c7047e43b2444b41dbe98675ecab">size<\/a>);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html#a2da46aeb67fe65740b6318316bbdbb0f">postgres_binding<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;other);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html#a2da46aeb67fe65740b6318316bbdbb0f">postgres_binding<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a>();<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__binding.html#a6e30c7047e43b2444b41dbe98675ecab">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1postgres__binding.html#a911b7bc8796b0ef98d46cc43e9e27364">to_value<\/a>(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__binding.html#a420befc2ce8c3fdf5ac5c4892f11483a">sql_type<\/a>(<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__binding.html#a2f3bfb201d6d5ef47231ea2318719ae9">reset<\/a>();<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;        };<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;    }<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;}<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="bindable_8h_html"><div class="ttname"><a href="bindable_8h.html">bindable.h<\/a><\/div><\/div>$/;"	a
l00001	html/postgres__column_8h_source.html	/^<a href="postgres__column_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_COLUMN_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_COLUMN_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="column_8h.html">column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#define postgres_default_column postgres_cached_column<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres__column.html">   26<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__column.html">postgres_column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keywordtype">int<\/span> column_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keywordtype">int<\/span> row_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__column.html#adc71eb2f5853181560822c7028595e77">postgres_column<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__column.html#adc71eb2f5853181560822c7028595e77">postgres_column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__column.html">postgres_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__column.html#adc71eb2f5853181560822c7028595e77">postgres_column<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__column.html">postgres_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres__column.html">postgres_column<\/a>();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__column.html">postgres_column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__column.html">postgres_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__column.html">postgres_column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres__column.html">postgres_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__column.html#a037402cdc099c1a151005a50466c8572">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1postgres__column.html#a40a5235a13f0abb1e04ac54aa1309227">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__column.html#a5b0ea98d8a37c52b3c793d3880ffc0ba">sql_type<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1postgres__column.html#a55823943fcb323e3254dff10d769834d">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        };<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres__cached__column.html">   73<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        {<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            std::string name_;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            sql_value value_;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <span class="keywordtype">int<\/span> length_;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keywordtype">int<\/span> type_;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            <span class="keywordtype">void<\/span> set_value(<span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>, <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">size_t<\/span> row, <span class="keywordtype">size_t<\/span> column);<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a>();<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres__cached__column.html">postgres_cached_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__column.html#a037402cdc099c1a151005a50466c8572">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1postgres__column.html#a40a5235a13f0abb1e04ac54aa1309227">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__column.html#a5b0ea98d8a37c52b3c793d3880ffc0ba">sql_type<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1postgres__column.html#a55823943fcb323e3254dff10d769834d">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        };<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;    }<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;}<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1postgres__column_html_a037402cdc099c1a151005a50466c8572"><div class="ttname"><a href="classarg3_1_1db_1_1postgres__column.html#a037402cdc099c1a151005a50466c8572">arg3::db::postgres_column::is_valid<\/a><\/div><div class="ttdeci">bool is_valid() const <\/div><\/div>$/;"	a
l00001	html/postgres__db_8h_source.html	/^<a href="postgres__db_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef POSTGRES_DB_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define POSTGRES_DB_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres__db.html">   24<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>base_query;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            shared_ptr&lt;PGconn&gt; db_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__db.html#aa512d65817b4ab761b4f5ab485464ae8">postgres_db<\/a>(<span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1uri.html">uri<\/a> &amp;info);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__db.html#aa512d65817b4ab761b4f5ab485464ae8">postgres_db<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> &amp;other);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__db.html#aa512d65817b4ab761b4f5ab485464ae8">postgres_db<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> &amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a>();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__db.html#a96e0a67b9138850695702bed0fcdef4e">is_open<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__db.html#a6b4033284d8c66d0f4cdf3d550aa49e9">open<\/a>();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__db.html#a8087057fec12136961ab5c73f8df29fe">close<\/a>();<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <span class="keywordtype">int<\/span> last_number_of_changes() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            std::string last_error() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> execute(<span class="keyword">const<\/span> std::string &amp;sql, <span class="keywordtype">bool<\/span> cache = <span class="keyword">false<\/span>);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            std::shared_ptr&lt;statement&gt; create_statement();<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> lastId_;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <span class="keywordtype">int<\/span> lastNumChanges_;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keywordtype">void<\/span> set_last_insert_id(<span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keywordtype">void<\/span> set_last_number_of_changes(<span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;        };<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;        <span class="keyword">namespace <\/span>helper<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;        {<\/div><div class="line"><a name="l00079"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1helper_1_1postgres__res__delete.html">   79<\/a><\/span>&#160;            <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1helper_1_1postgres__res__delete.html">postgres_res_delete<\/a> {<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                <span class="keywordtype">void<\/span> operator()(PGresult *p) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            };<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        }<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;    }<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;}<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="structarg3_1_1db_1_1helper_1_1postgres__res__delete_html"><div class="ttname"><a href="structarg3_1_1db_1_1helper_1_1postgres__res__delete.html">arg3::db::helper::postgres_res_delete<\/a><\/div><div class="ttdef"><b>Definition:<\/b> postgres_db.h:79<\/div><\/div>$/;"	a
l00001	html/postgres__resultset_8h_source.html	/^<a href="postgres__resultset_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_RESULTSET_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resultset_8h.html">resultset.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">class <\/span>postgres_db;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres__resultset.html">   27<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> *db_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a>();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> current_row();<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        };<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres__cached__resultset.html">   63<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;        {<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> *db_;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;row_impl&gt;&gt; rows_;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt);<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a>();<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres__cached__resultset.html">postgres_cached_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> current_row();<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;        };<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;    }<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;}<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1postgres__cached__resultset_html"><div class="ttname"><a href="classarg3_1_1db_1_1postgres__cached__resultset.html">arg3::db::postgres_cached_resultset<\/a><\/div><div class="ttdef"><b>Definition:<\/b> postgres_resultset.h:63<\/div><\/div>$/;"	a
l00001	html/postgres__row_8h_source.html	/^<a href="postgres__row_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_ROW_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="row_8h.html">row.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="postgres__column_8h.html">postgres_column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="preprocessor">#define postgres_default_row arg3::db::postgres_cached_row<\/span><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;{<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;    {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">class <\/span>postgres_db;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres__row.html">   29<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;        {<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> *db_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">int<\/span> row_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a>();<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres__row.html">postgres_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        };<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres__cached__row.html">   57<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        {<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__resultset.html">postgres_resultset<\/a>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;postgres_cached_column&gt;&gt; columns_;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;PGresult&gt; &amp;stmt, <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a>();<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres__cached__row.html">postgres_cached_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;        };<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;    }<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;}<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1column_html"><div class="ttname"><a href="classarg3_1_1db_1_1column.html">arg3::db::column<\/a><\/div><div class="ttdef"><b>Definition:<\/b> column.h:53<\/div><\/div>$/;"	a
l00001	html/postgres__statement_8h_source.html	/^<a href="postgres__statement_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_POSTGRES_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_POSTGRES_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBPQ<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;libpq-fe.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="statement_8h.html">statement.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="postgres__binding_8h.html">postgres_binding.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">class <\/span>postgres_db;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1postgres__statement.html">   27<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html">statement<\/a><\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;        {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> *db_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            std::shared_ptr&lt;PGresult&gt; stmt_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__binding.html">postgres_binding<\/a> bindings_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            std::string sql_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__db.html">postgres_db<\/a> *db);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a>(<a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a>();<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html#a1067c03cbb705315d08482225f696a15">prepare<\/a>(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html#a043fce1cb6cb7dbd2475b45b0971bd4b">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html#afaf8a4dad49da5056881b82ec8e87f2f">results<\/a>();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html#ad325104afbaabebce49d43ea0c7f8042">result<\/a>();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html#aa9b4f71dcae0a908fc510e653dc8681d">finish<\/a>();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html#ab94b1e2c7ad0b2389a809465ccb2206c">reset<\/a>();<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html#a3b7be4042cf2f1d46ef4bc975d512898">last_number_of_changes<\/a>();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1postgres__statement.html#afb36aba5307db718f95fa799f82d6499">last_error<\/a>();<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1postgres__statement.html#a5f3e53a51d139ce32c4dbb5cc440fa9c">last_insert_id<\/a>();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1postgres__statement.html">postgres_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        };<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;    }<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;}<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="statement_8h_html"><div class="ttname"><a href="statement_8h.html">statement.h<\/a><\/div><\/div>$/;"	a
l00001	html/query_8h_source.html	/^<a href="query_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_QUERY_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_QUERY_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;map&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="schema_8h.html">schema.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;statement.h&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;{<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1query.html">   26<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">size_t<\/span> assert_binding_index(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db_;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            std::shared_ptr&lt;statement&gt; stmt_;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            std::vector&lt;sql_value&gt; params_;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            std::unordered_map&lt;std::string, sql_value&gt; named_params_;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1query.html#a432d7437a7a62d7cf5a6fb294accce4a">prepare<\/a>(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html#ada185ac2b666865639aa07edd14108f0">query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *<a class="code" href="classarg3_1_1db_1_1query.html#a950365f4c68b215c290864f9a8f93ccc">db<\/a>);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html#ada185ac2b666865639aa07edd14108f0">query<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;other) noexcept;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html#ada185ac2b666865639aa07edd14108f0">query<\/a>(<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;&amp;other) noexcept;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keyword">virtual<\/span> <a class="code" href="classarg3_1_1db_1_1query.html#a458f5af3ac8d6fd311f569fa8fe1b81a">~query<\/a>();<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1query.html#a8c1ae5c2cf25b106384b57bb09d49c31">reset<\/a>();<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *<a class="code" href="classarg3_1_1db_1_1query.html#a950365f4c68b215c290864f9a8f93ccc">db<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#a71373e8a8b3ba79dd3a06faafab71f11">operator=<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;other);<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#a71373e8a8b3ba79dd3a06faafab71f11">operator=<\/a>(<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> value);<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index);<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">float<\/span> value);<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">sql_blob<\/a> &amp;value);<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_type &amp;value);<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;value);<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html#af4c5ac65f84049fd025c5549d9c11c65">bind<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value);<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1query.html#ab57fd25085c7a6921a194cb1a4252822">last_error<\/a>();<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1query.html#a4e9d6627954125d9484258980805fd40">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;        };<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;    }<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;    <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00126"><\/a><span class="lineno"><a class="line" href="query_8h.html#ab95e62f7b77945c88f600e1d7ecd387e">  126<\/a><\/span>&#160;    std::string <a class="code" href="query_8h.html#ab95e62f7b77945c88f600e1d7ecd387e">join_csv<\/a>(<span class="keyword">const<\/span> std::vector&lt;T&gt; &amp;list)<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;    {<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;        std::ostringstream buf;<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;        <span class="keywordflow">if<\/span> (list.size() &gt; 0) {<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;            std::ostream_iterator&lt;T&gt; it(buf, <span class="stringliteral">&quot;,&quot;<\/span>);<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;<\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;            copy(list.begin(), list.end() - 1, it);<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;            buf &lt;&lt; *(list.end() - 1);<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;        }<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;        <span class="keywordflow">return<\/span> buf.str();<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;    }<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;    std::string <a class="code" href="query_8h.html#a6baa8459fef7ada0fa33497a8ac8583c">join_params<\/a>(<span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns, <span class="keywordtype">bool<\/span> update);<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;}<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="schema_8h_html"><div class="ttname"><a href="schema_8h.html">schema.h<\/a><\/div><\/div>$/;"	a
l00001	html/record_8h_source.html	/^<a href="record_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_BASE_RECORD_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_BASE_RECORD_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="select__query_8h.html">select_query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="modify__query_8h.html">modify_query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="schema_8h.html">schema.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;{<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    {<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html">   20<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="record_8h.html#a2290be34732802633cbb9050955344e5">   28<\/a><\/span>&#160;        <span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> <a class="code" href="record_8h.html#a2290be34732802633cbb9050955344e5">find_all<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> <span class="keyword">typename<\/span> record&lt;T&gt;::callback &amp;funk)<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;        {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(schema);<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keyword">auto<\/span> results = query.<a class="code" href="classarg3_1_1db_1_1select__query.html#acddd5d6566e95d2b8dad8d949d579d21">execute<\/a>();<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="keywordflow">if<\/span> (!results.is_valid()) <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> : results) {<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;                <span class="keywordflow">if<\/span> (<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>.<a class="code" href="classarg3_1_1db_1_1row.html#a9e1dc207cbd9d56bf4e71b8e03c1bd06">is_valid<\/a>()) {<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                    <span class="keyword">auto<\/span> <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a> = std::make_shared&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                    funk(<a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                }<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            }<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;        }<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="record_8h.html#ae8366ab9ce16bceadfdfdf8ee135a570">   50<\/a><\/span>&#160;        <span class="keyword">inline<\/span> std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="record_8h.html#a2290be34732802633cbb9050955344e5">find_all<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>)<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;        {<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="comment">\/* convert sql rows to objects *\/<\/span><\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; items;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            db::find_all&lt;T&gt;(schema, [&amp;items](std::shared_ptr&lt;T&gt; <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>) { items.push_back(<a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>); });<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keywordflow">return<\/span> items;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;        }<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno"><a class="line" href="record_8h.html#a49baa7b579816ebd2e3f95463c16c4e2">   68<\/a><\/span>&#160;        <span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> <a class="code" href="record_8h.html#a49baa7b579816ebd2e3f95463c16c4e2">find_by<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value,<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;                            <span class="keyword">const<\/span> <span class="keyword">typename<\/span> record&lt;T&gt;::callback &amp;funk)<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        {<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(schema);<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            query.<a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(name + <span class="stringliteral">&quot; = $1&quot;<\/span>, value);<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            <span class="keyword">auto<\/span> results = query.<a class="code" href="classarg3_1_1db_1_1select__query.html#acddd5d6566e95d2b8dad8d949d579d21">execute<\/a>();<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            <span class="keywordflow">if<\/span> (!results.is_valid()) <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> : results) {<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                <span class="keyword">auto<\/span> <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a> = std::make_shared&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>);<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;                funk(<a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>);<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            }<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;        }<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno"><a class="line" href="record_8h.html#af04fdffac95a8227c647a4d78fec1322">   93<\/a><\/span>&#160;        <span class="keyword">inline<\/span> <span class="keywordtype">void<\/span> <a class="code" href="record_8h.html#af04fdffac95a8227c647a4d78fec1322">find_one<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value,<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;                             <span class="keyword">const<\/span> <span class="keyword">typename<\/span> record&lt;T&gt;::callback &amp;funk)<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;        {<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(schema);<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            query.<a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(name + <span class="stringliteral">&quot; = $1&quot;<\/span>, value).limit(<span class="stringliteral">&quot;1&quot;<\/span>);<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;            <span class="keyword">auto<\/span> results = query.<a class="code" href="classarg3_1_1db_1_1select__query.html#acddd5d6566e95d2b8dad8d949d579d21">execute<\/a>();<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;            <span class="keywordflow">if<\/span> (!results.is_valid() || results.size() == 0) {<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;                <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            }<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;            funk(std::make_shared&lt;T&gt;(*results.begin()));<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;        }<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00117"><\/a><span class="lineno"><a class="line" href="record_8h.html#a9c506fb445aa2b52cec78cdee4190ecb">  117<\/a><\/span>&#160;        <span class="keyword">inline<\/span> std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="record_8h.html#a49baa7b579816ebd2e3f95463c16c4e2">find_by<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value)<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;        {<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;            <span class="comment">\/* convert sql rows to objects *\/<\/span><\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; items;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;            db::find_by&lt;T&gt;(schema, name, value, [&amp;items](std::shared_ptr&lt;T&gt; <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>) { items.push_back(<a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>); });<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;            <span class="keywordflow">return<\/span> items;<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;        }<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00135"><\/a><span class="lineno"><a class="line" href="record_8h.html#ae5f53c7e67ef1f59522f766060947dbf">  135<\/a><\/span>&#160;        <span class="keyword">inline<\/span> std::shared_ptr&lt;T&gt; <a class="code" href="record_8h.html#af04fdffac95a8227c647a4d78fec1322">find_one<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value)<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;        {<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            <span class="comment">\/* convert sql rows to objects *\/<\/span><\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;            std::shared_ptr&lt;T&gt; item;<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;            db::find_one&lt;T&gt;(schema, name, value, [&amp;item](std::shared_ptr&lt;T&gt; <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>) { item = <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>; });<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;            <span class="keywordflow">return<\/span> item;<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;        }<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1record.html">record<\/a><\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;        {<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a> schema_type;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;            <span class="keyword">typedef<\/span> std::function&lt;void(std::shared_ptr&lt;T&gt;)&gt; callback;<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;            std::shared_ptr&lt;schema_type&gt; schema_;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;            std::unordered_map&lt;std::string, sql_value&gt; values_;<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;            std::string idColumnName_;<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00166"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a27a0bc83e74d894071fa68dbbb2c317c">  166<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html#a27a0bc83e74d894071fa68dbbb2c317c">record<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tablename, <span class="keyword">const<\/span> std::string &amp;idColumnName)<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;                : schema_(db-&gt;schemas()-&gt;<a class="code" href="classarg3_1_1db_1_1record.html#a39d4f3b4c2e6ae435c013a8dc94ca0ca">get<\/a>(tablename)), idColumnName_(idColumnName)<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;            {<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;                <span class="keywordflow">if<\/span> (schema_ == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;                    <span class="keywordflow">throw<\/span> database_exception(<span class="stringliteral">&quot;no schema for record &quot;<\/span> + tablename);<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;                }<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;            }<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;<\/div><div class="line"><a name="l00178"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#ab47884ed7b19153b53cb3d95ab58880f">  178<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html#ab47884ed7b19153b53cb3d95ab58880f">record<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema_type&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;columnName) : schema_(schema), idColumnName_(columnName)<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;            {<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;                <span class="keywordflow">if<\/span> (schema_ == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;                    <span class="keywordflow">throw<\/span> database_exception(<span class="stringliteral">&quot;no schema for record&quot;<\/span>);<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;                }<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;            }<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> V&gt;<\/div><div class="line"><a name="l00191"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#adc1f988dce5712cf8a1325ddb580e286">  191<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html#adc1f988dce5712cf8a1325ddb580e286">record<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema_type&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;columnName, V value)<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>(schema, columnName)<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;            {<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;                <span class="keyword">set<\/span>(idColumnName_, value);<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;                <span class="comment">\/\/ load up from database<\/span><\/div><div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1record.html#ad8d5fc2076833fe79daae9bbe0b8f173">refresh<\/a>()) {<\/div><div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;                    <span class="keywordflow">throw<\/span> database_exception(<span class="stringliteral">&quot;no record found with &quot;<\/span> + columnName + <span class="stringliteral">&quot; of &quot;<\/span> + std::to_string(value));<\/div><div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;                }<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;            }<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;<\/div><div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> V&gt;<\/div><div class="line"><a name="l00208"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a2ddcd093ac51a98eecb0e26980333d1a">  208<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html#a2ddcd093ac51a98eecb0e26980333d1a">record<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::string &amp;columnName, <span class="keyword">const<\/span> V &amp;value)<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;                : <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>(db, tableName, columnName)<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;            {<\/div><div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;                <span class="keyword">set<\/span>(idColumnName_, value);<\/div><div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;                <span class="comment">\/\/ load up from database<\/span><\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1record.html#ad8d5fc2076833fe79daae9bbe0b8f173">refresh<\/a>()) {<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;                    <span class="keywordflow">throw<\/span> database_exception(<span class="stringliteral">&quot;no record found with &quot;<\/span> + columnName + <span class="stringliteral">&quot; of &quot;<\/span> + std::to_string(value));<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;                }<\/div><div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;            }<\/div><div class="line"><a name="l00217"><\/a><span class="lineno">  217<\/span>&#160;<\/div><div class="line"><a name="l00221"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a447977a5423d9eb9a3387667d68a00fb">  221<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html#a447977a5423d9eb9a3387667d68a00fb">record<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema_type&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::string &amp;columnName, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values) : <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>(schema, columnName)<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;            {<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1record.html#a1c50bec46ea79b30a7d5009df869c8b2">init<\/a>(values);<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;            }<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;<\/div><div class="line"><a name="l00229"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a58d15e85ca7e4a9cfb185f88733d0eae">  229<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html#a58d15e85ca7e4a9cfb185f88733d0eae">record<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::string &amp;columnName, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values) : <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>(db, tableName, columnName)<\/div><div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;            {<\/div><div class="line"><a name="l00231"><\/a><span class="lineno">  231<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1record.html#a1c50bec46ea79b30a7d5009df869c8b2">init<\/a>(values);<\/div><div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;            }<\/div><div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;<\/div><div class="line"><a name="l00237"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#af0e98bdb58ca594366fbf6ecbec7a075">  237<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html#af0e98bdb58ca594366fbf6ecbec7a075">record<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a> &amp;other) : schema_(other.schema_), values_(other.values_), idColumnName_(other.idColumnName_)<\/div><div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;            {<\/div><div class="line"><a name="l00239"><\/a><span class="lineno">  239<\/span>&#160;            }<\/div><div class="line"><a name="l00240"><\/a><span class="lineno">  240<\/span>&#160;<\/div><div class="line"><a name="l00244"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#af3494f57895adb4c970920b80f64eb36">  244<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html#af3494f57895adb4c970920b80f64eb36">record<\/a>(<a class="code" href="classarg3_1_1db_1_1record.html">record<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;                : schema_(<a class="code" href="namespacestd.html">std<\/a>::move(other.schema_)), values_(<a class="code" href="namespacestd.html">std<\/a>::move(other.values_)), idColumnName_(<a class="code" href="namespacestd.html">std<\/a>::move(other.idColumnName_))<\/div><div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;            {<\/div><div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;            }<\/div><div class="line"><a name="l00248"><\/a><span class="lineno">  248<\/span>&#160;<\/div><div class="line"><a name="l00249"><\/a><span class="lineno">  249<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1record.html">record<\/a>()<\/div><div class="line"><a name="l00250"><\/a><span class="lineno">  250<\/span>&#160;            {<\/div><div class="line"><a name="l00251"><\/a><span class="lineno">  251<\/span>&#160;            }<\/div><div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;<\/div><div class="line"><a name="l00256"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a4b94afbeae94e8f0dfca8d104e2b41fd">  256<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1record.html#a4b94afbeae94e8f0dfca8d104e2b41fd">operator=<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a> &amp;other)<\/div><div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;            {<\/div><div class="line"><a name="l00258"><\/a><span class="lineno">  258<\/span>&#160;                values_ = other.values_;<\/div><div class="line"><a name="l00259"><\/a><span class="lineno">  259<\/span>&#160;                schema_ = other.schema_;<\/div><div class="line"><a name="l00260"><\/a><span class="lineno">  260<\/span>&#160;                idColumnName_ = other.idColumnName_;<\/div><div class="line"><a name="l00261"><\/a><span class="lineno">  261<\/span>&#160;<\/div><div class="line"><a name="l00262"><\/a><span class="lineno">  262<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00263"><\/a><span class="lineno">  263<\/span>&#160;            }<\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;<\/div><div class="line"><a name="l00268"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a9ddcef17c16508ec70bf72b4f2405938">  268<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1record.html">record<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1record.html#a9ddcef17c16508ec70bf72b4f2405938">operator=<\/a>(<a class="code" href="classarg3_1_1db_1_1record.html">record<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00269"><\/a><span class="lineno">  269<\/span>&#160;            {<\/div><div class="line"><a name="l00270"><\/a><span class="lineno">  270<\/span>&#160;                values_ = std::move(other.values_);<\/div><div class="line"><a name="l00271"><\/a><span class="lineno">  271<\/span>&#160;                schema_ = std::move(other.schema_);<\/div><div class="line"><a name="l00272"><\/a><span class="lineno">  272<\/span>&#160;                idColumnName_ = std::move(other.idColumnName_);<\/div><div class="line"><a name="l00273"><\/a><span class="lineno">  273<\/span>&#160;<\/div><div class="line"><a name="l00274"><\/a><span class="lineno">  274<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00275"><\/a><span class="lineno">  275<\/span>&#160;            }<\/div><div class="line"><a name="l00276"><\/a><span class="lineno">  276<\/span>&#160;<\/div><div class="line"><a name="l00280"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#af6831b2afb5cea20138d76c523133a5a">  280<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#af6831b2afb5cea20138d76c523133a5a">set_id<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value)<\/div><div class="line"><a name="l00281"><\/a><span class="lineno">  281<\/span>&#160;            {<\/div><div class="line"><a name="l00282"><\/a><span class="lineno">  282<\/span>&#160;                <span class="keyword">set<\/span>(idColumnName_, value);<\/div><div class="line"><a name="l00283"><\/a><span class="lineno">  283<\/span>&#160;            }<\/div><div class="line"><a name="l00284"><\/a><span class="lineno">  284<\/span>&#160;<\/div><div class="line"><a name="l00288"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a25207fa470375e433953d592cf4de052">  288<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> <a class="code" href="classarg3_1_1db_1_1record.html#a25207fa470375e433953d592cf4de052">id<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00289"><\/a><span class="lineno">  289<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00290"><\/a><span class="lineno">  290<\/span>&#160;                <span class="keywordflow">return<\/span> <span class="keyword">get<\/span>(idColumnName_);<\/div><div class="line"><a name="l00291"><\/a><span class="lineno">  291<\/span>&#160;            }<\/div><div class="line"><a name="l00292"><\/a><span class="lineno">  292<\/span>&#160;<\/div><div class="line"><a name="l00296"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a1c50bec46ea79b30a7d5009df869c8b2">  296<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a1c50bec46ea79b30a7d5009df869c8b2">init<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00297"><\/a><span class="lineno">  297<\/span>&#160;            {<\/div><div class="line"><a name="l00298"><\/a><span class="lineno">  298<\/span>&#160;                <span class="keywordflow">if<\/span> (!values.<a class="code" href="classarg3_1_1db_1_1row.html#a9e1dc207cbd9d56bf4e71b8e03c1bd06">is_valid<\/a>()) {<\/div><div class="line"><a name="l00299"><\/a><span class="lineno">  299<\/span>&#160;                    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00300"><\/a><span class="lineno">  300<\/span>&#160;                }<\/div><div class="line"><a name="l00301"><\/a><span class="lineno">  301<\/span>&#160;<\/div><div class="line"><a name="l00302"><\/a><span class="lineno">  302<\/span>&#160;                <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> v = values.<a class="code" href="classarg3_1_1db_1_1row.html#a7bd980a82f226c8fb8c7f0d1fb27885d">begin<\/a>(); v != values.<a class="code" href="classarg3_1_1db_1_1row.html#ad823e47c1e9469cc89fad96eaf6f9fb7">end<\/a>(); ++v) {<\/div><div class="line"><a name="l00303"><\/a><span class="lineno">  303<\/span>&#160;                    <span class="keyword">set<\/span>(v.name(), v-&gt;to_value());<\/div><div class="line"><a name="l00304"><\/a><span class="lineno">  304<\/span>&#160;                }<\/div><div class="line"><a name="l00305"><\/a><span class="lineno">  305<\/span>&#160;<\/div><div class="line"><a name="l00306"><\/a><span class="lineno">  306<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1record.html#a7f6c01841008600d17c2e98318c9024f">on_record_init<\/a>(values);<\/div><div class="line"><a name="l00307"><\/a><span class="lineno">  307<\/span>&#160;            }<\/div><div class="line"><a name="l00308"><\/a><span class="lineno">  308<\/span>&#160;<\/div><div class="line"><a name="l00314"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a7f6c01841008600d17c2e98318c9024f">  314<\/a><\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a7f6c01841008600d17c2e98318c9024f">on_record_init<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;values)<\/div><div class="line"><a name="l00315"><\/a><span class="lineno">  315<\/span>&#160;            {<\/div><div class="line"><a name="l00316"><\/a><span class="lineno">  316<\/span>&#160;            }<\/div><div class="line"><a name="l00317"><\/a><span class="lineno">  317<\/span>&#160;<\/div><div class="line"><a name="l00322"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#af93d4cef6e4a97b388af422cd8d446a8">  322<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#af93d4cef6e4a97b388af422cd8d446a8">is_valid<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00323"><\/a><span class="lineno">  323<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00324"><\/a><span class="lineno">  324<\/span>&#160;                <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>()-&gt;is_valid();<\/div><div class="line"><a name="l00325"><\/a><span class="lineno">  325<\/span>&#160;            }<\/div><div class="line"><a name="l00326"><\/a><span class="lineno">  326<\/span>&#160;<\/div><div class="line"><a name="l00330"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a2c9fd9dfcec60372bc3fc2f94569277d">  330<\/a><\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1record.html#a2c9fd9dfcec60372bc3fc2f94569277d">id_column_name<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00331"><\/a><span class="lineno">  331<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00332"><\/a><span class="lineno">  332<\/span>&#160;                <span class="keywordflow">return<\/span> idColumnName_;<\/div><div class="line"><a name="l00333"><\/a><span class="lineno">  333<\/span>&#160;            }<\/div><div class="line"><a name="l00334"><\/a><span class="lineno">  334<\/span>&#160;<\/div><div class="line"><a name="l00338"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">  338<\/a><\/span>&#160;            std::shared_ptr&lt;schema_type&gt; <a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00339"><\/a><span class="lineno">  339<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00340"><\/a><span class="lineno">  340<\/span>&#160;                <span class="keywordflow">if<\/span> (schema_ != <span class="keyword">nullptr<\/span> &amp;&amp; !schema_-&gt;is_valid()) {<\/div><div class="line"><a name="l00341"><\/a><span class="lineno">  341<\/span>&#160;                    schema_-&gt;init();<\/div><div class="line"><a name="l00342"><\/a><span class="lineno">  342<\/span>&#160;                }<\/div><div class="line"><a name="l00343"><\/a><span class="lineno">  343<\/span>&#160;<\/div><div class="line"><a name="l00344"><\/a><span class="lineno">  344<\/span>&#160;                <span class="keywordflow">return<\/span> schema_;<\/div><div class="line"><a name="l00345"><\/a><span class="lineno">  345<\/span>&#160;            }<\/div><div class="line"><a name="l00346"><\/a><span class="lineno">  346<\/span>&#160;<\/div><div class="line"><a name="l00350"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a308f4fc478b203b4593f372c2d2997d8">  350<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a308f4fc478b203b4593f372c2d2997d8">exists<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00351"><\/a><span class="lineno">  351<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00352"><\/a><span class="lineno">  352<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1record.html#a635177bdfd10a68ad21ea62121b63ca3">has<\/a>(idColumnName_)) {<\/div><div class="line"><a name="l00353"><\/a><span class="lineno">  353<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00354"><\/a><span class="lineno">  354<\/span>&#160;                }<\/div><div class="line"><a name="l00355"><\/a><span class="lineno">  355<\/span>&#160;<\/div><div class="line"><a name="l00356"><\/a><span class="lineno">  356<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>());<\/div><div class="line"><a name="l00357"><\/a><span class="lineno">  357<\/span>&#160;<\/div><div class="line"><a name="l00358"><\/a><span class="lineno">  358<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(idColumnName_ + <span class="stringliteral">&quot; = $1&quot;<\/span>, <span class="keyword">get<\/span>(idColumnName_));<\/div><div class="line"><a name="l00359"><\/a><span class="lineno">  359<\/span>&#160;<\/div><div class="line"><a name="l00360"><\/a><span class="lineno">  360<\/span>&#160;                <span class="keywordflow">return<\/span> query.<a class="code" href="classarg3_1_1db_1_1select__query.html#a0dfc0ce9c472b133e81fd2a086ff2d8e">count<\/a>() &gt; 0;<\/div><div class="line"><a name="l00361"><\/a><span class="lineno">  361<\/span>&#160;            }<\/div><div class="line"><a name="l00362"><\/a><span class="lineno">  362<\/span>&#160;<\/div><div class="line"><a name="l00368"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#accd027f0e9f94d8ba7e365700800a649">  368<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#accd027f0e9f94d8ba7e365700800a649">save<\/a>()<\/div><div class="line"><a name="l00369"><\/a><span class="lineno">  369<\/span>&#160;            {<\/div><div class="line"><a name="l00370"><\/a><span class="lineno">  370<\/span>&#160;                <span class="keywordtype">size_t<\/span> index = 0;<\/div><div class="line"><a name="l00371"><\/a><span class="lineno">  371<\/span>&#160;                <span class="keywordtype">bool<\/span> rval = <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00372"><\/a><span class="lineno">  372<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a308f4fc478b203b4593f372c2d2997d8">exists<\/a> = <a class="code" href="classarg3_1_1db_1_1record.html#a308f4fc478b203b4593f372c2d2997d8">record::exists<\/a>();<\/div><div class="line"><a name="l00373"><\/a><span class="lineno">  373<\/span>&#160;                <span class="keyword">auto<\/span> cols_to_save = available_columns(exists);<\/div><div class="line"><a name="l00374"><\/a><span class="lineno">  374<\/span>&#160;<\/div><div class="line"><a name="l00375"><\/a><span class="lineno">  375<\/span>&#160;                <span class="keywordflow">if<\/span> (exists) {<\/div><div class="line"><a name="l00376"><\/a><span class="lineno">  376<\/span>&#160;                    <a class="code" href="classarg3_1_1db_1_1update__query.html">update_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>(), cols_to_save);<\/div><div class="line"><a name="l00377"><\/a><span class="lineno">  377<\/span>&#160;<\/div><div class="line"><a name="l00378"><\/a><span class="lineno">  378<\/span>&#160;                    query.<a class="code" href="classarg3_1_1db_1_1update__query.html#af5fbab05e4c12aa572a7e9f1a355a9d0">where<\/a>(idColumnName_ + <span class="stringliteral">&quot; = $&quot;<\/span> + std::to_string(cols_to_save.size() + 1));<\/div><div class="line"><a name="l00379"><\/a><span class="lineno">  379<\/span>&#160;<\/div><div class="line"><a name="l00380"><\/a><span class="lineno">  380<\/span>&#160;                    index = bind_columns_to_query(query, cols_to_save);<\/div><div class="line"><a name="l00381"><\/a><span class="lineno">  381<\/span>&#160;<\/div><div class="line"><a name="l00382"><\/a><span class="lineno">  382<\/span>&#160;                    <span class="comment">\/\/ add the where parameter<\/span><\/div><div class="line"><a name="l00383"><\/a><span class="lineno">  383<\/span>&#160;                    query.<a class="code" href="classarg3_1_1db_1_1bindable.html#a09aac616d78c663742610bd3f3d8ed53">bind_value<\/a>(++index, <span class="keyword">get<\/span>(idColumnName_));<\/div><div class="line"><a name="l00384"><\/a><span class="lineno">  384<\/span>&#160;<\/div><div class="line"><a name="l00385"><\/a><span class="lineno">  385<\/span>&#160;                    rval = query.<a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00386"><\/a><span class="lineno">  386<\/span>&#160;                } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00387"><\/a><span class="lineno">  387<\/span>&#160;                    <a class="code" href="classarg3_1_1db_1_1insert__query.html">insert_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>(), cols_to_save);<\/div><div class="line"><a name="l00388"><\/a><span class="lineno">  388<\/span>&#160;<\/div><div class="line"><a name="l00389"><\/a><span class="lineno">  389<\/span>&#160;                    bind_columns_to_query(query, cols_to_save);<\/div><div class="line"><a name="l00390"><\/a><span class="lineno">  390<\/span>&#160;<\/div><div class="line"><a name="l00391"><\/a><span class="lineno">  391<\/span>&#160;                    rval = query.<a class="code" href="classarg3_1_1db_1_1insert__query.html#a1794ad08338721f1d3ffd8ded76f004a">execute<\/a>();<\/div><div class="line"><a name="l00392"><\/a><span class="lineno">  392<\/span>&#160;<\/div><div class="line"><a name="l00393"><\/a><span class="lineno">  393<\/span>&#160;                    <span class="keywordflow">if<\/span> (rval) {<\/div><div class="line"><a name="l00394"><\/a><span class="lineno">  394<\/span>&#160;                        <span class="comment">\/\/ set the new id<\/span><\/div><div class="line"><a name="l00395"><\/a><span class="lineno">  395<\/span>&#160;                        <span class="keyword">set<\/span>(idColumnName_, query.<a class="code" href="classarg3_1_1db_1_1insert__query.html#ae87029031cfd2762c898dc0b5e0a9a62">last_insert_id<\/a>());<\/div><div class="line"><a name="l00396"><\/a><span class="lineno">  396<\/span>&#160;                    }<\/div><div class="line"><a name="l00397"><\/a><span class="lineno">  397<\/span>&#160;                }<\/div><div class="line"><a name="l00398"><\/a><span class="lineno">  398<\/span>&#160;<\/div><div class="line"><a name="l00399"><\/a><span class="lineno">  399<\/span>&#160;                <span class="keywordflow">return<\/span> rval;<\/div><div class="line"><a name="l00400"><\/a><span class="lineno">  400<\/span>&#160;            }<\/div><div class="line"><a name="l00401"><\/a><span class="lineno">  401<\/span>&#160;<\/div><div class="line"><a name="l00406"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a39d4f3b4c2e6ae435c013a8dc94ca0ca">  406<\/a><\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> <span class="keyword">get<\/span>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span><\/div><div class="line"><a name="l00407"><\/a><span class="lineno">  407<\/span>&#160;            {<\/div><div class="line"><a name="l00408"><\/a><span class="lineno">  408<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1record.html#a635177bdfd10a68ad21ea62121b63ca3">has<\/a>(name)) {<\/div><div class="line"><a name="l00409"><\/a><span class="lineno">  409<\/span>&#160;                    <span class="keywordflow">return<\/span> <a class="code" href="sql__value_8h.html#a1f0f99e4b148d33a240390b09a716d55">sql_null<\/a>;<\/div><div class="line"><a name="l00410"><\/a><span class="lineno">  410<\/span>&#160;                }<\/div><div class="line"><a name="l00411"><\/a><span class="lineno">  411<\/span>&#160;<\/div><div class="line"><a name="l00412"><\/a><span class="lineno">  412<\/span>&#160;                <span class="keywordflow">return<\/span> values_.at(name);<\/div><div class="line"><a name="l00413"><\/a><span class="lineno">  413<\/span>&#160;            }<\/div><div class="line"><a name="l00414"><\/a><span class="lineno">  414<\/span>&#160;<\/div><div class="line"><a name="l00421"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a635177bdfd10a68ad21ea62121b63ca3">  421<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a635177bdfd10a68ad21ea62121b63ca3">has<\/a>(<span class="keyword">const<\/span> std::string &amp;name)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00422"><\/a><span class="lineno">  422<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00423"><\/a><span class="lineno">  423<\/span>&#160;                <span class="keywordflow">return<\/span> values_.size() &gt; 0 &amp;&amp; values_.count(name) &gt; 0;<\/div><div class="line"><a name="l00424"><\/a><span class="lineno">  424<\/span>&#160;            }<\/div><div class="line"><a name="l00425"><\/a><span class="lineno">  425<\/span>&#160;<\/div><div class="line"><a name="l00431"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#ae3d89cf8a97a967aee40cb5ac78b6d5c">  431<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <span class="keyword">set<\/span>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value)<\/div><div class="line"><a name="l00432"><\/a><span class="lineno">  432<\/span>&#160;            {<\/div><div class="line"><a name="l00433"><\/a><span class="lineno">  433<\/span>&#160;                values_[name] = value;<\/div><div class="line"><a name="l00434"><\/a><span class="lineno">  434<\/span>&#160;            }<\/div><div class="line"><a name="l00435"><\/a><span class="lineno">  435<\/span>&#160;<\/div><div class="line"><a name="l00440"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a51529630f8ae9b4e58d1f406ec910833">  440<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a51529630f8ae9b4e58d1f406ec910833">unset<\/a>(<span class="keyword">const<\/span> std::string &amp;name)<\/div><div class="line"><a name="l00441"><\/a><span class="lineno">  441<\/span>&#160;            {<\/div><div class="line"><a name="l00442"><\/a><span class="lineno">  442<\/span>&#160;                values_.erase(name);<\/div><div class="line"><a name="l00443"><\/a><span class="lineno">  443<\/span>&#160;            }<\/div><div class="line"><a name="l00444"><\/a><span class="lineno">  444<\/span>&#160;<\/div><div class="line"><a name="l00449"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a2e55c448eca1e93d1a91712784832dd8">  449<\/a><\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="classarg3_1_1db_1_1record.html#a2e55c448eca1e93d1a91712784832dd8">find_all<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00450"><\/a><span class="lineno">  450<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00451"><\/a><span class="lineno">  451<\/span>&#160;                <span class="keywordflow">return<\/span> arg3::db::find_all&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>());<\/div><div class="line"><a name="l00452"><\/a><span class="lineno">  452<\/span>&#160;            }<\/div><div class="line"><a name="l00453"><\/a><span class="lineno">  453<\/span>&#160;<\/div><div class="line"><a name="l00458"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#af7e6d0d8965cb5c2102e2b4f0759b0bc">  458<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#af7e6d0d8965cb5c2102e2b4f0759b0bc">find_all<\/a>(<span class="keyword">const<\/span> callback &amp;funk)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00459"><\/a><span class="lineno">  459<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00460"><\/a><span class="lineno">  460<\/span>&#160;                arg3::db::find_all&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>(), funk);<\/div><div class="line"><a name="l00461"><\/a><span class="lineno">  461<\/span>&#160;            }<\/div><div class="line"><a name="l00462"><\/a><span class="lineno">  462<\/span>&#160;<\/div><div class="line"><a name="l00466"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a9d0d89fb13062b521f570be62c46edee">  466<\/a><\/span>&#160;            std::shared_ptr&lt;T&gt; <a class="code" href="classarg3_1_1db_1_1record.html#a9d0d89fb13062b521f570be62c46edee">find_by_id<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00467"><\/a><span class="lineno">  467<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00468"><\/a><span class="lineno">  468<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>());<\/div><div class="line"><a name="l00469"><\/a><span class="lineno">  469<\/span>&#160;<\/div><div class="line"><a name="l00470"><\/a><span class="lineno">  470<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(idColumnName_ + <span class="stringliteral">&quot; = $1&quot;<\/span>, value);<\/div><div class="line"><a name="l00471"><\/a><span class="lineno">  471<\/span>&#160;<\/div><div class="line"><a name="l00472"><\/a><span class="lineno">  472<\/span>&#160;                <span class="keyword">auto<\/span> results = query.<a class="code" href="classarg3_1_1db_1_1select__query.html#acddd5d6566e95d2b8dad8d949d579d21">execute<\/a>();<\/div><div class="line"><a name="l00473"><\/a><span class="lineno">  473<\/span>&#160;<\/div><div class="line"><a name="l00474"><\/a><span class="lineno">  474<\/span>&#160;                <span class="keyword">auto<\/span> it = results.<a class="code" href="classarg3_1_1db_1_1resultset.html#a31b572e1b4957ed1923a2a20b947b7a3">begin<\/a>();<\/div><div class="line"><a name="l00475"><\/a><span class="lineno">  475<\/span>&#160;<\/div><div class="line"><a name="l00476"><\/a><span class="lineno">  476<\/span>&#160;                <span class="keywordflow">if<\/span> (it != results.end()) {<\/div><div class="line"><a name="l00477"><\/a><span class="lineno">  477<\/span>&#160;                    <span class="keywordflow">return<\/span> std::make_shared&lt;T&gt;(*it);<\/div><div class="line"><a name="l00478"><\/a><span class="lineno">  478<\/span>&#160;                }<\/div><div class="line"><a name="l00479"><\/a><span class="lineno">  479<\/span>&#160;<\/div><div class="line"><a name="l00480"><\/a><span class="lineno">  480<\/span>&#160;                <span class="keywordflow">throw<\/span> record_not_found_exception();<\/div><div class="line"><a name="l00481"><\/a><span class="lineno">  481<\/span>&#160;            }<\/div><div class="line"><a name="l00482"><\/a><span class="lineno">  482<\/span>&#160;<\/div><div class="line"><a name="l00489"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#afedbb3ad06233bd689a3fffb061a4be7">  489<\/a><\/span>&#160;            std::vector&lt;std::shared_ptr&lt;T&gt;&gt; <a class="code" href="classarg3_1_1db_1_1record.html#afedbb3ad06233bd689a3fffb061a4be7">find_by<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00490"><\/a><span class="lineno">  490<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00491"><\/a><span class="lineno">  491<\/span>&#160;                <span class="keywordflow">return<\/span> arg3::db::find_by&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>(), name, value);<\/div><div class="line"><a name="l00492"><\/a><span class="lineno">  492<\/span>&#160;            }<\/div><div class="line"><a name="l00493"><\/a><span class="lineno">  493<\/span>&#160;<\/div><div class="line"><a name="l00500"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a7d983b6fc754695161ffb009f4e16969">  500<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a7d983b6fc754695161ffb009f4e16969">find_by<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value, <span class="keyword">const<\/span> callback &amp;funk)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00501"><\/a><span class="lineno">  501<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00502"><\/a><span class="lineno">  502<\/span>&#160;                arg3::db::find_by&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>(), name, value, funk);<\/div><div class="line"><a name="l00503"><\/a><span class="lineno">  503<\/span>&#160;            }<\/div><div class="line"><a name="l00504"><\/a><span class="lineno">  504<\/span>&#160;<\/div><div class="line"><a name="l00505"><\/a><span class="lineno">  505<\/span>&#160;<\/div><div class="line"><a name="l00512"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#acb1489d003076ef6d23417fe340637f6">  512<\/a><\/span>&#160;            std::shared_ptr&lt;T&gt; <a class="code" href="classarg3_1_1db_1_1record.html#acb1489d003076ef6d23417fe340637f6">find_one<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00513"><\/a><span class="lineno">  513<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00514"><\/a><span class="lineno">  514<\/span>&#160;                <span class="keywordflow">return<\/span> arg3::db::find_one&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>(), name, value);<\/div><div class="line"><a name="l00515"><\/a><span class="lineno">  515<\/span>&#160;            }<\/div><div class="line"><a name="l00516"><\/a><span class="lineno">  516<\/span>&#160;<\/div><div class="line"><a name="l00523"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a07e2e78bd989d7e51320bbc0ee60bf3f">  523<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a07e2e78bd989d7e51320bbc0ee60bf3f">find_one<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value, <span class="keyword">const<\/span> callback &amp;funk)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00524"><\/a><span class="lineno">  524<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00525"><\/a><span class="lineno">  525<\/span>&#160;                arg3::db::find_one&lt;T&gt;(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>(), name, value, funk);<\/div><div class="line"><a name="l00526"><\/a><span class="lineno">  526<\/span>&#160;            }<\/div><div class="line"><a name="l00527"><\/a><span class="lineno">  527<\/span>&#160;<\/div><div class="line"><a name="l00531"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a52aa46d38aa40f97553a3855601f9052">  531<\/a><\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a52aa46d38aa40f97553a3855601f9052">reset<\/a>()<\/div><div class="line"><a name="l00532"><\/a><span class="lineno">  532<\/span>&#160;            {<\/div><div class="line"><a name="l00533"><\/a><span class="lineno">  533<\/span>&#160;                values_.clear();<\/div><div class="line"><a name="l00534"><\/a><span class="lineno">  534<\/span>&#160;            }<\/div><div class="line"><a name="l00535"><\/a><span class="lineno">  535<\/span>&#160;<\/div><div class="line"><a name="l00540"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#ad8d5fc2076833fe79daae9bbe0b8f173">  540<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#ad8d5fc2076833fe79daae9bbe0b8f173">refresh<\/a>()<\/div><div class="line"><a name="l00541"><\/a><span class="lineno">  541<\/span>&#160;            {<\/div><div class="line"><a name="l00542"><\/a><span class="lineno">  542<\/span>&#160;                <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a41c1e2959f3896a5d3a4a42e95da96eb">refresh_by<\/a>(idColumnName_);<\/div><div class="line"><a name="l00543"><\/a><span class="lineno">  543<\/span>&#160;            }<\/div><div class="line"><a name="l00544"><\/a><span class="lineno">  544<\/span>&#160;<\/div><div class="line"><a name="l00550"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#a41c1e2959f3896a5d3a4a42e95da96eb">  550<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a41c1e2959f3896a5d3a4a42e95da96eb">refresh_by<\/a>(<span class="keyword">const<\/span> std::string &amp;name)<\/div><div class="line"><a name="l00551"><\/a><span class="lineno">  551<\/span>&#160;            {<\/div><div class="line"><a name="l00552"><\/a><span class="lineno">  552<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1record.html#a635177bdfd10a68ad21ea62121b63ca3">has<\/a>(name)) {<\/div><div class="line"><a name="l00553"><\/a><span class="lineno">  553<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00554"><\/a><span class="lineno">  554<\/span>&#160;                }<\/div><div class="line"><a name="l00555"><\/a><span class="lineno">  555<\/span>&#160;<\/div><div class="line"><a name="l00556"><\/a><span class="lineno">  556<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>());<\/div><div class="line"><a name="l00557"><\/a><span class="lineno">  557<\/span>&#160;<\/div><div class="line"><a name="l00558"><\/a><span class="lineno">  558<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(name + <span class="stringliteral">&quot; = $1&quot;<\/span>, <span class="keyword">get<\/span>(name)).limit(<span class="stringliteral">&quot;1&quot;<\/span>);<\/div><div class="line"><a name="l00559"><\/a><span class="lineno">  559<\/span>&#160;<\/div><div class="line"><a name="l00560"><\/a><span class="lineno">  560<\/span>&#160;                <span class="keyword">auto<\/span> result = query.<a class="code" href="classarg3_1_1db_1_1select__query.html#acddd5d6566e95d2b8dad8d949d579d21">execute<\/a>();<\/div><div class="line"><a name="l00561"><\/a><span class="lineno">  561<\/span>&#160;<\/div><div class="line"><a name="l00562"><\/a><span class="lineno">  562<\/span>&#160;                <span class="keyword">auto<\/span> it = result.<a class="code" href="classarg3_1_1db_1_1resultset.html#a31b572e1b4957ed1923a2a20b947b7a3">begin<\/a>();<\/div><div class="line"><a name="l00563"><\/a><span class="lineno">  563<\/span>&#160;<\/div><div class="line"><a name="l00564"><\/a><span class="lineno">  564<\/span>&#160;                <span class="keywordflow">if<\/span> (it == result.end()) {<\/div><div class="line"><a name="l00565"><\/a><span class="lineno">  565<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00566"><\/a><span class="lineno">  566<\/span>&#160;                }<\/div><div class="line"><a name="l00567"><\/a><span class="lineno">  567<\/span>&#160;<\/div><div class="line"><a name="l00568"><\/a><span class="lineno">  568<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1record.html#a1c50bec46ea79b30a7d5009df869c8b2">init<\/a>(*it);<\/div><div class="line"><a name="l00569"><\/a><span class="lineno">  569<\/span>&#160;<\/div><div class="line"><a name="l00570"><\/a><span class="lineno">  570<\/span>&#160;                <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>;<\/div><div class="line"><a name="l00571"><\/a><span class="lineno">  571<\/span>&#160;            }<\/div><div class="line"><a name="l00572"><\/a><span class="lineno">  572<\/span>&#160;<\/div><div class="line"><a name="l00576"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1record.html#ad86d72ce3562e676542673ac6f4c236a">  576<\/a><\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#ad86d72ce3562e676542673ac6f4c236a">de1ete<\/a>()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00577"><\/a><span class="lineno">  577<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00578"><\/a><span class="lineno">  578<\/span>&#160;                <span class="keywordflow">if<\/span> (!<a class="code" href="classarg3_1_1db_1_1record.html#a635177bdfd10a68ad21ea62121b63ca3">has<\/a>(idColumnName_)) {<\/div><div class="line"><a name="l00579"><\/a><span class="lineno">  579<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00580"><\/a><span class="lineno">  580<\/span>&#160;                }<\/div><div class="line"><a name="l00581"><\/a><span class="lineno">  581<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1delete__query.html">delete_query<\/a> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>(<a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>());<\/div><div class="line"><a name="l00582"><\/a><span class="lineno">  582<\/span>&#160;<\/div><div class="line"><a name="l00583"><\/a><span class="lineno">  583<\/span>&#160;                query.<a class="code" href="classarg3_1_1db_1_1update__query.html#af5fbab05e4c12aa572a7e9f1a355a9d0">where<\/a>(idColumnName_ + <span class="stringliteral">&quot; = $1&quot;<\/span>, <span class="keywordtype">id<\/span>());<\/div><div class="line"><a name="l00584"><\/a><span class="lineno">  584<\/span>&#160;<\/div><div class="line"><a name="l00585"><\/a><span class="lineno">  585<\/span>&#160;                <span class="keywordflow">return<\/span> query.<a class="code" href="classarg3_1_1db_1_1modify__query.html#aabd9d308826ad011ff97a1555dbeb76d">execute<\/a>();<\/div><div class="line"><a name="l00586"><\/a><span class="lineno">  586<\/span>&#160;            }<\/div><div class="line"><a name="l00587"><\/a><span class="lineno">  587<\/span>&#160;<\/div><div class="line"><a name="l00588"><\/a><span class="lineno">  588<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00589"><\/a><span class="lineno">  589<\/span>&#160;            std::vector&lt;std::string&gt; available_columns(<span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a308f4fc478b203b4593f372c2d2997d8">exists<\/a>)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00590"><\/a><span class="lineno">  590<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00591"><\/a><span class="lineno">  591<\/span>&#160;                std::vector&lt;std::string&gt; columns = <a class="code" href="classarg3_1_1db_1_1record.html#ac3f55f1d8d3a1e13e7e4a9f4f8d9a65a">schema<\/a>()-&gt;column_names();<\/div><div class="line"><a name="l00592"><\/a><span class="lineno">  592<\/span>&#160;                std::vector&lt;std::string&gt; values(columns.size());<\/div><div class="line"><a name="l00593"><\/a><span class="lineno">  593<\/span>&#160;                <span class="keyword">auto<\/span> it = std::copy_if(columns.begin(), columns.end(), values.begin(),<\/div><div class="line"><a name="l00594"><\/a><span class="lineno">  594<\/span>&#160;                                       [&amp;](<span class="keyword">const<\/span> std::string &amp;val) { <span class="keywordflow">return<\/span> <a class="code" href="classarg3_1_1db_1_1record.html#a635177bdfd10a68ad21ea62121b63ca3">has<\/a>(val) &amp;&amp; (exists || val != idColumnName_); });<\/div><div class="line"><a name="l00595"><\/a><span class="lineno">  595<\/span>&#160;                values.resize(std::distance(values.begin(), it));<\/div><div class="line"><a name="l00596"><\/a><span class="lineno">  596<\/span>&#160;                <span class="keywordflow">return<\/span> values;<\/div><div class="line"><a name="l00597"><\/a><span class="lineno">  597<\/span>&#160;            }<\/div><div class="line"><a name="l00598"><\/a><span class="lineno">  598<\/span>&#160;<\/div><div class="line"><a name="l00599"><\/a><span class="lineno">  599<\/span>&#160;            <span class="keywordtype">size_t<\/span> bind_columns_to_query(<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00600"><\/a><span class="lineno">  600<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00601"><\/a><span class="lineno">  601<\/span>&#160;                <span class="keywordtype">size_t<\/span> index = 0;<\/div><div class="line"><a name="l00602"><\/a><span class="lineno">  602<\/span>&#160;<\/div><div class="line"><a name="l00603"><\/a><span class="lineno">  603<\/span>&#160;                <span class="comment">\/\/ bind the column values<\/span><\/div><div class="line"><a name="l00604"><\/a><span class="lineno">  604<\/span>&#160;                <span class="keywordflow">for<\/span> (<span class="keyword">auto<\/span> &amp;<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a> : columns) {<\/div><div class="line"><a name="l00605"><\/a><span class="lineno">  605<\/span>&#160;                    <span class="keyword">auto<\/span> value = <span class="keyword">get<\/span>(<a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00606"><\/a><span class="lineno">  606<\/span>&#160;                    query.<a class="code" href="classarg3_1_1db_1_1bindable.html#a09aac616d78c663742610bd3f3d8ed53">bind_value<\/a>(++index, value);<\/div><div class="line"><a name="l00607"><\/a><span class="lineno">  607<\/span>&#160;                }<\/div><div class="line"><a name="l00608"><\/a><span class="lineno">  608<\/span>&#160;<\/div><div class="line"><a name="l00609"><\/a><span class="lineno">  609<\/span>&#160;                <span class="keywordflow">return<\/span> index;<\/div><div class="line"><a name="l00610"><\/a><span class="lineno">  610<\/span>&#160;            }<\/div><div class="line"><a name="l00611"><\/a><span class="lineno">  611<\/span>&#160;        };<\/div><div class="line"><a name="l00612"><\/a><span class="lineno">  612<\/span>&#160;    }<\/div><div class="line"><a name="l00613"><\/a><span class="lineno">  613<\/span>&#160;}<\/div><div class="line"><a name="l00614"><\/a><span class="lineno">  614<\/span>&#160;<\/div><div class="line"><a name="l00615"><\/a><span class="lineno">  615<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1schema_html"><div class="ttname"><a href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a><\/div><div class="ttdef"><b>Definition:<\/b> schema.h:35<\/div><\/div>$/;"	a
l00001	html/resultset_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_RESULTSET_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;row.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="exception_8h.html">exception.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;        <span class="keyword">class <\/span>resultset;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1resultset__impl.html">   21<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">arg3::db::row<\/a> <a class="code" href="classarg3_1_1db_1_1row.html">row_type<\/a>;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="comment">\/* non-copyable *\/<\/span><\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a>(<a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a623829de469943e77b0d5f0ba0cb4979">is_valid<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a48085387928fe27a0355ecd83b4edc9c">next<\/a>() = 0;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <span class="keyword">virtual<\/span> row_type <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a3d71b909ced065bf983edfee012c3706">current_row<\/a>() = 0;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a94d6e89a72e0ccd36474bed63cfcb802">reset<\/a>() = 0;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a429c953f4094c91b555cd0ada62359eb">size<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;        };<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> ValueType, <span class="keyword">typename<\/span> NonConst&gt;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1resultset__iterator.html">   71<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> : <span class="keyword">public<\/span> std::iterator&lt;std::input_iterator_tag, ValueType&gt;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;        {<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            std::shared_ptr&lt;resultset_impl&gt; rs_;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            <span class="keywordtype">int<\/span> pos_;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            NonConst value_;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;resultset_impl&gt; &amp;rset, <span class="keywordtype">int<\/span> position) : rs_(rset), pos_(position), value_(rset-&gt;current_row())<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            {<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            }<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other) : rs_(other.rs_), pos_(other.pos_), value_(other.value_)<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            {<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;            }<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>(<a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;&amp;other) : rs_(std::move(other.rs_)), pos_(other.pos_), value_(std::move(other.value_))<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            {<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;                other.rs_ = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;                other.pos_ = -1;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            }<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            ~<a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>()<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            {<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;            }<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            {<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;                rs_ = std::move(other.rs_);<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;                pos_ = other.pos_;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;                value_ = std::move(other.value_);<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;                other.rs_ = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;                other.pos_ = -1;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            }<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            ValueType &amp;operator*()<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            {<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;                <span class="keywordflow">return<\/span> value_;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;            }<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;operator++()<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;            {<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;                <span class="keywordflow">if<\/span> (pos_ == -1 || rs_ == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;                    <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;                }<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;                <span class="keywordtype">bool<\/span> res = rs_-&gt;next();<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;                <span class="keywordflow">if<\/span> (res) {<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;                    pos_++;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;                    value_ = rs_-&gt;current_row();<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;                } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;                    pos_ = -1;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;                    value_ = NonConst();<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;                }<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;            }<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;<\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;            ValueType *operator-&gt;()<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;            {<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;                <span class="keywordflow">return<\/span> &amp;(operator*());<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            }<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> operator++(<span class="keywordtype">int<\/span>)<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;            {<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;                ++(*this);<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;            }<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> operator+(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;            {<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;                tmp += n;<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;            }<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;operator+=(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;            {<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;                <span class="keywordflow">for<\/span> (<span class="keywordtype">int<\/span> i = 0; i &lt; n; i++) {<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;                    operator++();<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;                }<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;            }<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;            <span class="keywordtype">bool<\/span> operator==(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;                <span class="keywordflow">return<\/span> pos_ == other.pos_;<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;            }<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;            <span class="keywordtype">bool<\/span> operator!=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;                <span class="keywordflow">return<\/span> !operator==(other);<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;            }<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&lt;(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;                <span class="keywordflow">if<\/span> (pos_ == -1 &amp;&amp; other.pos_ == -1)<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;                <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (pos_ == -1)<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;                <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> (other.pos_ == -1)<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>;<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;                <span class="keywordflow">else<\/span><\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;                    <span class="keywordflow">return<\/span> pos_ &lt; other.pos_;<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;            }<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&lt;=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;                <span class="keywordflow">return<\/span> operator&lt;(other) || operator==(other);<\/div><div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;            }<\/div><div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&gt;(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;                <span class="keywordflow">return<\/span> !operator&lt;(other);<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;            }<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&gt;=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;                <span class="keywordflow">return<\/span> operator&gt;(other) || operator==(other);<\/div><div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;            }<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;        };<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;<\/div><div class="line"><a name="l00204"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1resultset.html">  204<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a><\/div><div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;        {<\/div><div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">arg3::db::row<\/a> <a class="code" href="classarg3_1_1db_1_1row.html">row_type<\/a>;<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;            std::shared_ptr&lt;resultset_impl&gt; impl_;<\/div><div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;<\/div><div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator&lt;row_type, row_type&gt;<\/a> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">iterator<\/a>;<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator&lt;const row_type, row_type&gt;<\/a> <a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">const_iterator<\/a>;<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div><div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;resultset_impl&gt; &amp;impl);<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;            <span class="comment">\/* non-copyable *\/<\/span><\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>();<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;<\/div><div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a623829de469943e77b0d5f0ba0cb4979">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;<\/div><div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;            iterator begin();<\/div><div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;<\/div><div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;            const_iterator begin() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00243"><\/a><span class="lineno">  243<\/span>&#160;<\/div><div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;            iterator end();<\/div><div class="line"><a name="l00248"><\/a><span class="lineno">  248<\/span>&#160;<\/div><div class="line"><a name="l00252"><\/a><span class="lineno">  252<\/span>&#160;            const_iterator end() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00253"><\/a><span class="lineno">  253<\/span>&#160;<\/div><div class="line"><a name="l00258"><\/a><span class="lineno">  258<\/span>&#160;            row_type <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a3d71b909ced065bf983edfee012c3706">current_row<\/a>();<\/div><div class="line"><a name="l00259"><\/a><span class="lineno">  259<\/span>&#160;<\/div><div class="line"><a name="l00264"><\/a><span class="lineno">  264<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a48085387928fe27a0355ecd83b4edc9c">next<\/a>();<\/div><div class="line"><a name="l00265"><\/a><span class="lineno">  265<\/span>&#160;<\/div><div class="line"><a name="l00269"><\/a><span class="lineno">  269<\/span>&#160;            row_type operator*();<\/div><div class="line"><a name="l00270"><\/a><span class="lineno">  270<\/span>&#160;<\/div><div class="line"><a name="l00274"><\/a><span class="lineno">  274<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a94d6e89a72e0ccd36474bed63cfcb802">reset<\/a>();<\/div><div class="line"><a name="l00275"><\/a><span class="lineno">  275<\/span>&#160;<\/div><div class="line"><a name="l00279"><\/a><span class="lineno">  279<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html#a429c953f4094c91b555cd0ada62359eb">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00280"><\/a><span class="lineno">  280<\/span>&#160;<\/div><div class="line"><a name="l00285"><\/a><span class="lineno">  285<\/span>&#160;            <span class="keywordtype">bool<\/span> empty() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00286"><\/a><span class="lineno">  286<\/span>&#160;<\/div><div class="line"><a name="l00290"><\/a><span class="lineno">  290<\/span>&#160;            <span class="keywordtype">void<\/span> for_each(<span class="keyword">const<\/span> std::function&lt;<span class="keywordtype">void<\/span>(<span class="keyword">const<\/span> row_type &amp;)&gt; &amp;funk) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00291"><\/a><span class="lineno">  291<\/span>&#160;<\/div><div class="line"><a name="l00295"><\/a><span class="lineno">  295<\/span>&#160;            std::shared_ptr&lt;resultset_impl&gt; impl() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00296"><\/a><span class="lineno">  296<\/span>&#160;        };<\/div><div class="line"><a name="l00297"><\/a><span class="lineno">  297<\/span>&#160;    }<\/div><div class="line"><a name="l00298"><\/a><span class="lineno">  298<\/span>&#160;}<\/div><div class="line"><a name="l00299"><\/a><span class="lineno">  299<\/span>&#160;<\/div><div class="line"><a name="l00300"><\/a><span class="lineno">  300<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1resultset__impl_html_a3d71b909ced065bf983edfee012c3706"><div class="ttname"><a href="classarg3_1_1db_1_1resultset__impl.html#a3d71b909ced065bf983edfee012c3706">arg3::db::resultset_impl::current_row<\/a><\/div><div class="ttdeci">virtual row_type current_row()=0<\/div><\/div>$/;"	a
l00001	html/row_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_ROW_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;iterator&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;column.h&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00019"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1row__impl.html">   19<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">arg3::db::column<\/a> <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a>;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a>(<a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1row__impl.html#ab4780f947e92329419228889569730a7">column_name<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keyword">virtual<\/span> column_type <a class="code" href="classarg3_1_1db_1_1row__impl.html#ad82e25b3470920ec681db7c92fe19163">column<\/a>(<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keyword">virtual<\/span> column_type <a class="code" href="classarg3_1_1db_1_1row__impl.html#ad82e25b3470920ec681db7c92fe19163">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html#a0140a934408144514b00a7021b648a7e">size<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html#ac73bff1570d8bceaaad4a41e192e400e">is_valid<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;        };<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;        <span class="keyword">template<\/span> &lt;<span class="keyword">class<\/span> ValueType, <span class="keyword">class<\/span> NonConst, <span class="keyword">class<\/span> RowType&gt;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1row__iterator.html">   69<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> : <span class="keyword">public<\/span> std::iterator&lt;std::random_access_iterator_tag, ValueType&gt;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;        {<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            std::shared_ptr&lt;RowType&gt; row_;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keywordtype">int<\/span> position_;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            NonConst currentValue_;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;            <span class="keywordtype">void<\/span> set_current_value(<span class="keywordtype">size_t<\/span> index)<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            {<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;                <span class="keywordflow">if<\/span> (row_ == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;                    <span class="keywordflow">return<\/span>;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;                }<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;                <span class="keywordflow">if<\/span> (index &gt;= 0 &amp;&amp; index &lt; row_-&gt;<a class="code" href="classarg3_1_1db_1_1row__impl.html#a0140a934408144514b00a7021b648a7e">size<\/a>()) {<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;                    currentValue_ = row_-&gt;column(index);<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;                } <span class="keywordflow">else<\/span> {<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;                    currentValue_ = NonConst();<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                }<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;            }<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>() : row_(<span class="keyword">nullptr<\/span>), position_(-1)<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            {<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            }<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;RowType&gt; &amp;pRow, <span class="keywordtype">int<\/span> position) : row_(pRow), position_(position)<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            {<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            }<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other) : row_(other.row_), position_(other.position_)<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;            {<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            }<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>(<a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;&amp;other) : row_(std::move(other.row_)), position_(other.position_)<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;            {<\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;                other.row_ = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            }<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a>()<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            {<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;            }<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;            {<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;                row_ = other.row_;<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;                position_ = other.position_;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00116"><\/a><span class="lineno">  116<\/span>&#160;            }<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;&amp;other)<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;            {<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;                row_ = std::move(other.row_);<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;                position_ = other.position_;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;                other.row_ = <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div><div class="line"><a name="l00124"><\/a><span class="lineno">  124<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00125"><\/a><span class="lineno">  125<\/span>&#160;            }<\/div><div class="line"><a name="l00126"><\/a><span class="lineno">  126<\/span>&#160;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;            ValueType &amp;operator*()<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;            {<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;                set_current_value(position_);<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;                <span class="keywordflow">return<\/span> currentValue_;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;            }<\/div><div class="line"><a name="l00132"><\/a><span class="lineno">  132<\/span>&#160;<\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;            ValueType *operator-&gt;()<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;            {<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;                set_current_value(position_);<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;                <span class="keywordflow">return<\/span> &amp;currentValue_;<\/div><div class="line"><a name="l00137"><\/a><span class="lineno">  137<\/span>&#160;            }<\/div><div class="line"><a name="l00138"><\/a><span class="lineno">  138<\/span>&#160;<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;            ValueType operator[](<span class="keywordtype">size_t<\/span> nPosition)<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;            {<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;                set_current_value(nPosition);<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;                <span class="keywordflow">return<\/span> currentValue_;<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;            }<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;<\/div><div class="line"><a name="l00145"><\/a><span class="lineno">  145<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator++()<\/div><div class="line"><a name="l00146"><\/a><span class="lineno">  146<\/span>&#160;            {<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;                <span class="keywordflow">if<\/span> (position_ &lt; row_-&gt;<a class="code" href="classarg3_1_1db_1_1row__impl.html#a0140a934408144514b00a7021b648a7e">size<\/a>()) {<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;                    ++position_;<\/div><div class="line"><a name="l00149"><\/a><span class="lineno">  149<\/span>&#160;                }<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;            }<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> operator++(<span class="keywordtype">int<\/span>)<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;            {<\/div><div class="line"><a name="l00155"><\/a><span class="lineno">  155<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;                ++(*this);<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;            }<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator--()<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;            {<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;                <span class="keywordflow">if<\/span> (position_ &gt; 0) {<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;                    --position_;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;                }<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;            }<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> operator--(<span class="keywordtype">int<\/span>)<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;            {<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;                --(*this);<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;            }<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> operator+(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;            {<\/div><div class="line"><a name="l00177"><\/a><span class="lineno">  177<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00178"><\/a><span class="lineno">  178<\/span>&#160;                tmp += n;<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;            }<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator+=(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;            {<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;                position_ = std::min(position_ + n, row_-&gt;size());<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;            }<\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;<\/div><div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> operator-(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;            {<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> tmp(*<span class="keyword">this<\/span>);<\/div><div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;                tmp -= n;<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;                <span class="keywordflow">return<\/span> tmp;<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;            }<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;<\/div><div class="line"><a name="l00195"><\/a><span class="lineno">  195<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;operator-=(<span class="keywordtype">int<\/span> n)<\/div><div class="line"><a name="l00196"><\/a><span class="lineno">  196<\/span>&#160;            {<\/div><div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;                position_ = std::max(position_ - n, 0);<\/div><div class="line"><a name="l00198"><\/a><span class="lineno">  198<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;            }<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;            <span class="keywordtype">bool<\/span> operator==(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;                <span class="keywordflow">return<\/span> position_ == other.position_;<\/div><div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;            }<\/div><div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;<\/div><div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;            <span class="keywordtype">bool<\/span> operator!=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;                <span class="keywordflow">return<\/span> !operator==(other);<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;            }<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;<\/div><div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&lt;(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;                <span class="keywordflow">return<\/span> position_ &lt; other.position_;<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;            }<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;<\/div><div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&lt;=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00217"><\/a><span class="lineno">  217<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00218"><\/a><span class="lineno">  218<\/span>&#160;                <span class="keywordflow">return<\/span> operator&lt;(other) || operator==(other);<\/div><div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;            }<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&gt;(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;                <span class="keywordflow">return<\/span> !operator&lt;(other);<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;            }<\/div><div class="line"><a name="l00225"><\/a><span class="lineno">  225<\/span>&#160;<\/div><div class="line"><a name="l00226"><\/a><span class="lineno">  226<\/span>&#160;            <span class="keywordtype">bool<\/span> operator&gt;=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00227"><\/a><span class="lineno">  227<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00228"><\/a><span class="lineno">  228<\/span>&#160;                <span class="keywordflow">return<\/span> operator&gt;(other) || operator==(other);<\/div><div class="line"><a name="l00229"><\/a><span class="lineno">  229<\/span>&#160;            }<\/div><div class="line"><a name="l00230"><\/a><span class="lineno">  230<\/span>&#160;<\/div><div class="line"><a name="l00231"><\/a><span class="lineno">  231<\/span>&#160;            <span class="keywordtype">int<\/span> operator-(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator<\/a> &amp;other)<\/div><div class="line"><a name="l00232"><\/a><span class="lineno">  232<\/span>&#160;            {<\/div><div class="line"><a name="l00233"><\/a><span class="lineno">  233<\/span>&#160;                <span class="keywordflow">if<\/span> (position_ &gt;= other.position_)<\/div><div class="line"><a name="l00234"><\/a><span class="lineno">  234<\/span>&#160;                    <span class="keywordflow">return<\/span> position_ - other.position_;<\/div><div class="line"><a name="l00235"><\/a><span class="lineno">  235<\/span>&#160;                <span class="keywordflow">else<\/span><\/div><div class="line"><a name="l00236"><\/a><span class="lineno">  236<\/span>&#160;                    <span class="keywordflow">return<\/span> 0;<\/div><div class="line"><a name="l00237"><\/a><span class="lineno">  237<\/span>&#160;            }<\/div><div class="line"><a name="l00238"><\/a><span class="lineno">  238<\/span>&#160;<\/div><div class="line"><a name="l00239"><\/a><span class="lineno">  239<\/span>&#160;            std::string name()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00240"><\/a><span class="lineno">  240<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00241"><\/a><span class="lineno">  241<\/span>&#160;                <span class="keywordflow">if<\/span> (row_ == <span class="keyword">nullptr<\/span>) {<\/div><div class="line"><a name="l00242"><\/a><span class="lineno">  242<\/span>&#160;                    <span class="keywordflow">return<\/span> <span class="keyword">nullptr<\/span>;<\/div><div class="line"><a name="l00243"><\/a><span class="lineno">  243<\/span>&#160;                }<\/div><div class="line"><a name="l00244"><\/a><span class="lineno">  244<\/span>&#160;<\/div><div class="line"><a name="l00245"><\/a><span class="lineno">  245<\/span>&#160;                <span class="keywordflow">return<\/span> row_-&gt;column_name(position_);<\/div><div class="line"><a name="l00246"><\/a><span class="lineno">  246<\/span>&#160;            }<\/div><div class="line"><a name="l00247"><\/a><span class="lineno">  247<\/span>&#160;        };<\/div><div class="line"><a name="l00248"><\/a><span class="lineno">  248<\/span>&#160;<\/div><div class="line"><a name="l00253"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1row.html">  253<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">row<\/a><\/div><div class="line"><a name="l00254"><\/a><span class="lineno">  254<\/span>&#160;        {<\/div><div class="line"><a name="l00255"><\/a><span class="lineno">  255<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00256"><\/a><span class="lineno">  256<\/span>&#160;            std::shared_ptr&lt;row_impl&gt; impl_;<\/div><div class="line"><a name="l00257"><\/a><span class="lineno">  257<\/span>&#160;<\/div><div class="line"><a name="l00258"><\/a><span class="lineno">  258<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00259"><\/a><span class="lineno">  259<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">arg3::db::column<\/a> <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a>;<\/div><div class="line"><a name="l00260"><\/a><span class="lineno">  260<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator&lt;column_type, column_type, row_impl&gt;<\/a> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">iterator<\/a>;<\/div><div class="line"><a name="l00261"><\/a><span class="lineno">  261<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">row_iterator&lt;const column_type, column_type, const row_impl&gt;<\/a> <a class="code" href="classarg3_1_1db_1_1row__iterator.html">const_iterator<\/a>;<\/div><div class="line"><a name="l00262"><\/a><span class="lineno">  262<\/span>&#160;<\/div><div class="line"><a name="l00266"><\/a><span class="lineno">  266<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>();<\/div><div class="line"><a name="l00267"><\/a><span class="lineno">  267<\/span>&#160;<\/div><div class="line"><a name="l00271"><\/a><span class="lineno">  271<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;row_impl&gt; &amp;impl);<\/div><div class="line"><a name="l00272"><\/a><span class="lineno">  272<\/span>&#160;<\/div><div class="line"><a name="l00273"><\/a><span class="lineno">  273<\/span>&#160;            <span class="comment">\/* rule of 3 + move *\/<\/span><\/div><div class="line"><a name="l00274"><\/a><span class="lineno">  274<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;other);<\/div><div class="line"><a name="l00275"><\/a><span class="lineno">  275<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00276"><\/a><span class="lineno">  276<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>();<\/div><div class="line"><a name="l00277"><\/a><span class="lineno">  277<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;other);<\/div><div class="line"><a name="l00278"><\/a><span class="lineno">  278<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00279"><\/a><span class="lineno">  279<\/span>&#160;<\/div><div class="line"><a name="l00283"><\/a><span class="lineno">  283<\/span>&#160;            iterator begin();<\/div><div class="line"><a name="l00284"><\/a><span class="lineno">  284<\/span>&#160;<\/div><div class="line"><a name="l00288"><\/a><span class="lineno">  288<\/span>&#160;            const_iterator begin() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00289"><\/a><span class="lineno">  289<\/span>&#160;<\/div><div class="line"><a name="l00293"><\/a><span class="lineno">  293<\/span>&#160;            const_iterator cbegin() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00294"><\/a><span class="lineno">  294<\/span>&#160;<\/div><div class="line"><a name="l00298"><\/a><span class="lineno">  298<\/span>&#160;            iterator end();<\/div><div class="line"><a name="l00299"><\/a><span class="lineno">  299<\/span>&#160;<\/div><div class="line"><a name="l00303"><\/a><span class="lineno">  303<\/span>&#160;            const_iterator end() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00304"><\/a><span class="lineno">  304<\/span>&#160;<\/div><div class="line"><a name="l00308"><\/a><span class="lineno">  308<\/span>&#160;            const_iterator cend() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00309"><\/a><span class="lineno">  309<\/span>&#160;<\/div><div class="line"><a name="l00315"><\/a><span class="lineno">  315<\/span>&#160;            column_type operator[](<span class="keywordtype">size_t<\/span> position) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00316"><\/a><span class="lineno">  316<\/span>&#160;<\/div><div class="line"><a name="l00322"><\/a><span class="lineno">  322<\/span>&#160;            column_type operator[](<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00323"><\/a><span class="lineno">  323<\/span>&#160;<\/div><div class="line"><a name="l00329"><\/a><span class="lineno">  329<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1row__impl.html#ab4780f947e92329419228889569730a7">column_name<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00330"><\/a><span class="lineno">  330<\/span>&#160;<\/div><div class="line"><a name="l00336"><\/a><span class="lineno">  336<\/span>&#160;            column_type <a class="code" href="classarg3_1_1db_1_1row__impl.html#ad82e25b3470920ec681db7c92fe19163">column<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00337"><\/a><span class="lineno">  337<\/span>&#160;<\/div><div class="line"><a name="l00343"><\/a><span class="lineno">  343<\/span>&#160;            column_type <a class="code" href="classarg3_1_1db_1_1row__impl.html#ad82e25b3470920ec681db7c92fe19163">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00344"><\/a><span class="lineno">  344<\/span>&#160;<\/div><div class="line"><a name="l00349"><\/a><span class="lineno">  349<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html#a0140a934408144514b00a7021b648a7e">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00350"><\/a><span class="lineno">  350<\/span>&#160;<\/div><div class="line"><a name="l00355"><\/a><span class="lineno">  355<\/span>&#160;            <span class="keywordtype">bool<\/span> empty() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00356"><\/a><span class="lineno">  356<\/span>&#160;<\/div><div class="line"><a name="l00361"><\/a><span class="lineno">  361<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html#ac73bff1570d8bceaaad4a41e192e400e">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00362"><\/a><span class="lineno">  362<\/span>&#160;<\/div><div class="line"><a name="l00367"><\/a><span class="lineno">  367<\/span>&#160;            <span class="keywordtype">void<\/span> for_each(<span class="keyword">const<\/span> std::function&lt;<span class="keywordtype">void<\/span>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">db::column<\/a> &amp;)&gt; &amp;funk) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00368"><\/a><span class="lineno">  368<\/span>&#160;<\/div><div class="line"><a name="l00372"><\/a><span class="lineno">  372<\/span>&#160;            std::shared_ptr&lt;row_impl&gt; impl() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00373"><\/a><span class="lineno">  373<\/span>&#160;        };<\/div><div class="line"><a name="l00374"><\/a><span class="lineno">  374<\/span>&#160;    }<\/div><div class="line"><a name="l00375"><\/a><span class="lineno">  375<\/span>&#160;}<\/div><div class="line"><a name="l00376"><\/a><span class="lineno">  376<\/span>&#160;<\/div><div class="line"><a name="l00377"><\/a><span class="lineno">  377<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1row__impl_html_ac73bff1570d8bceaaad4a41e192e400e"><div class="ttname"><a href="classarg3_1_1db_1_1row__impl.html#ac73bff1570d8bceaaad4a41e192e400e">arg3::db::row_impl::is_valid<\/a><\/div><div class="ttdeci">virtual bool is_valid() const  =0<\/div><\/div>$/;"	a
l00001	html/schema_8h_source.html	/^<a href="schema_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SCHEMA_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SCHEMA_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;{<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    {<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1column__definition.html">   20<\/a><\/span>&#160;        <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1column__definition.html">column_definition<\/a> {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;            std::string name;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;            <span class="keywordtype">bool<\/span> pk;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            std::string type;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        };<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;        std::ostream &amp;<a class="code" href="join__clause_8h.html#a35039c607a67329c80e6c0275ec789e2">operator&lt;&lt;<\/a>(std::ostream &amp;os, <span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1column__definition.html">column_definition<\/a> &amp;def);<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1schema.html">   35<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a><\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;        {<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            std::string tableName_;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            std::vector&lt;column_definition&gt; columns_;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tablename);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;other);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>(<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;other);<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> init();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            std::vector&lt;column_definition&gt; columns() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            std::vector&lt;std::string&gt; column_names() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            std::vector&lt;std::string&gt; primary_keys() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;            std::string table_name() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <a class="code" href="structarg3_1_1db_1_1column__definition.html">column_definition<\/a> operator[](<span class="keywordtype">size_t<\/span> index) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;        };<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;    }<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;}<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1schema_html"><div class="ttname"><a href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a><\/div><div class="ttdef"><b>Definition:<\/b> schema.h:35<\/div><\/div>$/;"	a
l00001	html/schema__factory_8h_source.html	/^<a href="schema__factory_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SCHEMA_FACTORY_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SCHEMA_FACTORY_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;functional&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;memory&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="schema_8h.html">schema.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;{<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;    {<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1schema__factory.html">   24<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            std::unordered_map&lt;std::string, std::shared_ptr&lt;schema&gt;&gt; schema_cache_;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            std::shared_ptr&lt;schema&gt; create(<span class="keyword">const<\/span> std::string &amp;tableName);<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <span class="comment">\/*<\/span><\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<span class="comment">             * @param db the database in use<\/span><\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<span class="comment">             *\/<\/span><\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a>(<a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> &amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            std::shared_ptr&lt;schema&gt; <span class="keyword">get<\/span>(<span class="keyword">const<\/span> std::string &amp;tableName);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1schema__factory.html#a238fc41bc493c940d0c8b3eadcda9e5f">clear<\/a>(<span class="keyword">const<\/span> std::string &amp;tablename);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;        };<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;    }<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;}<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="schema_8h_html"><div class="ttname"><a href="schema_8h.html">schema.h<\/a><\/div><\/div>$/;"	a
l00001	html/select__query_8h_source.html	/^<a href="select__query_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SELECT_QUERY_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SELECT_QUERY_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="query_8h.html">query.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;resultset.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="where__clause_8h.html">where_clause.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="join__clause_8h.html">join_clause.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;{<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;    {<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1select__query.html">   22<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a>;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> where_;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> join_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            std::string limit_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            std::string orderBy_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            std::string groupBy_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            std::string joinBy_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            std::vector&lt;std::string&gt; columns_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            std::string tableName_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html#aa7e36553504a5bc87fc2946ed36c9587">select_query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *<a class="code" href="classarg3_1_1db_1_1query.html#a950365f4c68b215c290864f9a8f93ccc">db<\/a>, <span class="keyword">const<\/span> std::string &amp;tableName, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a358faeb45be9d484a639e2035935bf27">columns<\/a>);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html#aa7e36553504a5bc87fc2946ed36c9587">select_query<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> *db, <span class="keyword">const<\/span> std::string &amp;tableName);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html#aa7e36553504a5bc87fc2946ed36c9587">select_query<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html#aa7e36553504a5bc87fc2946ed36c9587">select_query<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;other);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html#aa7e36553504a5bc87fc2946ed36c9587">select_query<\/a>(<a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>();<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;other);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            std::vector&lt;std::string&gt; <a class="code" href="classarg3_1_1db_1_1select__query.html#a358faeb45be9d484a639e2035935bf27">columns<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1select__query.html#ab60082da1d9abfda3568a38df60f9d07">limit<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1select__query.html#a2098feb7ecd632332d865dcf8cf7e19c">order_by<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1select__query.html#a3ea392dbc82184415b33086fcf1cf112">group_by<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>... List&gt;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(<span class="keyword">const<\/span> std::string &amp;value, <span class="keyword">const<\/span> List &amp;... args)<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;            {<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(value);<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;                bind_all(args...);<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            }<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>... List&gt;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value, <span class="keyword">const<\/span> List &amp;... args)<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            {<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1select__query.html#a2aac7a500b613353cf0c288cec7482c4">where<\/a>(value);<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;                bind_all(args...);<\/div><div class="line"><a name="l00113"><\/a><span class="lineno">  113<\/span>&#160;                <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;<\/div><div class="line"><a name="l00114"><\/a><span class="lineno">  114<\/span>&#160;            }<\/div><div class="line"><a name="l00115"><\/a><span class="lineno">  115<\/span>&#160;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#ab60082da1d9abfda3568a38df60f9d07">limit<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a2098feb7ecd632332d865dcf8cf7e19c">order_by<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a3ea392dbc82184415b33086fcf1cf112">group_by<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a8474bdd87b9e29f5f7b37058425d79bb">join<\/a>(<span class="keyword">const<\/span> std::string &amp;tableName, <a class="code" href="classarg3_1_1db_1_1join__clause.html#aae63ef1827478e38d9e11cf16905175b">join::type<\/a> type = join::inner);<\/div><div class="line"><a name="l00144"><\/a><span class="lineno">  144<\/span>&#160;<\/div><div class="line"><a name="l00150"><\/a><span class="lineno">  150<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a8474bdd87b9e29f5f7b37058425d79bb">join<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1join__clause.html">join_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00151"><\/a><span class="lineno">  151<\/span>&#160;<\/div><div class="line"><a name="l00156"><\/a><span class="lineno">  156<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1select__query.html#a97111ab387dece97bf255ad7ae2a7fd2">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00157"><\/a><span class="lineno">  157<\/span>&#160;<\/div><div class="line"><a name="l00162"><\/a><span class="lineno">  162<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> <a class="code" href="classarg3_1_1db_1_1select__query.html#acddd5d6566e95d2b8dad8d949d579d21">execute<\/a>();<\/div><div class="line"><a name="l00163"><\/a><span class="lineno">  163<\/span>&#160;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1select__query.html#acddd5d6566e95d2b8dad8d949d579d21">execute<\/a>(<span class="keyword">const<\/span> std::function&lt;<span class="keywordtype">void<\/span>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> &amp;)&gt; &amp;funk);<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1select__query.html#a0dfc0ce9c472b133e81fd2a086ff2d8e">count<\/a>();<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1select__query.html#a751af9c23ad575b03a90bec1a0f7743f">reset<\/a>();<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1select__query.html#a9565900ede5c1aeed5283c2b3081a3db">table_name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1select__query.html#a9565900ede5c1aeed5283c2b3081a3db">table_name<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;<\/div><div class="line"><a name="l00197"><\/a><span class="lineno">  197<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span> T&gt;<\/div><div class="line"><a name="l00198"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1select__query.html#adf34a6a966f9bf2e975973cf22b8a7bf">  198<\/a><\/span>&#160;            T <a class="code" href="classarg3_1_1db_1_1select__query.html#adf34a6a966f9bf2e975973cf22b8a7bf">execute_scalar<\/a>()<\/div><div class="line"><a name="l00199"><\/a><span class="lineno">  199<\/span>&#160;            {<\/div><div class="line"><a name="l00200"><\/a><span class="lineno">  200<\/span>&#160;                <span class="keyword">auto<\/span> rs = <a class="code" href="classarg3_1_1db_1_1select__query.html#acddd5d6566e95d2b8dad8d949d579d21">execute<\/a>();<\/div><div class="line"><a name="l00201"><\/a><span class="lineno">  201<\/span>&#160;<\/div><div class="line"><a name="l00202"><\/a><span class="lineno">  202<\/span>&#160;                <span class="keywordflow">if<\/span> (!rs.is_valid()) {<\/div><div class="line"><a name="l00203"><\/a><span class="lineno">  203<\/span>&#160;                    <span class="keywordflow">return<\/span> T();<\/div><div class="line"><a name="l00204"><\/a><span class="lineno">  204<\/span>&#160;                }<\/div><div class="line"><a name="l00205"><\/a><span class="lineno">  205<\/span>&#160;<\/div><div class="line"><a name="l00206"><\/a><span class="lineno">  206<\/span>&#160;                <span class="keyword">auto<\/span> <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> = rs.<a class="code" href="classarg3_1_1db_1_1row.html#a7bd980a82f226c8fb8c7f0d1fb27885d">begin<\/a>();<\/div><div class="line"><a name="l00207"><\/a><span class="lineno">  207<\/span>&#160;<\/div><div class="line"><a name="l00208"><\/a><span class="lineno">  208<\/span>&#160;                <span class="keywordflow">if<\/span> (<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> == rs.<a class="code" href="classarg3_1_1db_1_1row.html#ad823e47c1e9469cc89fad96eaf6f9fb7">end<\/a>() || !<a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>-&gt;<a class="code" href="classarg3_1_1db_1_1row.html#a9e1dc207cbd9d56bf4e71b8e03c1bd06">is_valid<\/a>()) {<\/div><div class="line"><a name="l00209"><\/a><span class="lineno">  209<\/span>&#160;                    <span class="keywordflow">return<\/span> T();<\/div><div class="line"><a name="l00210"><\/a><span class="lineno">  210<\/span>&#160;                }<\/div><div class="line"><a name="l00211"><\/a><span class="lineno">  211<\/span>&#160;<\/div><div class="line"><a name="l00212"><\/a><span class="lineno">  212<\/span>&#160;                <span class="keyword">auto<\/span> col = <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>-&gt;<a class="code" href="classarg3_1_1db_1_1row.html#a7bd980a82f226c8fb8c7f0d1fb27885d">begin<\/a>();<\/div><div class="line"><a name="l00213"><\/a><span class="lineno">  213<\/span>&#160;<\/div><div class="line"><a name="l00214"><\/a><span class="lineno">  214<\/span>&#160;                <span class="keywordflow">if<\/span> (col == <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>-&gt;<a class="code" href="classarg3_1_1db_1_1row.html#ad823e47c1e9469cc89fad96eaf6f9fb7">end<\/a>() || !col-&gt;is_valid()) {<\/div><div class="line"><a name="l00215"><\/a><span class="lineno">  215<\/span>&#160;                    <span class="keywordflow">return<\/span> T();<\/div><div class="line"><a name="l00216"><\/a><span class="lineno">  216<\/span>&#160;                }<\/div><div class="line"><a name="l00217"><\/a><span class="lineno">  217<\/span>&#160;<\/div><div class="line"><a name="l00218"><\/a><span class="lineno">  218<\/span>&#160;                <span class="keywordflow">return<\/span> col-&gt;to_value();<\/div><div class="line"><a name="l00219"><\/a><span class="lineno">  219<\/span>&#160;            }<\/div><div class="line"><a name="l00220"><\/a><span class="lineno">  220<\/span>&#160;        };<\/div><div class="line"><a name="l00221"><\/a><span class="lineno">  221<\/span>&#160;    }<\/div><div class="line"><a name="l00222"><\/a><span class="lineno">  222<\/span>&#160;}<\/div><div class="line"><a name="l00223"><\/a><span class="lineno">  223<\/span>&#160;<\/div><div class="line"><a name="l00224"><\/a><span class="lineno">  224<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1schema_html"><div class="ttname"><a href="classarg3_1_1db_1_1schema.html">arg3::db::schema<\/a><\/div><div class="ttdef"><b>Definition:<\/b> schema.h:35<\/div><\/div>$/;"	a
l00001	html/sql__value_8h_source.html	/^<a href="sql__value_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQL_VALUE_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQL_VALUE_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;iostream&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;cmath&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;variant.h&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;        <span class="keyword">class <\/span>sqldb;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;        <span class="keyword">class <\/span>base_query;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;        <span class="keyword">class <\/span>bindable;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        <span class="comment">\/*<\/span><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<span class="comment">         * a sql null type<\/span><\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<span class="comment">         *\/<\/span><\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">typedef<\/span> std::nullptr_t sql_null_type;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;        <span class="keyword">extern<\/span> <span class="keyword">const<\/span> sql_null_type <a class="code" href="sql__value_8h.html#a1f0f99e4b148d33a240390b09a716d55">sql_null<\/a>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno"><a class="line" href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">   34<\/a><\/span>&#160;        <span class="keyword">typedef<\/span> arg3::binary <a class="code" href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">sql_blob<\/a>;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sql__time.html">   39<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> : <span class="keyword">public<\/span> variant::complex<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;        {<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a>();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00050"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sql__time.html#ad944f0a3fffbd325f751fbc7f7512a22">   50<\/a><\/span>&#160;            <span class="keyword">typedef<\/span> <span class="keyword">enum<\/span> { DATE, TIME, TIMESTAMP, DATETIME } <a class="code" href="classarg3_1_1db_1_1sql__time.html#ad944f0a3fffbd325f751fbc7f7512a22">formats<\/a>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a>(time_t value, formats <a class="code" href="classarg3_1_1db_1_1sql__time.html#aa1d9bf5f7c958a83c398c50069298f63">format<\/a> = TIMESTAMP);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;other);<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a>(<a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;other);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a>();<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html#aa4eb30d8bf26d861ea153be3b9d4f267">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html#af86ba85cc099373dec6251afbe8b51c4">to_ulong<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html#a7e1615478427f6cf700dc53e9dcab3c6">to_llong<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html#af229025c5a71acc08373a234200a23fc">to_ullong<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html#ab373c9f8211f09af2f21ff17f1e32ab1">to_bool<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1sql__time.html#aa2de639a9d014e77c77c5524e200f741">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            std::wstring <a class="code" href="classarg3_1_1db_1_1sql__time.html#a41e2b03868852b385f82fb2aa3fdaa00">to_wstring<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            formats <a class="code" href="classarg3_1_1db_1_1sql__time.html#aa1d9bf5f7c958a83c398c50069298f63">format<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            <span class="keyword">struct <\/span>tm *<a class="code" href="classarg3_1_1db_1_1sql__time.html#aa86dba9caa7f8686431f54f64eb908fc">to_gmtime<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;            <span class="keyword">struct <\/span>tm *to_localtime() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;            <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html#a3cf5a72518648202ba55049e93ee49b4">hashcode<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div><div class="line"><a name="l00119"><\/a><span class="lineno">  119<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00120"><\/a><span class="lineno">  120<\/span>&#160;            time_t value_;<\/div><div class="line"><a name="l00121"><\/a><span class="lineno">  121<\/span>&#160;            formats format_;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;        };<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sql__value.html">  127<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> : <span class="keyword">public<\/span> arg3::variant<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;        {<\/div><div class="line"><a name="l00129"><\/a><span class="lineno">  129<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00130"><\/a><span class="lineno">  130<\/span>&#160;            <span class="keyword">using<\/span> arg3::variant::variant;<\/div><div class="line"><a name="l00131"><\/a><span class="lineno">  131<\/span>&#160;<\/div><div class="line"><a name="l00135"><\/a><span class="lineno">  135<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;value);<\/div><div class="line"><a name="l00136"><\/a><span class="lineno">  136<\/span>&#160;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a>();<\/div><div class="line"><a name="l00141"><\/a><span class="lineno">  141<\/span>&#160;<\/div><div class="line"><a name="l00142"><\/a><span class="lineno">  142<\/span>&#160;            <span class="keyword">operator<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00143"><\/a><span class="lineno">  143<\/span>&#160;<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> to_time() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;            <span class="keywordtype">bool<\/span> is_time() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;        };<\/div><div class="line"><a name="l00154"><\/a><span class="lineno">  154<\/span>&#160;<\/div><div class="line"><a name="l00160"><\/a><span class="lineno">  160<\/span>&#160;        std::string <a class="code" href="classarg3_1_1db_1_1sql__time.html#aa2de639a9d014e77c77c5524e200f741">to_string<\/a>(<span class="keyword">const<\/span> sql_null_type &amp;null);<\/div><div class="line"><a name="l00161"><\/a><span class="lineno">  161<\/span>&#160;<\/div><div class="line"><a name="l00168"><\/a><span class="lineno">  168<\/span>&#160;        std::ostream &amp;<a class="code" href="join__clause_8h.html#a35039c607a67329c80e6c0275ec789e2">operator&lt;&lt;<\/a>(std::ostream &amp;out, <span class="keyword">const<\/span> sql_null_type &amp;null);<\/div><div class="line"><a name="l00169"><\/a><span class="lineno">  169<\/span>&#160;<\/div><div class="line"><a name="l00170"><\/a><span class="lineno">  170<\/span>&#160;        std::ostream &amp;operator&lt;&lt;(std::ostream &amp;out, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;value);<\/div><div class="line"><a name="l00171"><\/a><span class="lineno">  171<\/span>&#160;<\/div><div class="line"><a name="l00172"><\/a><span class="lineno">  172<\/span>&#160;        std::ostream &amp;operator&lt;&lt;(std::ostream &amp;out, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value);<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;    }<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;}<\/div><div class="line"><a name="l00175"><\/a><span class="lineno">  175<\/span>&#160;<\/div><div class="line"><a name="l00176"><\/a><span class="lineno">  176<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="sql__value_8h_html_a1f0f99e4b148d33a240390b09a716d55"><div class="ttname"><a href="sql__value_8h.html#a1f0f99e4b148d33a240390b09a716d55">arg3::db::sql_null<\/a><\/div><div class="ttdeci">const sql_null_type sql_null<\/div><\/div>$/;"	a
l00001	html/sqldb_8h_source.html	/^<a href="sqldb_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLDB_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLDB_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &lt;sstream&gt;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sql__value_8h.html">sql_value.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="schema__factory_8h.html">schema_factory.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;statement.h&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;{<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        <span class="keyword">class <\/span>resultset;<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">typedef<\/span> <span class="keyword">struct <\/span>uri_type uri;<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;        <span class="keyword">namespace <\/span>log<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00027"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664">   27<\/a><\/span>&#160;            <span class="keyword">typedef<\/span> <span class="keyword">enum<\/span> {<\/div><div class="line"><a name="l00029"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a241738d243c2679c1b74bbade8340643">   29<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a241738d243c2679c1b74bbade8340643">None<\/a> = 0,<\/div><div class="line"><a name="l00031"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664ae821bee0490efa7db42007f5605f8da0">   31<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664ae821bee0490efa7db42007f5605f8da0">Error<\/a> = 1,<\/div><div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a8499d7223e924bb02de403fb892b2c32">   33<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a8499d7223e924bb02de403fb892b2c32">Warn<\/a> = 2,<\/div><div class="line"><a name="l00035"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a06d40ebfe7ccc2612873dd2b716fda5b">   35<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a06d40ebfe7ccc2612873dd2b716fda5b">Info<\/a> = 3,<\/div><div class="line"><a name="l00037"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a84f00790b02e10f9c303c3c76e5b0ca1">   37<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a84f00790b02e10f9c303c3c76e5b0ca1">Debug<\/a> = 4,<\/div><div class="line"><a name="l00039"><\/a><span class="lineno"><a class="line" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a1cfd907f2968dd37b311048dc38d2fe8">   39<\/a><\/span>&#160;                <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a1cfd907f2968dd37b311048dc38d2fe8">Trace<\/a> = 5<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            } <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664">level<\/a>;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="sqldb_8h.html#aebeb803e9ea14a1ed0a812cc8ee55f50">set_level<\/a>(<a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664">level<\/a> <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664">level<\/a>);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="sqldb_8h.html#aebeb803e9ea14a1ed0a812cc8ee55f50">set_level<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *arg);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;        }<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1uri__type.html">   56<\/a><\/span>&#160;        <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1uri__type.html">uri_type<\/a> {<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <a class="code" href="structarg3_1_1db_1_1uri__type.html">uri_type<\/a>()<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            {<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            }<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1uri__type.html#a2e26da738330e731775820d51e7bcd54">   65<\/a><\/span>&#160;            <a class="code" href="structarg3_1_1db_1_1uri__type.html#a2e26da738330e731775820d51e7bcd54">uri_type<\/a>(<span class="keyword">const<\/span> std::string &amp;url)<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            {<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;                parse(url);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            }<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keywordtype">void<\/span> parse(<span class="keyword">const<\/span> std::string &amp;url);<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            <span class="keyword">operator<\/span> std::string()<span class="keyword"> const<\/span><\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<span class="keyword">            <\/span>{<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;                <span class="keywordflow">return<\/span> value;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            }<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            std::string protocol, user, password, host, port, path, <a class="code" href="classarg3_1_1db_1_1query.html">query<\/a>, value;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        };<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqldb.html">   87<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a><\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;        {<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset_type<\/a>;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html">statement<\/a> <a class="code" href="classarg3_1_1db_1_1statement.html">statement_type<\/a>;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;            <span class="keyword">static<\/span> std::shared_ptr&lt;sqldb&gt; from_uri(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>();<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>(<span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1uri__type.html">uri<\/a> &amp;info);<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;            <span class="comment">\/* default boilerplate *\/<\/span><\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00108"><\/a><span class="lineno">  108<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00109"><\/a><span class="lineno">  109<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00110"><\/a><span class="lineno">  110<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a> &amp;&amp;other) = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00111"><\/a><span class="lineno">  111<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>() = <span class="keywordflow">default<\/span>;<\/div><div class="line"><a name="l00112"><\/a><span class="lineno">  112<\/span>&#160;<\/div><div class="line"><a name="l00117"><\/a><span class="lineno">  117<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> is_open() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00118"><\/a><span class="lineno">  118<\/span>&#160;<\/div><div class="line"><a name="l00122"><\/a><span class="lineno">  122<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> open() = 0;<\/div><div class="line"><a name="l00123"><\/a><span class="lineno">  123<\/span>&#160;<\/div><div class="line"><a name="l00127"><\/a><span class="lineno">  127<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> close() = 0;<\/div><div class="line"><a name="l00128"><\/a><span class="lineno">  128<\/span>&#160;<\/div><div class="line"><a name="l00133"><\/a><span class="lineno">  133<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00134"><\/a><span class="lineno">  134<\/span>&#160;<\/div><div class="line"><a name="l00139"><\/a><span class="lineno">  139<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">int<\/span> last_number_of_changes() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00140"><\/a><span class="lineno">  140<\/span>&#160;<\/div><div class="line"><a name="l00147"><\/a><span class="lineno">  147<\/span>&#160;            <span class="keyword">virtual<\/span> resultset_type execute(<span class="keyword">const<\/span> std::string &amp;sql) = 0;<\/div><div class="line"><a name="l00148"><\/a><span class="lineno">  148<\/span>&#160;<\/div><div class="line"><a name="l00152"><\/a><span class="lineno">  152<\/span>&#160;            <span class="keyword">virtual<\/span> std::shared_ptr&lt;statement_type&gt; create_statement() = 0;<\/div><div class="line"><a name="l00153"><\/a><span class="lineno">  153<\/span>&#160;<\/div><div class="line"><a name="l00158"><\/a><span class="lineno">  158<\/span>&#160;            <span class="keyword">virtual<\/span> std::string last_error() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00159"><\/a><span class="lineno">  159<\/span>&#160;<\/div><div class="line"><a name="l00164"><\/a><span class="lineno">  164<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> *schemas();<\/div><div class="line"><a name="l00165"><\/a><span class="lineno">  165<\/span>&#160;<\/div><div class="line"><a name="l00166"><\/a><span class="lineno">  166<\/span>&#160;            <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> *schemas() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00167"><\/a><span class="lineno">  167<\/span>&#160;<\/div><div class="line"><a name="l00173"><\/a><span class="lineno">  173<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> query_schema(<span class="keyword">const<\/span> std::string &amp;tablename, std::vector&lt;column_definition&gt; &amp;columns);<\/div><div class="line"><a name="l00174"><\/a><span class="lineno">  174<\/span>&#160;<\/div><div class="line"><a name="l00179"><\/a><span class="lineno">  179<\/span>&#160;            <a class="code" href="structarg3_1_1db_1_1uri__type.html">uri<\/a> connection_info() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00180"><\/a><span class="lineno">  180<\/span>&#160;<\/div><div class="line"><a name="l00181"><\/a><span class="lineno">  181<\/span>&#160;            <span class="keywordtype">void<\/span> set_connection_info(<span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1uri__type.html">uri<\/a> &amp;value);<\/div><div class="line"><a name="l00182"><\/a><span class="lineno">  182<\/span>&#160;<\/div><div class="line"><a name="l00183"><\/a><span class="lineno">  183<\/span>&#160;            <span class="keyword">virtual<\/span> std::string insert_sql(<span class="keyword">const<\/span> std::shared_ptr&lt;schema&gt; &amp;<a class="code" href="classarg3_1_1db_1_1schema.html">schema<\/a>, <span class="keyword">const<\/span> std::vector&lt;std::string&gt; &amp;columns) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00184"><\/a><span class="lineno">  184<\/span>&#160;<\/div><div class="line"><a name="l00185"><\/a><span class="lineno">  185<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00186"><\/a><span class="lineno">  186<\/span>&#160;            <a class="code" href="structarg3_1_1db_1_1uri__type.html">uri<\/a> connectionInfo_;<\/div><div class="line"><a name="l00187"><\/a><span class="lineno">  187<\/span>&#160;<\/div><div class="line"><a name="l00188"><\/a><span class="lineno">  188<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00189"><\/a><span class="lineno">  189<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1schema__factory.html">schema_factory<\/a> schema_factory_;<\/div><div class="line"><a name="l00190"><\/a><span class="lineno">  190<\/span>&#160;        };<\/div><div class="line"><a name="l00191"><\/a><span class="lineno">  191<\/span>&#160;    }<\/div><div class="line"><a name="l00192"><\/a><span class="lineno">  192<\/span>&#160;}<\/div><div class="line"><a name="l00193"><\/a><span class="lineno">  193<\/span>&#160;<\/div><div class="line"><a name="l00194"><\/a><span class="lineno">  194<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="structarg3_1_1db_1_1uri__type_html"><div class="ttname"><a href="structarg3_1_1db_1_1uri__type.html">arg3::db::uri_type<\/a><\/div><div class="ttdef"><b>Definition:<\/b> sqldb.h:56<\/div><\/div>$/;"	a
l00001	html/sqlite3__column_8h_source.html	/^<a href="sqlite3__column_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_COLUMN_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_COLUMN_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="column_8h.html">column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="preprocessor">#define sqlite3_default_column sqlite3_cached_column<\/span><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;{<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    {<\/div><div class="line"><a name="l00025"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite3__column.html">   25<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;        {<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keywordtype">int<\/span> column_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a>(<span class="keyword">const<\/span> shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a>();<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite3__column.html">sqlite3_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html#aaf5b712ae36f59f831d96bce0c398df2">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html#ad7ad9b510ced71de427cc26531ec78be">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html#a293011c5beaeacf95dcf7a95754fb816">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;        };<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite3__cached__column.html">   51<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;        {<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            std::string name_;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            sql_value value_;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">int<\/span> type_;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keywordtype">void<\/span> set_value(std::shared_ptr&lt;sqlite3_stmt&gt; stmt, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a>(shared_ptr&lt;sqlite3_stmt&gt; stmt, <span class="keywordtype">int<\/span> column);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a>();<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite3__cached__column.html">sqlite3_cached_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html#aaf5b712ae36f59f831d96bce0c398df2">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;            sql_value <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html#ad7ad9b510ced71de427cc26531ec78be">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1sqlite3__column.html#a293011c5beaeacf95dcf7a95754fb816">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;        };<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;    }<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;}<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1sqlite3__cached__column_html"><div class="ttname"><a href="classarg3_1_1db_1_1sqlite3__cached__column.html">arg3::db::sqlite3_cached_column<\/a><\/div><div class="ttdef"><b>Definition:<\/b> sqlite3_column.h:51<\/div><\/div>$/;"	a
l00001	html/sqlite3__db_8h_source.html	/^<a href="sqlite3__db_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_SQLDB_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_SQLDB_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00024"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite3__db.html">   24<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a><\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;        {<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span>base_query;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;           <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            std::shared_ptr&lt;sqlite3&gt; db_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a>(<span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1uri.html">uri<\/a> &amp;info);<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> &amp;other);<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> &amp;other);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a>();<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <span class="keywordtype">bool<\/span> is_open() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <span class="keywordtype">void<\/span> open(<span class="keywordtype">int<\/span> flags);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="keywordtype">void<\/span> open();<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keywordtype">void<\/span> close();<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">int<\/span> last_number_of_changes() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html#a33cb6c10bcf0405a844f60406e2baa20">query_schema<\/a>(<span class="keyword">const<\/span> std::string &amp;tableName, std::vector&lt;column_definition&gt; &amp;columns);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> execute(<span class="keyword">const<\/span> std::string &amp;sql, <span class="keywordtype">bool<\/span> cache = <span class="keyword">false<\/span>);<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            std::string last_error() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            std::shared_ptr&lt;statement&gt; create_statement();<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;        };<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;    }<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;}<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1sqlite3__statement_html"><div class="ttname"><a href="classarg3_1_1db_1_1sqlite3__statement.html">arg3::db::sqlite3_statement<\/a><\/div><div class="ttdef"><b>Definition:<\/b> sqlite3_statement.h:26<\/div><\/div>$/;"	a
l00001	html/sqlite3__resultset_8h_source.html	/^<a href="sqlite3__resultset_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_RESULTSET_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="resultset_8h.html">resultset.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_db;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite3__resultset.html">   26<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> *db_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;            <span class="keywordtype">int<\/span> status_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a>();<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> current_row();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;        };<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">   62<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;        {<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1select__query.html">select_query<\/a>;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> *db_;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;row_impl&gt;&gt; rows_;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> *db, shared_ptr&lt;sqlite3_stmt&gt; stmt);<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a>();<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite3__cached__resultset.html">sqlite3_cached_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1row.html">row<\/a> current_row();<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;            <span class="keywordtype">void<\/span> reset();<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;            <span class="keywordtype">bool<\/span> next();<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;        };<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;    }<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;}<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1resultset__impl_html"><div class="ttname"><a href="classarg3_1_1db_1_1resultset__impl.html">arg3::db::resultset_impl<\/a><\/div><div class="ttdef"><b>Definition:<\/b> resultset.h:21<\/div><\/div>$/;"	a
l00001	html/sqlite3__row_8h_source.html	/^<a href="sqlite3__row_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_ROW_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="row_8h.html">row.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqlite3__column_8h.html">sqlite3_column.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="preprocessor">#define sqlite3_default_row arg3::db::sqlite3_cached_row<\/span><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;{<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;    {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_db;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite3__row.html">   28<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;        {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> *db_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;            <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> *db, <span class="keyword">const<\/span> std::shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a>();<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite3__row.html">sqlite3_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;        };<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite3__cached__row.html">   55<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;        {<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__resultset.html">sqlite3_resultset<\/a>;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            std::vector&lt;std::shared_ptr&lt;sqlite3_cached_column&gt;&gt; columns_;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> *db, std::shared_ptr&lt;sqlite3_stmt&gt; stmt);<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a>();<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite3__cached__row.html">sqlite3_cached_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;            std::string column_name(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1column.html">column<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> column(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keywordtype">size_t<\/span> size() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keywordtype">bool<\/span> is_valid() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;        };<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;    }<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;}<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1sqlite3__row_html"><div class="ttname"><a href="classarg3_1_1db_1_1sqlite3__row.html">arg3::db::sqlite3_row<\/a><\/div><div class="ttdef"><b>Definition:<\/b> sqlite3_row.h:28<\/div><\/div>$/;"	a
l00001	html/sqlite3__statement_8h_source.html	/^<a href="sqlite3__statement_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="statement_8h.html">statement.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">class <\/span>sqlite3_db;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite3__statement.html">   26<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html">statement<\/a><\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;        {<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> *db_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;            std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a556ae2c708dcd141a409ce4b87013360">sqlite3_statement<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__db.html">sqlite3_db<\/a> *db);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a556ae2c708dcd141a409ce4b87013360">sqlite3_statement<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a556ae2c708dcd141a409ce4b87013360">sqlite3_statement<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a>();<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;            <span class="comment">\/* statement overrides *\/<\/span><\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a050d868e69e97a0b35502eb85a791625">prepare<\/a>(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#ad44d85eac660d73c3f40fd2aad32f2e2">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a04e6506e9cabe5fe195f2d1a465b8d56">results<\/a>();<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a5918a4b2995906a33180a9a7538cfb9c">result<\/a>();<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a29c22c1658438449b62e69acddfe9d2a">finish<\/a>();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#ad863f96afaaed77d2fd6191342bcfac2">reset<\/a>();<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;            <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a13536869eebc9ece096f6734a7315812">last_number_of_changes<\/a>();<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;            std::string <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a84e83b58cdf0b85a615f9d4a0be4243b">last_error<\/a>();<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;            <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html#a3776e0fed10c7b2195a8a46bb38a6da4">last_insert_id<\/a>();<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_blob &amp;value);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1sqlite3__statement.html">sqlite3_statement<\/a> &amp;bind(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_t &amp;value);<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;        };<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1sqlite3__stmt__delete.html">   69<\/a><\/span>&#160;        <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1sqlite3__stmt__delete.html">sqlite3_stmt_delete<\/a> {<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;            <span class="keywordtype">void<\/span> operator()(sqlite3_stmt *p) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;        };<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;    }<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;}<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1sqlite3__statement_html_ad863f96afaaed77d2fd6191342bcfac2"><div class="ttname"><a href="classarg3_1_1db_1_1sqlite3__statement.html#ad863f96afaaed77d2fd6191342bcfac2">arg3::db::sqlite3_statement::reset<\/a><\/div><div class="ttdeci">void reset()<\/div><\/div>$/;"	a
l00001	html/sqlite_2column_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_COLUMN_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_COLUMN_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;..\/column.h&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;{<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        <span class="keyword">namespace <\/span>sqlite<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        {<\/div><div class="line"><a name="l00025"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite_1_1column.html">   25<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html">column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;            {<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;                std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;                <span class="keywordtype">int<\/span> column_;<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html#a36e7f0af1f2159f8b3e88cb842aac5b0">column<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html#a36e7f0af1f2159f8b3e88cb842aac5b0">column<\/a>(<span class="keyword">const<\/span> column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html#a36e7f0af1f2159f8b3e88cb842aac5b0">column<\/a>(column &amp;&amp;other);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                <span class="keyword">virtual<\/span> ~column();<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                column &amp;operator=(<span class="keyword">const<\/span> column &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                column &amp;operator=(column &amp;&amp;other);<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <span class="comment">\/* column_impl overrides *\/<\/span><\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html#a2b06f2c7676894e79715fb2ddf414dab">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html#a1c42b8c993e5c0dce06d4a5607c2df9d">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html#ad7e944eb5bbecb36bdcb6823808b1250">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            };<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">   55<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a><\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            {<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                std::string name_;<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> value_;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;                <span class="keywordtype">int<\/span> type_;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;                <span class="keywordtype">void<\/span> set_value(<span class="keyword">const<\/span> std::shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt, <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html">column<\/a>);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a>(<span class="keyword">const<\/span> std::shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt, <span class="keywordtype">int<\/span> column);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a>();<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;                <span class="comment">\/* column_impl overrides *\/<\/span><\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html#a2b06f2c7676894e79715fb2ddf414dab">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html#a1c42b8c993e5c0dce06d4a5607c2df9d">to_value<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                <span class="keywordtype">int<\/span> sql_type() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1sqlite_1_1column.html#ad7e944eb5bbecb36bdcb6823808b1250">name<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            };<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;        }<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;    }<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;}<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1sqlite_1_1column_html_a1c42b8c993e5c0dce06d4a5607c2df9d"><div class="ttname"><a href="classarg3_1_1db_1_1sqlite_1_1column.html#a1c42b8c993e5c0dce06d4a5607c2df9d">arg3::db::sqlite::column::to_value<\/a><\/div><div class="ttdeci">sql_value to_value() const <\/div><\/div>$/;"	a
l00001	html/sqlite_2db_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_SQLDB_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_SQLDB_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;..\/sqldb.h&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;{<\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;        <span class="keyword">namespace <\/span>sqlite<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;            <span class="keyword">namespace <\/span>cache<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            {<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;                <span class="keyword">typedef<\/span> <span class="keyword">enum<\/span> { <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664a241738d243c2679c1b74bbade8340643">None<\/a>, ResultSet, Row, Column } <a class="code" href="sqldb_8h.html#a2786afe865f0e90b5d145068c7b5e664">level<\/a>;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            }<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite_1_1db.html">   33<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a><\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;            {<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a>;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;               <span class="keyword">protected<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                std::shared_ptr&lt;sqlite3&gt; db_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;                cache::level cacheLevel_;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a>(<span class="keyword">const<\/span> <a class="code" href="structarg3_1_1db_1_1uri__type.html">uri<\/a> &amp;info);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a> &amp;other);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a> &amp;other);<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a>();<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <span class="comment">\/* sqldb overrides *\/<\/span><\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <span class="keywordtype">bool<\/span> is_open() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <span class="keywordtype">void<\/span> open(<span class="keywordtype">int<\/span> flags);<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                <span class="keywordtype">void<\/span> open();<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                <span class="keywordtype">void<\/span> close();<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> last_insert_id() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;                <span class="keywordtype">int<\/span> last_number_of_changes() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset_type<\/a> execute(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;                std::string last_error() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;                std::shared_ptr&lt;statement_type&gt; create_statement();<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;                <span class="keywordtype">void<\/span> query_schema(<span class="keyword">const<\/span> std::string &amp;tableName, std::vector&lt;column_definition&gt; &amp;columns);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;                <span class="keywordtype">void<\/span> set_cache_level(cache::level level);<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;                cache::level cache_level() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;            };<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;        }<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;    }<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;}<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="structarg3_1_1db_1_1uri__type_html"><div class="ttname"><a href="structarg3_1_1db_1_1uri__type.html">arg3::db::uri_type<\/a><\/div><div class="ttdef"><b>Definition:<\/b> sqldb.h:56<\/div><\/div>$/;"	a
l00001	html/sqlite_2resultset_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_RESULTSET_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_RESULTSET_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;..\/resultset.h&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">namespace <\/span>sqlite<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            <span class="keyword">class <\/span>db;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">   28<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;                std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">sqlite::db<\/a> *db_;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                <span class="keywordtype">int<\/span> status_;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#aefbee6f068400121e30117a570185083">resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">sqlite::db<\/a> *<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a>, <span class="keyword">const<\/span> std::shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt);<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#aefbee6f068400121e30117a570185083">resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#aefbee6f068400121e30117a570185083">resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a>();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <span class="comment">\/* resultset_impl overrides *\/<\/span><\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#ae312a5c9584d87733a8040eb18d0a8b6">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row.html">row_type<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#a02531392fa3c77ee010251e798eed29e">current_row<\/a>();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#a8451e70d414541e86b6dae487e8b8d49">reset<\/a>();<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#a841fa042988a9f34c17f56082f0e3153">next<\/a>();<\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#a47e5575abe492f4ec14640d47221158f">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;            };<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">   65<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1resultset__impl.html">resultset_impl<\/a><\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            {<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a>;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqldb.html">sqldb<\/a>;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;                <span class="keyword">template<\/span> &lt;<span class="keyword">typename<\/span>, <span class="keyword">typename<\/span>&gt;<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a>;<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">sqlite::db<\/a> *db_;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;                std::vector&lt;std::shared_ptr&lt;row_impl&gt;&gt; rows_;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;                <span class="keywordtype">int<\/span> currentRow_;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">sqlite::db<\/a> *<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a>, std::shared_ptr&lt;sqlite3_stmt&gt; stmt);<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a>();<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__resultset.html">cached_resultset<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;                <span class="comment">\/* resultset_impl overrides *\/<\/span><\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#ae312a5c9584d87733a8040eb18d0a8b6">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1row.html">row_type<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#a02531392fa3c77ee010251e798eed29e">current_row<\/a>();<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#a8451e70d414541e86b6dae487e8b8d49">reset<\/a>();<\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#a841fa042988a9f34c17f56082f0e3153">next<\/a>();<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html#a47e5575abe492f4ec14640d47221158f">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00097"><\/a><span class="lineno">   97<\/span>&#160;            };<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;        }<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;    }<\/div><div class="line"><a name="l00100"><\/a><span class="lineno">  100<\/span>&#160;}<\/div><div class="line"><a name="l00101"><\/a><span class="lineno">  101<\/span>&#160;<\/div><div class="line"><a name="l00102"><\/a><span class="lineno">  102<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00103"><\/a><span class="lineno">  103<\/span>&#160;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1sqlite_1_1resultset_html_ae312a5c9584d87733a8040eb18d0a8b6"><div class="ttname"><a href="classarg3_1_1db_1_1sqlite_1_1resultset.html#ae312a5c9584d87733a8040eb18d0a8b6">arg3::db::sqlite::resultset::is_valid<\/a><\/div><div class="ttdeci">bool is_valid() const <\/div><\/div>$/;"	a
l00001	html/sqlite_2row_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_ROW_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_ROW_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &quot;..\/row.h&quot;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;column.h&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">namespace <\/span>sqlite<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            <span class="keyword">class <\/span>db;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite_1_1row.html">   28<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a>;<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;                std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">sqlite::db<\/a> *db_;<\/div><div class="line"><a name="l00035"><\/a><span class="lineno">   35<\/span>&#160;                <span class="keywordtype">size_t<\/span> size_;<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a209b7f20677e787142eadba3da43caa0">row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">sqlite::db<\/a> *<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a>, <span class="keyword">const<\/span> std::shared_ptr&lt;sqlite3_stmt&gt; &amp;stmt);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a>();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a209b7f20677e787142eadba3da43caa0">row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a209b7f20677e787142eadba3da43caa0">row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html">row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <span class="comment">\/* row_impl overrides *\/<\/span><\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#aa08ea297520f73d8241fd4e0e846698a">column_name<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a39ae77060e058f7b0dc57c303a62255e">column<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a39ae77060e058f7b0dc57c303a62255e">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a944a90c208836113b23fa068d50ecbe2">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a5a7330aa37e5c43eb1855e13f2e55fbb">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;            };<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">   62<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1row__impl.html">row_impl<\/a><\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;            {<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;                <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1resultset.html">resultset<\/a>;<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;                std::vector&lt;std::shared_ptr&lt;cached_column&gt;&gt; columns_;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">sqlite::db<\/a> *<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a>, std::shared_ptr&lt;sqlite3_stmt&gt; stmt);<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a>();<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;                <span class="comment">\/* row_impl overrides *\/<\/span><\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#aa08ea297520f73d8241fd4e0e846698a">column_name<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a39ae77060e058f7b0dc57c303a62255e">column<\/a>(<span class="keywordtype">size_t<\/span> nPosition) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1column.html">column_type<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a39ae77060e058f7b0dc57c303a62255e">column<\/a>(<span class="keyword">const<\/span> std::string &amp;name) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;                <span class="keywordtype">size_t<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a944a90c208836113b23fa068d50ecbe2">size<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1row.html#a5a7330aa37e5c43eb1855e13f2e55fbb">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            };<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;        }<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;    }<\/div><div class="line"><a name="l00092"><\/a><span class="lineno">   92<\/span>&#160;}<\/div><div class="line"><a name="l00093"><\/a><span class="lineno">   93<\/span>&#160;<\/div><div class="line"><a name="l00094"><\/a><span class="lineno">   94<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00095"><\/a><span class="lineno">   95<\/span>&#160;<\/div><div class="line"><a name="l00096"><\/a><span class="lineno">   96<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1sqlite_1_1row_html_aa08ea297520f73d8241fd4e0e846698a"><div class="ttname"><a href="classarg3_1_1db_1_1sqlite_1_1row.html#aa08ea297520f73d8241fd4e0e846698a">arg3::db::sqlite::row::column_name<\/a><\/div><div class="ttdeci">std::string column_name(size_t nPosition) const <\/div><\/div>$/;"	a
l00001	html/sqlite_2statement_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_SQLITE_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_SQLITE_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#ifdef HAVE_CONFIG_H<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;config.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="preprocessor">#ifdef HAVE_LIBSQLITE3<\/span><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;<span class="preprocessor">#include &lt;sqlite3.h&gt;<\/span><\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;<span class="preprocessor">#include &quot;..\/statement.h&quot;<\/span><\/div><div class="line"><a name="l00016"><\/a><span class="lineno">   16<\/span>&#160;<\/div><div class="line"><a name="l00017"><\/a><span class="lineno">   17<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00018"><\/a><span class="lineno">   18<\/span>&#160;{<\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;    {<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        <span class="keyword">namespace <\/span>sqlite<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        {<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            <span class="keyword">class <\/span>db;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;<\/div><div class="line"><a name="l00028"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1sqlite_1_1statement.html">   28<\/a><\/span>&#160;            <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html">arg3::db::statement<\/a><\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;            {<\/div><div class="line"><a name="l00030"><\/a><span class="lineno">   30<\/span>&#160;               <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">sqlite::db<\/a> *db_;<\/div><div class="line"><a name="l00032"><\/a><span class="lineno">   32<\/span>&#160;                std::shared_ptr&lt;sqlite3_stmt&gt; stmt_;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;               <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a319ee4294f6e6831bff30ccda7f61693">statement<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">sqlite::db<\/a> *<a class="code" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a>);<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;                <span class="comment">\/* non-copyable boilerplate *\/<\/span><\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a319ee4294f6e6831bff30ccda7f61693">statement<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a319ee4294f6e6831bff30ccda7f61693">statement<\/a>(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;other) = <span class="keyword">delete<\/span>;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;                <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a>();<\/div><div class="line"><a name="l00046"><\/a><span class="lineno">   46<\/span>&#160;<\/div><div class="line"><a name="l00047"><\/a><span class="lineno">   47<\/span>&#160;                <span class="comment">\/* statement overrides *\/<\/span><\/div><div class="line"><a name="l00048"><\/a><span class="lineno">   48<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a22629fcb768313a2d7491523315c6297">prepare<\/a>(<span class="keyword">const<\/span> std::string &amp;sql);<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a025570e012915fc2bcbcb14f9caf8720">is_valid<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset_type<\/a> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a9f79a22f823c1ac16fcc95ea7bda2dd3">results<\/a>();<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;                <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#acc9ca9ac2ef798dc17f57c74489263c6">result<\/a>();<\/div><div class="line"><a name="l00052"><\/a><span class="lineno">   52<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a5b8974ffd9672ab6829267cfc34ca24f">finish<\/a>();<\/div><div class="line"><a name="l00053"><\/a><span class="lineno">   53<\/span>&#160;                <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#ad11f16e95ccc5efbddd55c954c371e2f">reset<\/a>();<\/div><div class="line"><a name="l00054"><\/a><span class="lineno">   54<\/span>&#160;                <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a9969e5266be4fbab7140132f46b52c28">last_number_of_changes<\/a>();<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;                std::string <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#ab4bd657cb38ccd96e2e5682a13ed7f49">last_error<\/a>();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;                <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a3c620c5c9e2a698b55d4a828ba9ddace">last_insert_id<\/a>();<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00058"><\/a><span class="lineno">   58<\/span>&#160;                <span class="comment">\/* bindable overrides *\/<\/span><\/div><div class="line"><a name="l00059"><\/a><span class="lineno">   59<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">int<\/span> value);<\/div><div class="line"><a name="l00060"><\/a><span class="lineno">   60<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> value);<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> value);<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">float<\/span> value);<\/div><div class="line"><a name="l00064"><\/a><span class="lineno">   64<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keywordtype">double<\/span> value);<\/div><div class="line"><a name="l00065"><\/a><span class="lineno">   65<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::string &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> std::wstring &amp;value, <span class="keywordtype">int<\/span> len = -1);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="sql__value_8h.html#a235cefa981caffaaecb70c346e603c42">sql_blob<\/a> &amp;value);<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> sql_null_type &amp;value);<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keywordtype">size_t<\/span> index, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> &amp;value);<\/div><div class="line"><a name="l00070"><\/a><span class="lineno">   70<\/span>&#160;                <a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html">statement<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1sqlite_1_1statement.html#a58343cd4b9ad7b8736a4083297cf4eb8">bind<\/a>(<span class="keyword">const<\/span> std::string &amp;name, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1sql__value.html">sql_value<\/a> &amp;value);<\/div><div class="line"><a name="l00071"><\/a><span class="lineno">   71<\/span>&#160;            };<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;            <span class="keyword">namespace <\/span>helper<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            {<\/div><div class="line"><a name="l00078"><\/a><span class="lineno"><a class="line" href="structarg3_1_1db_1_1sqlite_1_1helper_1_1stmt__delete.html">   78<\/a><\/span>&#160;                <span class="keyword">struct <\/span><a class="code" href="structarg3_1_1db_1_1sqlite_1_1helper_1_1stmt__delete.html">stmt_delete<\/a> {<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;                    <span class="keywordtype">void<\/span> operator()(sqlite3_stmt *p) <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00080"><\/a><span class="lineno">   80<\/span>&#160;                };<\/div><div class="line"><a name="l00081"><\/a><span class="lineno">   81<\/span>&#160;            }<\/div><div class="line"><a name="l00082"><\/a><span class="lineno">   82<\/span>&#160;        }<\/div><div class="line"><a name="l00083"><\/a><span class="lineno">   83<\/span>&#160;    }<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;}<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00086"><\/a><span class="lineno">   86<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="line"><a name="l00087"><\/a><span class="lineno">   87<\/span>&#160;<\/div><div class="line"><a name="l00088"><\/a><span class="lineno">   88<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1sqlite_1_1statement_html_a9f79a22f823c1ac16fcc95ea7bda2dd3"><div class="ttname"><a href="classarg3_1_1db_1_1sqlite_1_1statement.html#a9f79a22f823c1ac16fcc95ea7bda2dd3">arg3::db::sqlite::statement::results<\/a><\/div><div class="ttdeci">resultset_type results()<\/div><\/div>$/;"	a
l00001	html/statement_8h_source.html	/^<div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_STATEMENT_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<span class="preprocessor">#define ARG3_DB_STATEMENT_H<\/span><\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="bindable_8h.html">bindable.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<span class="preprocessor">#include &quot;resultset.h&quot;<\/span><\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;{<\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    {<\/div><div class="line"><a name="l00018"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1statement.html">   18<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1statement.html">statement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classarg3_1_1db_1_1bindable.html">bindable<\/a><\/div><div class="line"><a name="l00019"><\/a><span class="lineno">   19<\/span>&#160;        {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno">   20<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;            <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1resultset.html">arg3::db::resultset<\/a> <a class="code" href="classarg3_1_1db_1_1resultset.html">resultset_type<\/a>;<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;        <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00028"><\/a><span class="lineno">   28<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#ad04c59042ee2a3ae4219602bbd7a15ce">prepare<\/a>(<span class="keyword">const<\/span> std::string &amp;sql) = 0;<\/div><div class="line"><a name="l00029"><\/a><span class="lineno">   29<\/span>&#160;<\/div><div class="line"><a name="l00033"><\/a><span class="lineno">   33<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#a9f25d625551bf9634dc9bc0004292b3e">finish<\/a>() = 0;<\/div><div class="line"><a name="l00034"><\/a><span class="lineno">   34<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#a57108b429488fef2d19c6df47c99ce8e">reset<\/a>() = 0;<\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#af6e1108c5f353f9194d046b6008fd9e6">is_valid<\/a>() <span class="keyword">const<\/span> = 0;<\/div><div class="line"><a name="l00045"><\/a><span class="lineno">   45<\/span>&#160;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;            <span class="keyword">virtual<\/span> resultset_type <a class="code" href="classarg3_1_1db_1_1statement.html#a9c49ed02b1140d0889c385b4656de2bf">results<\/a>() = 0;<\/div><div class="line"><a name="l00051"><\/a><span class="lineno">   51<\/span>&#160;<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#a5dcd8886973349d19c67cd58947fcb52">result<\/a>() = 0;<\/div><div class="line"><a name="l00057"><\/a><span class="lineno">   57<\/span>&#160;<\/div><div class="line"><a name="l00062"><\/a><span class="lineno">   62<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">int<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#aef96b534c652ac923b8d1468e2b14b2d">last_number_of_changes<\/a>() = 0;<\/div><div class="line"><a name="l00063"><\/a><span class="lineno">   63<\/span>&#160;<\/div><div class="line"><a name="l00068"><\/a><span class="lineno">   68<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1statement.html#a30ad16ce3941fea75e8a62336c38e11e">last_error<\/a>() = 0;<\/div><div class="line"><a name="l00069"><\/a><span class="lineno">   69<\/span>&#160;<\/div><div class="line"><a name="l00074"><\/a><span class="lineno">   74<\/span>&#160;            <span class="keyword">virtual<\/span> <span class="keywordtype">long<\/span> <span class="keywordtype">long<\/span> <a class="code" href="classarg3_1_1db_1_1statement.html#a0fbf96e1c361854675f75b1ebe125880">last_insert_id<\/a>() = 0;<\/div><div class="line"><a name="l00075"><\/a><span class="lineno">   75<\/span>&#160;        };<\/div><div class="line"><a name="l00076"><\/a><span class="lineno">   76<\/span>&#160;    }<\/div><div class="line"><a name="l00077"><\/a><span class="lineno">   77<\/span>&#160;}<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="bindable_8h_html"><div class="ttname"><a href="bindable_8h.html">bindable.h<\/a><\/div><\/div>$/;"	a
l00001	html/where__clause_8h_source.html	/^<a href="where__clause_8h.html">Go to the documentation of this file.<\/a><div class="fragment"><div class="line"><a name="l00001"><\/a><span class="lineno">    1<\/span>&#160;<\/div><div class="line"><a name="l00004"><\/a><span class="lineno">    4<\/span>&#160;<span class="preprocessor">#ifndef ARG3_DB_WHERE_CLAUSE_H<\/span><\/div><div class="line"><a name="l00005"><\/a><span class="lineno">    5<\/span>&#160;<span class="preprocessor">#define ARG3_DB_WHERE_CLAUSE_H<\/span><\/div><div class="line"><a name="l00006"><\/a><span class="lineno">    6<\/span>&#160;<\/div><div class="line"><a name="l00007"><\/a><span class="lineno">    7<\/span>&#160;<span class="preprocessor">#include &lt;vector&gt;<\/span><\/div><div class="line"><a name="l00008"><\/a><span class="lineno">    8<\/span>&#160;<span class="preprocessor">#include &lt;string&gt;<\/span><\/div><div class="line"><a name="l00009"><\/a><span class="lineno">    9<\/span>&#160;<\/div><div class="line"><a name="l00010"><\/a><span class="lineno">   10<\/span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sqldb_8h.html">sqldb.h<\/a>&quot;<\/span><\/div><div class="line"><a name="l00011"><\/a><span class="lineno">   11<\/span>&#160;<\/div><div class="line"><a name="l00012"><\/a><span class="lineno">   12<\/span>&#160;<span class="keyword">namespace <\/span><a class="code" href="namespacearg3.html">arg3<\/a><\/div><div class="line"><a name="l00013"><\/a><span class="lineno">   13<\/span>&#160;{<\/div><div class="line"><a name="l00014"><\/a><span class="lineno">   14<\/span>&#160;    <span class="keyword">namespace <\/span>db<\/div><div class="line"><a name="l00015"><\/a><span class="lineno">   15<\/span>&#160;    {<\/div><div class="line"><a name="l00020"><\/a><span class="lineno"><a class="line" href="classarg3_1_1db_1_1where__clause.html">   20<\/a><\/span>&#160;        <span class="keyword">class <\/span><a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a><\/div><div class="line"><a name="l00021"><\/a><span class="lineno">   21<\/span>&#160;        {<\/div><div class="line"><a name="l00022"><\/a><span class="lineno">   22<\/span>&#160;           <span class="keyword">private<\/span>:<\/div><div class="line"><a name="l00023"><\/a><span class="lineno">   23<\/span>&#160;            std::string value_;<\/div><div class="line"><a name="l00024"><\/a><span class="lineno">   24<\/span>&#160;            std::vector&lt;where_clause&gt; and_;<\/div><div class="line"><a name="l00025"><\/a><span class="lineno">   25<\/span>&#160;            std::vector&lt;where_clause&gt; or_;<\/div><div class="line"><a name="l00026"><\/a><span class="lineno">   26<\/span>&#160;<\/div><div class="line"><a name="l00027"><\/a><span class="lineno">   27<\/span>&#160;           <span class="keyword">public<\/span>:<\/div><div class="line"><a name="l00031"><\/a><span class="lineno">   31<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html#a04409609ae61634e824813813666fd64">where_clause<\/a>();<\/div><div class="line"><a name="l00036"><\/a><span class="lineno">   36<\/span>&#160;            <span class="keyword">explicit<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html#a04409609ae61634e824813813666fd64">where_clause<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00037"><\/a><span class="lineno">   37<\/span>&#160;<\/div><div class="line"><a name="l00038"><\/a><span class="lineno">   38<\/span>&#160;            <span class="comment">\/* boilerplate *\/<\/span><\/div><div class="line"><a name="l00039"><\/a><span class="lineno">   39<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html#a04409609ae61634e824813813666fd64">where_clause<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;other);<\/div><div class="line"><a name="l00040"><\/a><span class="lineno">   40<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html#a04409609ae61634e824813813666fd64">where_clause<\/a>(<a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00041"><\/a><span class="lineno">   41<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;operator=(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;other);<\/div><div class="line"><a name="l00042"><\/a><span class="lineno">   42<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;operator=(<a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;&amp;other);<\/div><div class="line"><a name="l00043"><\/a><span class="lineno">   43<\/span>&#160;            <span class="keyword">virtual<\/span> ~<a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a>();<\/div><div class="line"><a name="l00044"><\/a><span class="lineno">   44<\/span>&#160;<\/div><div class="line"><a name="l00049"><\/a><span class="lineno">   49<\/span>&#160;            <span class="keyword">virtual<\/span> std::string <a class="code" href="classarg3_1_1db_1_1where__clause.html#a3863d4a732924a7da3780594c101c8b7">to_string<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00050"><\/a><span class="lineno">   50<\/span>&#160;<\/div><div class="line"><a name="l00055"><\/a><span class="lineno">   55<\/span>&#160;            <span class="keyword">explicit<\/span> <span class="keyword">operator<\/span> std::string();<\/div><div class="line"><a name="l00056"><\/a><span class="lineno">   56<\/span>&#160;<\/div><div class="line"><a name="l00061"><\/a><span class="lineno">   61<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html#ac76a3c1644bd1461792d9244092694f2">operator&amp;&amp;<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00066"><\/a><span class="lineno">   66<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html#ac76a3c1644bd1461792d9244092694f2">operator&amp;&amp;<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00067"><\/a><span class="lineno">   67<\/span>&#160;<\/div><div class="line"><a name="l00072"><\/a><span class="lineno">   72<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html#a24f12d5e55d8e6fb0989a7aa3dd4801b">operator||<\/a>(<span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;value);<\/div><div class="line"><a name="l00073"><\/a><span class="lineno">   73<\/span>&#160;<\/div><div class="line"><a name="l00078"><\/a><span class="lineno">   78<\/span>&#160;            <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html#a24f12d5e55d8e6fb0989a7aa3dd4801b">operator||<\/a>(<span class="keyword">const<\/span> std::string &amp;value);<\/div><div class="line"><a name="l00079"><\/a><span class="lineno">   79<\/span>&#160;<\/div><div class="line"><a name="l00084"><\/a><span class="lineno">   84<\/span>&#160;            <span class="keywordtype">bool<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html#a947c9e6bc40b716ea23f1faa9945a411">empty<\/a>() <span class="keyword">const<\/span>;<\/div><div class="line"><a name="l00085"><\/a><span class="lineno">   85<\/span>&#160;<\/div><div class="line"><a name="l00089"><\/a><span class="lineno">   89<\/span>&#160;            <span class="keywordtype">void<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html#a6ea6aee9e736d9759207dd14d41ffa28">reset<\/a>();<\/div><div class="line"><a name="l00090"><\/a><span class="lineno">   90<\/span>&#160;        };<\/div><div class="line"><a name="l00091"><\/a><span class="lineno">   91<\/span>&#160;<\/div><div class="line"><a name="l00098"><\/a><span class="lineno">   98<\/span>&#160;        std::ostream &amp;<a class="code" href="join__clause_8h.html#a35039c607a67329c80e6c0275ec789e2">operator&lt;&lt;<\/a>(std::ostream &amp;out, <span class="keyword">const<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> &amp;<a class="code" href="classarg3_1_1db_1_1where__clause.html">where<\/a>);<\/div><div class="line"><a name="l00099"><\/a><span class="lineno">   99<\/span>&#160;<\/div><div class="line"><a name="l00103"><\/a><span class="lineno"><a class="line" href="where__clause_8h.html#a739570ef21a8fbd1363d6d887afdcc9d">  103<\/a><\/span>&#160;        <span class="keyword">typedef<\/span> <a class="code" href="classarg3_1_1db_1_1where__clause.html">where_clause<\/a> where;<\/div><div class="line"><a name="l00104"><\/a><span class="lineno">  104<\/span>&#160;    }<\/div><div class="line"><a name="l00105"><\/a><span class="lineno">  105<\/span>&#160;}<\/div><div class="line"><a name="l00106"><\/a><span class="lineno">  106<\/span>&#160;<\/div><div class="line"><a name="l00107"><\/a><span class="lineno">  107<\/span>&#160;<span class="preprocessor">#endif<\/span><\/div><div class="ttc" id="classarg3_1_1db_1_1where__clause_html_a24f12d5e55d8e6fb0989a7aa3dd4801b"><div class="ttname"><a href="classarg3_1_1db_1_1where__clause.html#a24f12d5e55d8e6fb0989a7aa3dd4801b">arg3::db::where_clause::operator||<\/a><\/div><div class="ttdeci">where_clause &amp; operator||(const where_clause &amp;value)<\/div><\/div>$/;"	a
last	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* last()$/;"	f	class:option::Option
last	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* last()$/;"	f	class:option::Option
lastId_	src/insert_query.h	/^            long long lastId_;$/;"	m	class:arg3::db::insert_query
lastId_	src/postgres/db.h	/^                long long lastId_;$/;"	m	class:arg3::db::postgres::db
lastNumChanges_	src/postgres/db.h	/^                int lastNumChanges_;$/;"	m	class:arg3::db::postgres::db
last_error	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="last_error">last_error<\/a><\/h3>$/;"	a
last_error	html/query_h/Classes/query/index.html	/^<h3><a name="last_error">last_error<\/a><\/h3>$/;"	a
last_error	src/mysql/db.cpp	/^            string db::last_error() const$/;"	f	class:arg3::db::mysql::db
last_error	src/mysql/statement.cpp	/^            string statement::last_error()$/;"	f	class:arg3::db::mysql::statement
last_error	src/postgres/db.cpp	/^            string db::last_error() const$/;"	f	class:arg3::db::postgres::db
last_error	src/postgres/statement.cpp	/^            string statement::last_error()$/;"	f	class:arg3::db::postgres::statement
last_error	src/query.cpp	/^        string query::last_error()$/;"	f	class:arg3::db::query
last_error	src/sqlite/db.cpp	/^            string db::last_error() const$/;"	f	class:arg3::db::sqlite::db
last_error	src/sqlite/statement.cpp	/^            string statement::last_error()$/;"	f	class:arg3::db::sqlite::statement
last_exception	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    static void last_exception(ExceptionType*** e, bool clear=false)$/;"	f	class:snowhouse::ExceptionStorage
last_exception	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    static void last_exception(ExceptionType*** e, bool clear=false)$/;"	f	class:snowhouse::ExceptionStorage
last_insert_id	html/modify_query_h/Classes/insert_query/index.html	/^<h3><a name="last_insert_id">last_insert_id<\/a><\/h3>$/;"	a
last_insert_id	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="last_insert_id">last_insert_id<\/a><\/h3>$/;"	a
last_insert_id	src/insert_query.cpp	/^        long long insert_query::last_insert_id() const$/;"	f	class:arg3::db::insert_query
last_insert_id	src/mysql/db.cpp	/^            long long db::last_insert_id() const$/;"	f	class:arg3::db::mysql::db
last_insert_id	src/mysql/statement.cpp	/^            long long statement::last_insert_id()$/;"	f	class:arg3::db::mysql::statement
last_insert_id	src/postgres/db.cpp	/^            long long db::last_insert_id() const$/;"	f	class:arg3::db::postgres::db
last_insert_id	src/postgres/statement.cpp	/^            long long statement::last_insert_id()$/;"	f	class:arg3::db::postgres::statement
last_insert_id	src/sqlite/db.cpp	/^            long long db::last_insert_id() const$/;"	f	class:arg3::db::sqlite::db
last_insert_id	src/sqlite/statement.cpp	/^            long long statement::last_insert_id()$/;"	f	class:arg3::db::sqlite::statement
last_number_of_changes	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="last_number_of_changes">last_number_of_changes<\/a><\/h3>$/;"	a
last_number_of_changes	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="last_number_of_changes">last_number_of_changes<\/a><\/h3>$/;"	a
last_number_of_changes	src/modify_query.cpp	/^        int modify_query::last_number_of_changes() const$/;"	f	class:arg3::db::modify_query
last_number_of_changes	src/mysql/db.cpp	/^            int db::last_number_of_changes() const$/;"	f	class:arg3::db::mysql::db
last_number_of_changes	src/mysql/statement.cpp	/^            int statement::last_number_of_changes()$/;"	f	class:arg3::db::mysql::statement
last_number_of_changes	src/postgres/db.cpp	/^            int db::last_number_of_changes() const$/;"	f	class:arg3::db::postgres::db
last_number_of_changes	src/postgres/statement.cpp	/^            int statement::last_number_of_changes()$/;"	f	class:arg3::db::postgres::statement
last_number_of_changes	src/sqlite/db.cpp	/^            int db::last_number_of_changes() const$/;"	f	class:arg3::db::sqlite::db
last_number_of_changes	src/sqlite/statement.cpp	/^            int statement::last_number_of_changes()$/;"	f	class:arg3::db::sqlite::statement
last_stmt_error	src/mysql/db.cpp	/^                string last_stmt_error(MYSQL_STMT *stmt)$/;"	f	namespace:arg3::db::mysql::helper
latex_count	html/latex/Makefile	/^	latex_count=8 ; \\$/;"	m
latex_count	latex/Makefile	/^	latex_count=8 ; \\$/;"	m
left_outer	src/join_clause.h	/^            typedef enum { none, natural, inner, left_outer, right_outer, full_outer, cross } type;$/;"	e	enum:arg3::db::join_clause::__anon6
len	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int len; \/\/!< Length of the current part (that ptr points at) in BYTES$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
len	tests/vendor/bandit/bandit/external/optionparser.h	/^    int len; \/\/!< Length of the current part (that ptr points at) in BYTES$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
lenbuf	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int lenbuf[bufmask + 1];$/;"	m	class:option::PrintUsageImplementation::LineWrapper
lenbuf	tests/vendor/bandit/bandit/external/optionparser.h	/^    int lenbuf[bufmask + 1];$/;"	m	class:option::PrintUsageImplementation::LineWrapper
length	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int length()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
length	tests/vendor/bandit/bandit/external/optionparser.h	/^    int length()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
lengths_	src/postgres/binding.h	/^                int *lengths_;$/;"	m	class:arg3::db::postgres::binding
letter_b	html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_b"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;b&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_b	html/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_b"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;b&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_c	html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_c"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;c&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_c	html/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_c"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;c&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_d	html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1bind__mapping.html">bind_mapping<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_d"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;d&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_d	html/html/classes.html	/^<tr><td rowspan="2" valign="bottom"><a name="letter_d"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;d&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_i	html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1sqlite_1_1cached__column.html">cached_column<\/a> (arg3::db::sqlite)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_i"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;i&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_i	html/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_i"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;i&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_j	html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1column.html">column<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_j"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;j&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_j	html/html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_j"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;j&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_m	html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1sqlite_1_1column.html">column<\/a> (arg3::db::sqlite)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_m"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;m&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_m	html/html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1column.html">column<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_m"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;m&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_q	html/classes.html	/^<\/td><td valign="top"><a class="el" href="structarg3_1_1db_1_1column__definition.html">column_definition<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_q"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;q&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_q	html/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_q"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;q&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_r	html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1bindable.html">bindable<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_r"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;r&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_r	html/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_r"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;r&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_s	html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1postgres_1_1binding.html">binding<\/a> (arg3::db::postgres)&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="classarg3_1_1db_1_1postgres_1_1db.html">db<\/a> (arg3::db::postgres)&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="classarg3_1_1db_1_1record.html">record<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_s"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;s&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_s	html/html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1column__impl.html">column_impl<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="classarg3_1_1db_1_1modify__query.html">modify_query<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_s"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;s&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_u	html/classes.html	/^<\/td><td valign="top"><a class="el" href="classarg3_1_1db_1_1sqlite_1_1db.html">db<\/a> (arg3::db::sqlite)&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="structarg3_1_1db_1_1mysql_1_1helper_1_1res__delete.html">res_delete<\/a> (arg3::db::mysql::helper)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_u"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;u&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_u	html/html/classes.html	/^<\/td><td valign="top"><a class="el" href="classarg3_1_1db_1_1resultset__iterator.html">resultset_iterator<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_u"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;u&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_w	html/classes.html	/^<tr><td valign="top"><a class="el" href="classarg3_1_1db_1_1sqlite_1_1cached__row.html">cached_row<\/a> (arg3::db::sqlite)&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="classarg3_1_1db_1_1insert__query.html">insert_query<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="classarg3_1_1db_1_1resultset.html">resultset<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td valign="top"><a class="el" href="classarg3_1_1db_1_1sql__time.html">sql_time<\/a> (arg3::db)&#160;&#160;&#160;<\/td><td rowspan="2" valign="bottom"><a name="letter_w"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;w&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
letter_w	html/html/classes.html	/^<\/td><td rowspan="2" valign="bottom"><a name="letter_w"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&#160;&#160;w&#160;&#160;<\/div><\/td><\/tr><\/table>$/;"	a
level	src/log.cpp	/^                level level;$/;"	m	namespace:arg3::db::log::current	file:
level	src/sqldb.h	/^            } level;$/;"	t	namespace:arg3::db::log	typeref:enum:arg3::db::log::__anon8
level	src/sqlite/db.h	/^                typedef enum { None, ResultSet, Row, Column } level;$/;"	t	namespace:arg3::db::sqlite::cache	typeref:enum:arg3::db::sqlite::cache::__anon9
limit	src/select_query.cpp	/^        select_query &select_query::limit(const string &value)$/;"	f	class:arg3::db::select_query
limit	src/select_query.cpp	/^        string select_query::limit() const$/;"	f	class:arg3::db::select_query
limit_	src/select_query.h	/^            std::string limit_;$/;"	m	class:arg3::db::select_query
line	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int line()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
line	tests/vendor/bandit/bandit/external/optionparser.h	/^    int line()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
lineNumber	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^        int lineNumber;$/;"	m	struct:bandit::Matchers::ValueMarker
lineNumber	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^        int lineNumber;$/;"	m	struct:bandit::Matchers::ValueMarker
line_in_block	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int line_in_block; \/\/!< Line index within the current cell of the current part.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
line_in_block	tests/vendor/bandit/bandit/external/optionparser.h	/^    int line_in_block; \/\/!< Line index within the current cell of the current part.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
line_number	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^    unsigned int line_number() const$/;"	f	struct:bandit::detail::assertion_exception
line_number	tests/vendor/bandit/bandit/assertion_exception.h	/^    unsigned int line_number() const$/;"	f	struct:bandit::detail::assertion_exception
line_number_	libs/variant/tests/vendor/bandit/bandit/assertion_exception.h	/^    unsigned int line_number_;$/;"	m	struct:bandit::detail::assertion_exception
line_number_	tests/vendor/bandit/bandit/assertion_exception.h	/^    unsigned int line_number_;$/;"	m	struct:bandit::detail::assertion_exception
linenumber	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^	unsigned linenumber()	{ return _linenumber; }$/;"	f	class:bandit::Matchers::MatcherException
listener	libs/variant/tests/vendor/bandit/bandit/listener.h	/^  struct listener$/;"	s	namespace:bandit::detail
listener	tests/vendor/bandit/bandit/listener.h	/^  struct listener$/;"	s	namespace:bandit::detail
listener_ptr	libs/variant/tests/vendor/bandit/bandit/listener.h	/^  typedef std::unique_ptr<listener> listener_ptr;$/;"	t	namespace:bandit::detail
listener_ptr	tests/vendor/bandit/bandit/listener.h	/^  typedef std::unique_ptr<listener> listener_ptr;$/;"	t	namespace:bandit::detail
log	libs/variant/tests/vendor/bandit/specs/fakes/logging_fake.h	/^    std::ostream& log()$/;"	f	struct:bandit::specs::logging_fake
log	src/log.cpp	/^        namespace log$/;"	n	namespace:arg3::db	file:
log	src/log.h	/^        namespace log$/;"	n	namespace:arg3::db
log	src/sqldb.h	/^        namespace log$/;"	n	namespace:arg3::db
log	tests/vendor/bandit/specs/fakes/logging_fake.h	/^    std::ostream& log()$/;"	f	struct:bandit::specs::logging_fake
log.h	html/log_h/index.html	/^<h1><a name="log.h">log.h<\/a><\/h1>$/;"	a
logging	libs/variant/tests/vendor/bandit/cmake/cotire/src/log.cpp	/^namespace logging {$/;"	n	file:
logging	libs/variant/tests/vendor/bandit/cmake/cotire/src/log.h	/^namespace logging {$/;"	n
logging	tests/vendor/bandit/cmake/cotire/src/log.cpp	/^namespace logging {$/;"	n	file:
logging	tests/vendor/bandit/cmake/cotire/src/log.h	/^namespace logging {$/;"	n
logging_fake	libs/variant/tests/vendor/bandit/specs/fakes/logging_fake.h	/^  struct logging_fake$/;"	s	namespace:bandit::specs
logging_fake	tests/vendor/bandit/specs/fakes/logging_fake.h	/^  struct logging_fake$/;"	s	namespace:bandit::specs
logstm_	libs/variant/tests/vendor/bandit/specs/fakes/logging_fake.h	/^    std::stringstream logstm_;$/;"	m	struct:bandit::specs::logging_fake
logstm_	tests/vendor/bandit/specs/fakes/logging_fake.h	/^    std::stringstream logstm_;$/;"	m	struct:bandit::specs::logging_fake
longopt	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* const longopt;$/;"	m	struct:option::Descriptor
longopt	tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* const longopt;$/;"	m	struct:option::Descriptor
lvargs	src/log.cpp	/^            static void lvargs(log::level level, const char *const format, va_list args)$/;"	f	namespace:arg3::db::log
m_constraint	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^    ConstraintType m_constraint;$/;"	m	struct:snowhouse::ConstraintAdapter
m_constraint	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^    ConstraintType m_constraint;$/;"	m	struct:snowhouse::ConstraintAdapter
m_constraint_list	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ConstraintListType m_constraint_list;$/;"	m	struct:snowhouse::ExpressionBuilder
m_constraint_list	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^    ConstraintListType m_constraint_list;$/;"	m	struct:snowhouse::ExpressionBuilder
m_delta	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    DeltaType m_delta;$/;"	m	struct:snowhouse::EqualsWithDeltaConstraint
m_delta	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    DeltaType m_delta;$/;"	m	struct:snowhouse::EqualsWithDeltaConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::ContainsConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::EndsWithConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::EqualsConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::EqualsWithDeltaConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::HasLengthConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::IsGreaterThanConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::IsGreaterThanOrEqualToConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::IsLessThanConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::IsLessThanOrEqualToConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::StartsWithConstraint
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^      unsigned int m_expected;$/;"	m	struct:snowhouse::AtLeastOperator
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^      unsigned int m_expected;$/;"	m	struct:snowhouse::AtMostOperator
m_expected	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^      unsigned int m_expected;$/;"	m	struct:snowhouse::ExactlyOperator
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::ContainsConstraint
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::EndsWithConstraint
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::EqualsConstraint
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::EqualsWithDeltaConstraint
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::HasLengthConstraint
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::IsGreaterThanConstraint
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::IsLessThanConstraint
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^    ExpectedType m_expected;$/;"	m	struct:snowhouse::StartsWithConstraint
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^      unsigned int m_expected;$/;"	m	struct:snowhouse::AtLeastOperator
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^      unsigned int m_expected;$/;"	m	struct:snowhouse::AtMostOperator
m_expected	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^      unsigned int m_expected;$/;"	m	struct:snowhouse::ExactlyOperator
m_expression	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^    ExpressionType m_expression;$/;"	m	struct:snowhouse::NotExpression
m_expression	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^    ExpressionType m_expression;$/;"	m	struct:snowhouse::NotExpression
m_fileName	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      std::string m_fileName;$/;"	m	class:snowhouse::AssertionException
m_fileName	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      std::string m_fileName;$/;"	m	class:snowhouse::AssertionException
m_head	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    HeadType m_head;$/;"	m	struct:snowhouse::ConstraintList
m_head	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    HeadType m_head;$/;"	m	struct:snowhouse::ConstraintList
m_id	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    int m_id;$/;"	m	struct:__anon3::WithoutStreamOperator	file:
m_id	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    int m_id;$/;"	m	struct:__anon10::WithoutStreamOperator	file:
m_left	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    LeftExpression m_left;$/;"	m	struct:snowhouse::AndExpression
m_left	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    LeftExpression m_left;$/;"	m	struct:snowhouse::OrExpression
m_left	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    LeftExpression m_left;$/;"	m	struct:snowhouse::AndExpression
m_left	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    LeftExpression m_left;$/;"	m	struct:snowhouse::OrExpression
m_line	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      unsigned int m_line;$/;"	m	class:snowhouse::AssertionException
m_line	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      unsigned int m_line;$/;"	m	class:snowhouse::AssertionException
m_matcher	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^    MatcherType m_matcher;$/;"	m	struct:snowhouse::FulfillsConstraint
m_matcher	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^    MatcherType m_matcher;$/;"	m	struct:snowhouse::FulfillsConstraint
m_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      std::string m_message;  $/;"	m	class:snowhouse::AssertionException
m_message	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/invalidexpressionexception.h	/^    std::string m_message;$/;"	m	struct:snowhouse::InvalidExpressionException
m_message	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      std::string m_message;  $/;"	m	class:snowhouse::AssertionException
m_message	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^    std::string m_message;$/;"	m	struct:snowhouse::InvalidExpressionException
m_right	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    RightExpression m_right;$/;"	m	struct:snowhouse::AndExpression
m_right	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    RightExpression m_right;$/;"	m	struct:snowhouse::OrExpression
m_right	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    RightExpression m_right;$/;"	m	struct:snowhouse::AndExpression
m_right	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    RightExpression m_right;$/;"	m	struct:snowhouse::OrExpression
m_tail	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    TailType m_tail;$/;"	m	struct:snowhouse::ConstraintList
m_tail	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    TailType m_tail;$/;"	m	struct:snowhouse::ConstraintList
main	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	.vagrant-build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	.vagrant-build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	debug/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	debug/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	libs/variant/tests/arg3.test.cpp	/^int main(int argc, char *argv[])$/;"	f
main	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/main.cpp	/^int main()$/;"	f
main	libs/variant/tests/vendor/bandit/cmake/cotire/src/main.cpp	/^int main()$/;"	f
main	libs/variant/tests/vendor/bandit/specs/main.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tests/arg3.test.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tests/main.test.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tests/run_all.test.cpp	/^int main(int argc, char *argv[])$/;"	f
main	tests/stress.test.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/main.cpp	/^int main()$/;"	f
main	tests/vendor/bandit/cmake/cotire/src/main.cpp	/^int main()$/;"	f
main	tests/vendor/bandit/specs/main.cpp	/^int main(int argc, char* argv[])$/;"	f
mappings_	src/bindable.h	/^            type mappings_;$/;"	m	class:arg3::db::bind_mapping
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeCloseTo
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^        bool matches(const U& container) const$/;"	f	class:bandit::Matchers::BeEmpty
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeFalsy
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^        bool matches(const std::nullptr_t&) const$/;"	f	class:bandit::Matchers::BeFalsy
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeGTE
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeGreaterThan
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeLTE
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeLessThan
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^        bool matches(U *const & actualValue) const$/;"	f	class:bandit::Matchers::BeNull
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeTruthy
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^        bool matches(const std::nullptr_t&) const$/;"	f	class:bandit::Matchers::BeTruthy
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^	bool matches(char *const container) const$/;"	f	class:bandit::Matchers::Contain
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^	bool matches(const char *const container) const$/;"	f	class:bandit::Matchers::Contain
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^        bool matches(const U& container) const$/;"	f	class:bandit::Matchers::Contain
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^        bool matches(const std::vector<U>& container) const$/;"	f	class:bandit::Matchers::Contain
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^	bool matches(char* actualValue) const$/;"	f	class:bandit::Matchers::Equal
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^	bool matches(const char* actualValue) const$/;"	f	class:bandit::Matchers::Equal
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^	bool matches(const std::unique_ptr<U>& pointer) const$/;"	f	class:bandit::Matchers::Equal
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::Equal
matches	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        bool matches(const U& block) const$/;"	f	class:bandit::Matchers::ThrowException
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeCloseTo
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeEmpty.h	/^        bool matches(const U& container) const$/;"	f	class:bandit::Matchers::BeEmpty
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeFalsy
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGTE.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeGTE
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeGreaterThan.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeGreaterThan
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLTE.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeLTE
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeLessThan.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeLessThan
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeNull.h	/^        bool matches(U *const & actualValue) const$/;"	f	class:bandit::Matchers::BeNull
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeTruthy.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::BeTruthy
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^	bool matches(char *const container) const$/;"	f	class:bandit::Matchers::Contain
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^	bool matches(const char *const container) const$/;"	f	class:bandit::Matchers::Contain
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^        bool matches(const U& container) const$/;"	f	class:bandit::Matchers::Contain
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Contain.h	/^        bool matches(const std::vector<U>& container) const$/;"	f	class:bandit::Matchers::Contain
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^	bool matches(char* actualValue) const$/;"	f	class:bandit::Matchers::Equal
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^	bool matches(const char* actualValue) const$/;"	f	class:bandit::Matchers::Equal
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^	bool matches(const std::unique_ptr<U>& pointer) const$/;"	f	class:bandit::Matchers::Equal
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^        bool matches(const U& actualValue) const$/;"	f	class:bandit::Matchers::Equal
matches	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        bool matches(const U& block) const$/;"	f	class:bandit::Matchers::ThrowException
matches_only_pattern	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_only_pattern(const char* name) const$/;"	f	struct:bandit::detail::bandit_run_policy
matches_only_pattern	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_only_pattern(const std::string& name) const$/;"	f	struct:bandit::detail::bandit_run_policy
matches_only_pattern	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_only_pattern(const char* name) const$/;"	f	struct:bandit::detail::bandit_run_policy
matches_only_pattern	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_only_pattern(const std::string& name) const$/;"	f	struct:bandit::detail::bandit_run_policy
matches_pattern	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_pattern(const std::string& name, const std::string& pattern) const$/;"	f	struct:bandit::detail::bandit_run_policy
matches_pattern	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_pattern(const std::string& name, const std::string& pattern) const$/;"	f	struct:bandit::detail::bandit_run_policy
matches_skip_pattern	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_skip_pattern(const char* name) const$/;"	f	struct:bandit::detail::bandit_run_policy
matches_skip_pattern	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_skip_pattern(const std::string& name) const$/;"	f	struct:bandit::detail::bandit_run_policy
matches_skip_pattern	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_skip_pattern(const char* name) const$/;"	f	struct:bandit::detail::bandit_run_policy
matches_skip_pattern	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool matches_skip_pattern(const std::string& name) const$/;"	f	struct:bandit::detail::bandit_run_policy
max_line_in_block	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int max_line_in_block; \/\/!< Greatest index of a line within the block. This is the number of \\\\v within the cell with the most \\\\vs.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
max_line_in_block	tests/vendor/bandit/bandit/external/optionparser.h	/^    int max_line_in_block; \/\/!< Greatest index of a line within the block. This is the number of \\\\v within the cell with the most \\\\vs.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
message	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatcherException.h	/^	std::string& message()	{ return _message; }$/;"	f	class:bandit::Matchers::MatcherException
metadata_	src/mysql/resultset.h	/^                std::shared_ptr<MYSQL_RES> metadata_;$/;"	m	class:arg3::db::mysql::stmt_resultset
metadata_	src/mysql/row.h	/^                std::shared_ptr<MYSQL_RES> metadata_;$/;"	m	class:arg3::db::mysql::stmt_row
modify_query	html/modify_query_h/Classes/modify_query/index.html	/^<h1><a name="modify_query">modify_query<\/a><\/h1>$/;"	a
modify_query	src/modify_query.cpp	/^        modify_query::modify_query(const modify_query &other) : query(other), flags_(other.flags_), numChanges_(other.numChanges_)$/;"	f	class:arg3::db::modify_query
modify_query	src/modify_query.cpp	/^        modify_query::modify_query(const shared_ptr<schema> &schema) : modify_query(schema->db())$/;"	f	class:arg3::db::modify_query
modify_query	src/modify_query.cpp	/^        modify_query::modify_query(modify_query &&other) : query(std::move(other)), flags_(other.flags_), numChanges_(other.numChanges_)$/;"	f	class:arg3::db::modify_query
modify_query	src/modify_query.cpp	/^        modify_query::modify_query(sqldb *db) : query(db), flags_(0), numChanges_(0)$/;"	f	class:arg3::db::modify_query
modify_query	src/modify_query.h	/^        class modify_query : public query$/;"	c	namespace:arg3::db
modify_query(conststd::shared_ptr)	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="modify_query(conststd::shared_ptr)">modify_query(const std :: shared_ptr &)<\/a><\/h3>$/;"	a
modify_query(conststd::shared_ptr,conststd::vector)	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="modify_query(conststd::shared_ptr,conststd::vector)">modify_query(const std :: shared_ptr &, const std :: vector &)<\/a><\/h3>$/;"	a
modify_query(sqldb*,conststd::string)	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="modify_query(sqldb*,conststd::string)">modify_query(sqldb *, const std :: string &)<\/a><\/h3>$/;"	a
modify_query(sqldb*,conststd::string,conststd::vector)	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="modify_query(sqldb*,conststd::string,conststd::vector)">modify_query(sqldb *, const std :: string &, const std :: vector &)<\/a><\/h3>$/;"	a
modify_query.h	html/modify_query_h/index.html	/^<h1><a name="modify_query.h">modify_query.h<\/a><\/h1>$/;"	a
move	src/query.cpp	/^                                               named_params_(std::move(other.named_params_))$/;"	f	namespace:arg3::db
move_value	libs/variant/src/variant.cpp	/^    variant &variant::move_value(variant &&other)$/;"	f	class:arg3::variant
must	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^#define must	/;"	d
must	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^#define must	/;"	d
must_not	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^#define must_not /;"	d
must_not	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^#define must_not /;"	d
my_type	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^  my_type(int my_val)$/;"	f	struct:my_type
my_type	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^struct my_type$/;"	s	file:
my_type	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^  my_type(int my_val)$/;"	f	struct:my_type
my_type	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^struct my_type$/;"	s	file:
my_val_	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^  int my_val_;$/;"	m	struct:my_type	file:
my_val_	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^  int my_val_;$/;"	m	struct:my_type	file:
mysql	src/mysql/binding.cpp	/^        namespace mysql$/;"	n	namespace:arg3::db	file:
mysql	src/mysql/binding.h	/^        namespace mysql$/;"	n	namespace:arg3::db
mysql	src/mysql/column.cpp	/^        namespace mysql$/;"	n	namespace:arg3::db	file:
mysql	src/mysql/column.h	/^        namespace mysql$/;"	n	namespace:arg3::db
mysql	src/mysql/db.cpp	/^        namespace mysql$/;"	n	namespace:arg3::db	file:
mysql	src/mysql/db.h	/^        namespace mysql$/;"	n	namespace:arg3::db
mysql	src/mysql/resultset.cpp	/^        namespace mysql$/;"	n	namespace:arg3::db	file:
mysql	src/mysql/resultset.h	/^        namespace mysql$/;"	n	namespace:arg3::db
mysql	src/mysql/row.cpp	/^        namespace mysql$/;"	n	namespace:arg3::db	file:
mysql	src/mysql/row.h	/^        namespace mysql$/;"	n	namespace:arg3::db
mysql	src/mysql/statement.cpp	/^        namespace mysql$/;"	n	namespace:arg3::db	file:
mysql	src/mysql/statement.h	/^        namespace mysql$/;"	n	namespace:arg3::db
mysql_binding	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h1><a name="mysql_binding">mysql_binding<\/a><\/h1>$/;"	a
mysql_binding	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="mysql_binding">mysql_binding<\/a><\/h3>$/;"	a
mysql_binding()	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="mysql_binding()">mysql_binding()<\/a><\/h3>$/;"	a
mysql_binding(MYSQL_BIND*,size_t)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="mysql_binding(MYSQL_BIND*,size_t)">mysql_binding(MYSQL_BIND *, size_t)<\/a><\/h3>$/;"	a
mysql_binding(constMYSQL_BIND)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="mysql_binding(constMYSQL_BIND)">mysql_binding(const MYSQL_BIND &)<\/a><\/h3>$/;"	a
mysql_binding(size_t)	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="mysql_binding(size_t)">mysql_binding(size_t)<\/a><\/h3>$/;"	a
mysql_binding.h	html/mysql_binding_h/index.html	/^<h1><a name="mysql_binding.h">mysql_binding.h<\/a><\/h1>$/;"	a
mysql_cached_column	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<h1><a name="mysql_cached_column">mysql_cached_column<\/a><\/h1>$/;"	a
mysql_cached_column(conststd::shared_ptr,MYSQL_ROW,size_t)	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<h3><a name="mysql_cached_column(conststd::shared_ptr,MYSQL_ROW,size_t)">mysql_cached_column(const std :: shared_ptr &, MYSQL_ROW, size_t)<\/a><\/h3>$/;"	a
mysql_cached_column(conststd::string,mysql_binding,size_t)	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<h3><a name="mysql_cached_column(conststd::string,mysql_binding,size_t)">mysql_cached_column(const std :: string &, mysql_binding &, size_t)<\/a><\/h3>$/;"	a
mysql_cached_resultset	html/mysql_resultset_h/Classes/mysql_cached_resultset/index.html	/^<h1><a name="mysql_cached_resultset">mysql_cached_resultset<\/a><\/h1>$/;"	a
mysql_cached_row	html/mysql_row_h/Classes/mysql_cached_row/index.html	/^<h1><a name="mysql_cached_row">mysql_cached_row<\/a><\/h1>$/;"	a
mysql_column	html/mysql_column_h/Classes/mysql_column/index.html	/^<h1><a name="mysql_column">mysql_column<\/a><\/h1>$/;"	a
mysql_column	html/mysql_column_h/Classes/mysql_column/index.html	/^<h3><a name="mysql_column">mysql_column<\/a><\/h3>$/;"	a
mysql_column.h	html/mysql_column_h/index.html	/^<h1><a name="mysql_column.h">mysql_column.h<\/a><\/h1>$/;"	a
mysql_db	html/mysql_db_h/Classes/mysql_db/index.html	/^<h1><a name="mysql_db">mysql_db<\/a><\/h1>$/;"	a
mysql_db	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="mysql_db">mysql_db<\/a><\/h3>$/;"	a
mysql_db.h	html/mysql_db_h/index.html	/^<h1><a name="mysql_db.h">mysql_db.h<\/a><\/h1>$/;"	a
mysql_resultset	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<h1><a name="mysql_resultset">mysql_resultset<\/a><\/h1>$/;"	a
mysql_resultset	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<h3><a name="mysql_resultset">mysql_resultset<\/a><\/h3>$/;"	a
mysql_resultset.h	html/mysql_resultset_h/index.html	/^<h1><a name="mysql_resultset.h">mysql_resultset.h<\/a><\/h1>$/;"	a
mysql_row	html/mysql_row_h/Classes/mysql_row/index.html	/^<h1><a name="mysql_row">mysql_row<\/a><\/h1>$/;"	a
mysql_row	html/mysql_row_h/Classes/mysql_row/index.html	/^<h3><a name="mysql_row">mysql_row<\/a><\/h3>$/;"	a
mysql_row.h	html/mysql_row_h/index.html	/^<h1><a name="mysql_row.h">mysql_row.h<\/a><\/h1>$/;"	a
mysql_statement	html/mysql_statement_h/Classes/mysql_statement/index.html	/^<h1><a name="mysql_statement">mysql_statement<\/a><\/h1>$/;"	a
mysql_statement.h	html/mysql_statement_h/index.html	/^<h1><a name="mysql_statement.h">mysql_statement.h<\/a><\/h1>$/;"	a
mysql_stmt_column	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<h1><a name="mysql_stmt_column">mysql_stmt_column<\/a><\/h1>$/;"	a
mysql_stmt_column	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<h3><a name="mysql_stmt_column">mysql_stmt_column<\/a><\/h3>$/;"	a
mysql_stmt_resultset	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<h1><a name="mysql_stmt_resultset">mysql_stmt_resultset<\/a><\/h1>$/;"	a
mysql_stmt_resultset	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<h3><a name="mysql_stmt_resultset">mysql_stmt_resultset<\/a><\/h3>$/;"	a
mysql_stmt_row	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<h1><a name="mysql_stmt_row">mysql_stmt_row<\/a><\/h1>$/;"	a
mysql_stmt_row	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<h3><a name="mysql_stmt_row">mysql_stmt_row<\/a><\/h3>$/;"	a
name	html/column_h/Classes/column/index.html	/^<h3><a name="name">name<\/a><\/h3>$/;"	a
name	html/column_h/Classes/column_impl/index.html	/^<h3><a name="name">name<\/a><\/h3>$/;"	a
name	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<h3><a name="name">name<\/a><\/h3>$/;"	a
name	html/mysql_column_h/Classes/mysql_column/index.html	/^<h3><a name="name">name<\/a><\/h3>$/;"	a
name	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<h3><a name="name">name<\/a><\/h3>$/;"	a
name	libs/variant/tests/vendor/bandit/bandit/context.h	/^        const std::string& name() $/;"	f	class:bandit::detail::bandit_context
name	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* name;$/;"	m	class:option::Option
name	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    const std::string& name()$/;"	f	struct:bandit::fakes::fake_context
name	src/column.cpp	/^        std::string column::name() const$/;"	f	class:arg3::db::column
name	src/mysql/column.cpp	/^            string column::name() const$/;"	f	class:arg3::db::mysql::column
name	src/mysql/column.cpp	/^            string stmt_column::name() const$/;"	f	class:arg3::db::mysql::stmt_column
name	src/postgres/column.cpp	/^            string column::name() const$/;"	f	class:arg3::db::postgres::column
name	src/row.h	/^            std::string name() const$/;"	f	class:arg3::db::row_iterator
name	src/schema.h	/^            std::string name;$/;"	m	struct:arg3::db::column_definition
name	src/sqlite/column.cpp	/^            string cached_column::name() const$/;"	f	class:arg3::db::sqlite::cached_column
name	src/sqlite/column.cpp	/^            string column::name() const$/;"	f	class:arg3::db::sqlite::column
name	tests/vendor/bandit/bandit/context.h	/^        const std::string& name() $/;"	f	class:bandit::detail::bandit_context
name	tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* name;$/;"	m	class:option::Option
name	tests/vendor/bandit/specs/fakes/fake_context.h	/^    const std::string& name()$/;"	f	struct:bandit::fakes::fake_context
name_	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    std::string name_;$/;"	m	struct:bandit::fakes::fake_context
name_	src/mysql/column.h	/^                std::string name_;$/;"	m	class:arg3::db::mysql::column
name_	src/mysql/column.h	/^                std::string name_;$/;"	m	class:arg3::db::mysql::stmt_column
name_	src/sqlite/column.h	/^                std::string name_;$/;"	m	class:arg3::db::sqlite::cached_column
name_	tests/vendor/bandit/specs/fakes/fake_context.h	/^    std::string name_;$/;"	m	struct:bandit::fakes::fake_context
name_contains_skip_policy	libs/variant/tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^    name_contains_skip_policy(const char* pattern)$/;"	f	struct:bandit::detail::name_contains_skip_policy
name_contains_skip_policy	libs/variant/tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^  struct name_contains_skip_policy : public skip_policy$/;"	s	namespace:bandit::detail
name_contains_skip_policy	tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^    name_contains_skip_policy(const char* pattern)$/;"	f	struct:bandit::detail::name_contains_skip_policy
name_contains_skip_policy	tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^  struct name_contains_skip_policy : public skip_policy$/;"	s	namespace:bandit::detail
named_params_	src/query.cpp	/^        query::query(const query &other) noexcept : db_(other.db_), stmt_(other.stmt_), params_(other.params_), named_params_(other.named_params_)$/;"	f	namespace:arg3::db
named_params_	src/query.h	/^            std::unordered_map<std::string, sql_value> named_params_;$/;"	m	class:arg3::db::query
namelen	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  int namelen;$/;"	m	class:option::Option
namelen	tests/vendor/bandit/bandit/external/optionparser.h	/^  int namelen;$/;"	m	class:option::Option
natural	src/join_clause.h	/^            typedef enum { none, natural, inner, left_outer, right_outer, full_outer, cross } type;$/;"	e	enum:arg3::db::join_clause::__anon6
negate	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^        MatchProxy<T> negate() const$/;"	f	class:bandit::Matchers::MatchProxy
negate	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^        MatchProxy<T> negate() const$/;"	f	class:bandit::Matchers::MatchProxy
nested-classes	html/base__record_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/bindable_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/column_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/base__record_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/bindable_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/column_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/join__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/modify__query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/resultset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/row_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/schema_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/schema__factory_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/select__query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/sqldb_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/statement_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/html/where__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/join__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/modify__query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/mysql__binding_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/mysql__column_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/mysql__db_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/mysql__resultset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/mysql__row_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/mysql__statement_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/namespacearg3_1_1db_1_1postgres_1_1helper.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/postgres__binding_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/postgres__column_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/postgres__db_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/postgres__resultset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/postgres__row_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/postgres__statement_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/record_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/resultset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/row_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/schema_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/schema__factory_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/select__query_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/sql__value_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/sqldb_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/sqlite3__column_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/sqlite3__db_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/sqlite3__resultset_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/sqlite3__row_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/sqlite3__statement_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/statement_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
nested-classes	html/where__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"><\/a>$/;"	a
never_run_policy	libs/variant/tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^  struct never_run_policy : public run_policy$/;"	s	namespace:bandit::detail
never_run_policy	tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^  struct never_run_policy : public run_policy$/;"	s	namespace:bandit::detail
next	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<h3><a name="next">next<\/a><\/h3>$/;"	a
next	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<h3><a name="next">next<\/a><\/h3>$/;"	a
next	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    bool next()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
next	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* next()$/;"	f	class:option::Option
next	src/mysql/resultset.cpp	/^            bool resultset::next()$/;"	f	class:arg3::db::mysql::resultset
next	src/mysql/resultset.cpp	/^            bool stmt_resultset::next()$/;"	f	class:arg3::db::mysql::stmt_resultset
next	src/postgres/resultset.cpp	/^            bool resultset::next()$/;"	f	class:arg3::db::postgres::resultset
next	src/resultset.cpp	/^        bool resultset::next()$/;"	f	class:arg3::db::resultset
next	src/sqlite/resultset.cpp	/^            bool cached_resultset::next()$/;"	f	class:arg3::db::sqlite::cached_resultset
next	src/sqlite/resultset.cpp	/^            bool resultset::next()$/;"	f	class:arg3::db::sqlite::resultset
next	tests/vendor/bandit/bandit/external/optionparser.h	/^    bool next()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
next	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* next()$/;"	f	class:option::Option
nextRow	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    bool nextRow()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
nextRow	tests/vendor/bandit/bandit/external/optionparser.h	/^    bool nextRow()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
nextTable	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    bool nextTable()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
nextTable	tests/vendor/bandit/bandit/external/optionparser.h	/^    bool nextTable()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
next_	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* next_;$/;"	m	class:option::Option
next_	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* next_;$/;"	m	class:option::Option
nextwrap	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* nextwrap()$/;"	f	class:option::Option
nextwrap	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* nextwrap()$/;"	f	class:option::Option
no	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    typedef char (&no)[2];$/;"	t	namespace:snowhouse::detail
no	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    typedef char (&no)[2];$/;"	t	namespace:snowhouse::detail
no_color	libs/variant/tests/vendor/bandit/bandit/options.h	/^      bool no_color() const$/;"	f	struct:bandit::detail::options
no_color	tests/vendor/bandit/bandit/options.h	/^      bool no_color() const$/;"	f	struct:bandit::detail::options
noexcept	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/snowhouse.h	/^#define noexcept$/;"	d
noexcept	libs/variant/tests/vendor/bandit/bandit/bandit.h	/^#define noexcept$/;"	d
noexcept	src/query.h	/^            query(const query &other) noexcept;$/;"	m	class:arg3::db::query
noexcept	src/query.h	/^            query(query &&other) noexcept;$/;"	m	class:arg3::db::query
nonOption	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* nonOption(int i)$/;"	f	class:option::Parser
nonOption	tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* nonOption(int i)$/;"	f	class:option::Parser
nonOptions	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const char** nonOptions()$/;"	f	class:option::Parser
nonOptions	tests/vendor/bandit/bandit/external/optionparser.h	/^  const char** nonOptions()$/;"	f	class:option::Parser
nonOptionsCount	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  int nonOptionsCount()$/;"	f	class:option::Parser
nonOptionsCount	tests/vendor/bandit/bandit/external/optionparser.h	/^  int nonOptionsCount()$/;"	f	class:option::Parser
non_const_argv_	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^    char** non_const_argv_;$/;"	m	struct:bandit::specs::util::argv_helper
non_const_argv_	tests/vendor/bandit/specs/util/argv_helper.h	/^    char** non_const_argv_;$/;"	m	struct:bandit::specs::util::argv_helper
none	src/join_clause.h	/^            typedef enum { none, natural, inner, left_outer, right_outer, full_outer, cross } type;$/;"	e	enum:arg3::db::join_clause::__anon6
nonop_args	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const char** nonop_args; \/\/!< @internal @brief see nonOptions()$/;"	m	class:option::Parser
nonop_args	tests/vendor/bandit/bandit/external/optionparser.h	/^  const char** nonop_args; \/\/!< @internal @brief see nonOptions()$/;"	m	class:option::Parser
nonop_count	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  int nonop_count; \/\/!< @internal @brief see nonOptionsCount()$/;"	m	class:option::Parser
nonop_count	tests/vendor/bandit/bandit/external/optionparser.h	/^  int nonop_count; \/\/!< @internal @brief see nonOptionsCount()$/;"	m	class:option::Parser
numChanges_	src/modify_query.h	/^            int numChanges_;$/;"	m	class:arg3::db::modify_query
num_	libs/variant/src/variant.h	/^            long long num_;$/;"	m	union:arg3::variant::__anon2
on	src/join_clause.cpp	/^        join_clause &join_clause::on(const where_clause &value)$/;"	f	class:arg3::db::join_clause
on	src/join_clause.cpp	/^        where_clause &join_clause::on(const string &value)$/;"	f	class:arg3::db::join_clause
on(conststd::string)	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="on(conststd::string)">on(const std :: string &)<\/a><\/h3>$/;"	a
on(constwhere_clause)	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="on(constwhere_clause)">on(const where_clause &)<\/a><\/h3>$/;"	a
on_	src/join_clause.h	/^            where_clause on_;$/;"	m	class:arg3::db::join_clause
on_record_init	src/record.h	/^            virtual void on_record_init(const row &values)$/;"	f	class:arg3::db::record
only	libs/variant/tests/vendor/bandit/bandit/options.h	/^      const char* only() const$/;"	f	struct:bandit::detail::options
only	tests/vendor/bandit/bandit/options.h	/^      const char* only() const$/;"	f	struct:bandit::detail::options
only_pattern_	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    std::string only_pattern_;$/;"	m	struct:bandit::detail::bandit_run_policy
only_pattern_	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    std::string only_pattern_;$/;"	m	struct:bandit::detail::bandit_run_policy
op_count	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  int op_count; \/\/!< @internal @brief see optionsCount()$/;"	m	class:option::Parser
op_count	tests/vendor/bandit/bandit/external/optionparser.h	/^  int op_count; \/\/!< @internal @brief see optionsCount()$/;"	m	class:option::Parser
open	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="open">open<\/a><\/h3>$/;"	a
open	src/mysql/db.cpp	/^            void db::open()$/;"	f	class:arg3::db::mysql::db
open	src/postgres/db.cpp	/^            void db::open()$/;"	f	class:arg3::db::postgres::db
open	src/sqlite/db.cpp	/^            void db::open()$/;"	f	class:arg3::db::sqlite::db
open	src/sqlite/db.cpp	/^            void db::open(int flags)$/;"	f	class:arg3::db::sqlite::db
operator !	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^    NotExpression<T> operator!() const$/;"	f	struct:snowhouse::Expression
operator !	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^    NotExpression<T> operator!() const$/;"	f	struct:snowhouse::Expression
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(bool b, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(const binary &bin, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(const std::nullptr_t &n, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(const std::string &str, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(const std::wstring &str, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(const variant::complex &c, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(const void *p, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(double d, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(float f, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(int i, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(long double ld, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(long l, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(long long ll, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(unsigned long long ull, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(unsigned long ul, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool operator!=(unsigned ui, const variant &v)$/;"	f	namespace:arg3
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(bool other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(const binary &other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(const char *other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(const std::nullptr_t &t) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(const std::string &other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(const std::wstring &other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(const variant &other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(const void *other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(const wchar_t *other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(double other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(float other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(int other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(long double other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(long long other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(long other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(unsigned long long other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(unsigned long other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/src/variant.cpp	/^    bool variant::operator!=(unsigned other) const$/;"	f	class:arg3::variant
operator !=	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    bool operator!=(const MatchProxy<T>& matchProxy, const U& expectedValue)$/;"	f	namespace:bandit::Matchers
operator !=	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    bool operator!=(const ValueProxy<T>& actualValue, const U& expectedValue)$/;"	f	namespace:bandit::Matchers
operator !=	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^bool operator!=(const my_type& lhs, const my_type& rhs)$/;"	f
operator !=	src/resultset.h	/^            bool operator!=(const resultset_iterator &other) const$/;"	f	class:arg3::db::resultset_iterator
operator !=	src/row.h	/^            bool operator!=(const row_iterator &other) const$/;"	f	class:arg3::db::row_iterator
operator !=	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    bool operator!=(const MatchProxy<T>& matchProxy, const U& expectedValue)$/;"	f	namespace:bandit::Matchers
operator !=	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    bool operator!=(const ValueProxy<T>& actualValue, const U& expectedValue)$/;"	f	namespace:bandit::Matchers
operator !=	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^bool operator!=(const my_type& lhs, const my_type& rhs)$/;"	f
operator &&	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^    AndExpression<T, Right> operator&&(const Right& right) const$/;"	f	struct:snowhouse::Expression
operator &&	src/where_clause.cpp	/^        where_clause &where_clause::operator&&(const string &value)$/;"	f	class:arg3::db::where_clause
operator &&	src/where_clause.cpp	/^        where_clause &where_clause::operator&&(const where_clause &value)$/;"	f	class:arg3::db::where_clause
operator &&	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^    AndExpression<T, Right> operator&&(const Right& right) const$/;"	f	struct:snowhouse::Expression
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^	void operator()(const MatcherType& matcher) const$/;"	f	class:bandit::Matchers::MatchProxy
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        ThrowException<U> operator()() const$/;"	f	class:bandit::Matchers::ThrowException
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::ContainsConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    bool operator()(const std::string& actual) const$/;"	f	struct:snowhouse::ContainsConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^    bool operator()(const std::string& actual) const$/;"	f	struct:snowhouse::EndsWithConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::EqualsConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^      bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::EqualsContainerConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::EqualsWithDeltaConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::AndExpression
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::NotExpression
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::OrExpression
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::FulfillsConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::HasLengthConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::IsGreaterThanConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::IsGreaterThanOrEqualToConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::IsLessThanConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::IsLessThanOrEqualToConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^    bool operator()(const std::string& actual) const$/;"	f	struct:snowhouse::StartsWithConstraint
operator ()	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::FunctionWriter
operator ()	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::OStreamWriter
operator ()	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::StreamWriter
operator ()	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::SyscallWriter
operator ()	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::TemporaryWriter
operator ()	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char*, int)$/;"	f	struct:option::PrintUsageImplementation::IStringWriter
operator ()	src/mysql/db.cpp	/^                    void operator()(MYSQL *p) const$/;"	f	struct:arg3::db::mysql::helper::close_db
operator ()	src/mysql/resultset.cpp	/^                void res_delete::operator()(MYSQL_RES *p) const$/;"	f	class:arg3::db::mysql::helper::res_delete
operator ()	src/mysql/statement.cpp	/^                    void operator()(MYSQL_STMT *p) const$/;"	f	struct:arg3::db::mysql::helper::stmt_delete
operator ()	src/postgres/db.cpp	/^                    void operator()(PGconn *p) const$/;"	f	struct:arg3::db::postgres::helper::close_db
operator ()	src/postgres/statement.cpp	/^                void res_delete::operator()(PGresult *p) const$/;"	f	class:arg3::db::postgres::helper::res_delete
operator ()	src/sqlite/db.cpp	/^                    void operator()(sqlite3 *p) const$/;"	f	struct:arg3::db::sqlite::helper::close_db
operator ()	src/sqlite/statement.cpp	/^                void stmt_delete::operator()(sqlite3_stmt *p) const$/;"	f	class:arg3::db::sqlite::helper::stmt_delete
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/matchers/MatchProxy.h	/^	void operator()(const MatcherType& matcher) const$/;"	f	class:bandit::Matchers::MatchProxy
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        ThrowException<U> operator()() const$/;"	f	class:bandit::Matchers::ThrowException
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::ContainsConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^    bool operator()(const std::string& actual) const$/;"	f	struct:snowhouse::ContainsConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^    bool operator()(const std::string& actual) const$/;"	f	struct:snowhouse::EndsWithConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::EqualsConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^      bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::EqualsContainerConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::EqualsWithDeltaConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::AndExpression
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::NotExpression
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::OrExpression
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::FulfillsConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::HasLengthConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::IsGreaterThanConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^    bool operator()(const ActualType& actual) const$/;"	f	struct:snowhouse::IsLessThanConstraint
operator ()	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^    bool operator()(const std::string& actual) const$/;"	f	struct:snowhouse::StartsWithConstraint
operator ()	tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::FunctionWriter
operator ()	tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::OStreamWriter
operator ()	tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::StreamWriter
operator ()	tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::SyscallWriter
operator ()	tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char* str, int size)$/;"	f	struct:option::PrintUsageImplementation::TemporaryWriter
operator ()	tests/vendor/bandit/bandit/external/optionparser.h	/^    virtual void operator()(const char*, int)$/;"	f	struct:option::PrintUsageImplementation::IStringWriter
operator *	src/resultset.cpp	/^        resultset_impl::row_type resultset::operator*()$/;"	f	class:arg3::db::resultset
operator *	src/resultset.h	/^            ValueType &operator*()$/;"	f	class:arg3::db::resultset_iterator
operator *	src/row.h	/^            ValueType &operator*()$/;"	f	class:arg3::db::row_iterator
operator +	src/resultset.h	/^            resultset_iterator operator+(int n)$/;"	f	class:arg3::db::resultset_iterator
operator +	src/row.h	/^            row_iterator operator+(int n)$/;"	f	class:arg3::db::row_iterator
operator ++	src/resultset.h	/^            resultset_iterator &operator++()$/;"	f	class:arg3::db::resultset_iterator
operator ++	src/resultset.h	/^            resultset_iterator operator++(int)$/;"	f	class:arg3::db::resultset_iterator
operator ++	src/row.h	/^            row_iterator &operator++()$/;"	f	class:arg3::db::row_iterator
operator ++	src/row.h	/^            row_iterator operator++(int)$/;"	f	class:arg3::db::row_iterator
operator +=	src/resultset.h	/^            resultset_iterator &operator+=(int n)$/;"	f	class:arg3::db::resultset_iterator
operator +=	src/row.h	/^            row_iterator &operator+=(int n)$/;"	f	class:arg3::db::row_iterator
operator ,	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^    const MatchProxy<T> operator,(const ValueProxy<T>& value, bool negate)$/;"	f	namespace:bandit::Matchers
operator ,	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^    const ValueProxy<T> operator,(const T& value, const ValueMarker& marker)$/;"	f	namespace:bandit::Matchers
operator ,	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^    void operator,(const MatchProxy<T>& matchProxy, const MatcherType& matcher)$/;"	f	namespace:bandit::Matchers
operator ,	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^    const MatchProxy<T> operator,(const ValueProxy<T>& value, bool negate)$/;"	f	namespace:bandit::Matchers
operator ,	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^    const ValueProxy<T> operator,(const T& value, const ValueMarker& marker)$/;"	f	namespace:bandit::Matchers
operator ,	tests/vendor/bandit/bandit/assertion_frameworks/matchers/must.h	/^    void operator,(const MatchProxy<T>& matchProxy, const MatcherType& matcher)$/;"	f	namespace:bandit::Matchers
operator -	src/row.h	/^            int operator-(const row_iterator &other)$/;"	f	class:arg3::db::row_iterator
operator -	src/row.h	/^            row_iterator operator-(int n)$/;"	f	class:arg3::db::row_iterator
operator --	src/row.h	/^            row_iterator &operator--()$/;"	f	class:arg3::db::row_iterator
operator --	src/row.h	/^            row_iterator operator--(int)$/;"	f	class:arg3::db::row_iterator
operator -=	src/row.h	/^            row_iterator &operator-=(int n)$/;"	f	class:arg3::db::row_iterator
operator ->	src/resultset.h	/^            ValueType *operator->()$/;"	f	class:arg3::db::resultset_iterator
operator ->	src/row.h	/^            ValueType *operator->()$/;"	f	class:arg3::db::row_iterator
operator <	src/resultset.h	/^            bool operator<(const resultset_iterator &other) const$/;"	f	class:arg3::db::resultset_iterator
operator <	src/row.h	/^            bool operator<(const row_iterator &other) const$/;"	f	class:arg3::db::row_iterator
operator <<	libs/variant/src/binary.cpp	/^    std::ostream &operator<<(std::ostream &out, const binary &value)$/;"	f	namespace:arg3
operator <<	libs/variant/src/variant.cpp	/^    ostream &operator<<(ostream &stream, const variant &v)$/;"	f	namespace:arg3
operator <<	libs/variant/src/variant.cpp	/^    ostream &operator<<(ostream &stream, const variant::complex &v)$/;"	f	namespace:arg3
operator <<	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    std::ostream& operator<<(std::ostream& os, const std::unique_ptr<T>& obj)$/;"	f	namespace:bandit::Matchers
operator <<	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^std::ostream& operator<<(std::ostream& stream, const my_type& item)$/;"	f
operator <<	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^std::ostream& operator<<(std::ostream& stm, $/;"	f
operator <<	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  std::ostream& operator<<(std::ostream& stream, const WithStreamOperator& a)$/;"	f	namespace:__anon3
operator <<	src/join_clause.cpp	/^        ostream &operator<<(ostream &out, const join_clause &join)$/;"	f	namespace:arg3::db
operator <<	src/schema.cpp	/^        ostream &operator<<(ostream &os, const column_definition &def)$/;"	f	namespace:arg3::db
operator <<	src/sql_value.cpp	/^        ostream &operator<<(ostream &out, const sql_null_type &null)$/;"	f	namespace:arg3::db
operator <<	src/sql_value.cpp	/^        ostream &operator<<(ostream &out, const sql_time &value)$/;"	f	namespace:arg3::db
operator <<	src/sql_value.cpp	/^        ostream &operator<<(ostream &out, const sql_value &value)$/;"	f	namespace:arg3::db
operator <<	src/where_clause.cpp	/^        ostream &operator<<(ostream &out, const where_clause &where)$/;"	f	namespace:arg3::db
operator <<	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    std::ostream& operator<<(std::ostream& os, const std::unique_ptr<T>& obj)$/;"	f	namespace:bandit::Matchers
operator <<	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^std::ostream& operator<<(std::ostream& stream, const my_type& item)$/;"	f
operator <<	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/custom_matchers_test.cpp	/^std::ostream& operator<<(std::ostream& stm, $/;"	f
operator <<	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^  std::ostream& operator<<(std::ostream& stream, const WithStreamOperator& a)$/;"	f	namespace:__anon10
operator <=	src/resultset.h	/^            bool operator<=(const resultset_iterator &other) const$/;"	f	class:arg3::db::resultset_iterator
operator <=	src/row.h	/^            bool operator<=(const row_iterator &other) const$/;"	f	class:arg3::db::row_iterator
operator =	libs/variant/src/binary.cpp	/^    binary &binary::operator=(binary &&other)$/;"	f	class:arg3::binary
operator =	libs/variant/src/binary.cpp	/^    binary &binary::operator=(const binary &other)$/;"	f	class:arg3::binary
operator =	libs/variant/src/variant.cpp	/^    variant &variant::operator=(const variant &other)$/;"	f	class:arg3::variant
operator =	libs/variant/src/variant.cpp	/^    variant &variant::operator=(variant &&other)$/;"	f	class:arg3::variant
operator =	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    EqualsContainerConstraint& operator=(const EqualsContainerConstraint&) { return *this; }$/;"	f	struct:snowhouse::EqualsContainerConstraint
operator =	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  void operator=(const Option& orig)$/;"	f	class:option::Option
operator =	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^	dots_reporter& operator=(const dots_reporter&) { return *this; }$/;"	f	struct:bandit::detail::dots_reporter
operator =	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	info_reporter &operator=(const info_reporter &)$/;"	f	struct:bandit::detail::info_reporter
operator =	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^	progress_reporter& operator=(const progress_reporter&) { return *this; }$/;"	f	struct:bandit::detail::progress_reporter
operator =	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^	single_line_reporter& operator=(const single_line_reporter&) { return *this; }$/;"	f	struct:bandit::detail::single_line_reporter
operator =	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^	spec_reporter& operator=(const spec_reporter&) { return *this; }$/;"	f	struct:bandit::detail::spec_reporter
operator =	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^	test_run_summary& operator=(const test_run_summary&) { return *this; }$/;"	f	struct:bandit::detail::test_run_summary
operator =	src/bindable.cpp	/^        bind_mapping &bind_mapping::operator=(bind_mapping &&other)$/;"	f	class:arg3::db::bind_mapping
operator =	src/bindable.cpp	/^        bind_mapping &bind_mapping::operator=(const bind_mapping &other)$/;"	f	class:arg3::db::bind_mapping
operator =	src/column.cpp	/^        column &column::operator=(column &&other)$/;"	f	class:arg3::db::column
operator =	src/column.cpp	/^        column &column::operator=(const column &other)$/;"	f	class:arg3::db::column
operator =	src/delete_query.cpp	/^        delete_query &delete_query::operator=(const delete_query &other)$/;"	f	class:arg3::db::delete_query
operator =	src/delete_query.cpp	/^        delete_query &delete_query::operator=(delete_query &&other)$/;"	f	class:arg3::db::delete_query
operator =	src/insert_query.cpp	/^        insert_query &insert_query::operator=(const insert_query &other)$/;"	f	class:arg3::db::insert_query
operator =	src/insert_query.cpp	/^        insert_query &insert_query::operator=(insert_query &&other)$/;"	f	class:arg3::db::insert_query
operator =	src/join_clause.cpp	/^        join_clause &join_clause::operator=(const join_clause &other)$/;"	f	class:arg3::db::join_clause
operator =	src/join_clause.cpp	/^        join_clause &join_clause::operator=(join_clause &&other)$/;"	f	class:arg3::db::join_clause
operator =	src/modify_query.cpp	/^        modify_query &modify_query::operator=(const modify_query &other)$/;"	f	class:arg3::db::modify_query
operator =	src/modify_query.cpp	/^        modify_query &modify_query::operator=(modify_query &&other)$/;"	f	class:arg3::db::modify_query
operator =	src/mysql/binding.cpp	/^            binding &binding::operator=(binding &&other)$/;"	f	class:arg3::db::mysql::binding
operator =	src/mysql/binding.cpp	/^            binding &binding::operator=(const binding &other)$/;"	f	class:arg3::db::mysql::binding
operator =	src/mysql/column.cpp	/^            column &column::operator=(column &&other)$/;"	f	class:arg3::db::mysql::column
operator =	src/mysql/column.cpp	/^            stmt_column &stmt_column::operator=(stmt_column &&other)$/;"	f	class:arg3::db::mysql::stmt_column
operator =	src/mysql/db.cpp	/^            db &db::operator=(const db &other)$/;"	f	class:arg3::db::mysql::db
operator =	src/mysql/db.cpp	/^            db &db::operator=(db &&other)$/;"	f	class:arg3::db::mysql::db
operator =	src/mysql/resultset.cpp	/^            resultset &resultset::operator=(resultset &&other)$/;"	f	class:arg3::db::mysql::resultset
operator =	src/mysql/resultset.cpp	/^            stmt_resultset &stmt_resultset::operator=(stmt_resultset &&other)$/;"	f	class:arg3::db::mysql::stmt_resultset
operator =	src/mysql/row.cpp	/^            row &row::operator=(row &&other)$/;"	f	class:arg3::db::mysql::row
operator =	src/mysql/row.cpp	/^            stmt_row &stmt_row::operator=(stmt_row &&other)$/;"	f	class:arg3::db::mysql::stmt_row
operator =	src/mysql/statement.cpp	/^            statement &statement::operator=(statement &&other)$/;"	f	class:arg3::db::mysql::statement
operator =	src/postgres/binding.cpp	/^            binding &binding::operator=(binding &&other)$/;"	f	class:arg3::db::postgres::binding
operator =	src/postgres/binding.cpp	/^            binding &binding::operator=(const binding &other)$/;"	f	class:arg3::db::postgres::binding
operator =	src/postgres/column.cpp	/^            column &column::operator=(column &&other)$/;"	f	class:arg3::db::postgres::column
operator =	src/postgres/db.cpp	/^            db &db::operator=(const db &other)$/;"	f	class:arg3::db::postgres::db
operator =	src/postgres/db.cpp	/^            db &db::operator=(db &&other)$/;"	f	class:arg3::db::postgres::db
operator =	src/postgres/resultset.cpp	/^            resultset &resultset::operator=(resultset &&other)$/;"	f	class:arg3::db::postgres::resultset
operator =	src/postgres/row.cpp	/^            row &row::operator=(row &&other)$/;"	f	class:arg3::db::postgres::row
operator =	src/postgres/statement.cpp	/^            statement &statement::operator=(statement &&other)$/;"	f	class:arg3::db::postgres::statement
operator =	src/query.cpp	/^        query &query::operator=(const query &other)$/;"	f	class:arg3::db::query
operator =	src/query.cpp	/^        query &query::operator=(query &&other)$/;"	f	class:arg3::db::query
operator =	src/record.h	/^            record &operator=(const record &other)$/;"	f	class:arg3::db::record
operator =	src/record.h	/^            record &operator=(record &&other)$/;"	f	class:arg3::db::record
operator =	src/resultset.cpp	/^        resultset &resultset::operator=(resultset &&other)$/;"	f	class:arg3::db::resultset
operator =	src/resultset.h	/^            resultset_iterator &operator=(resultset_iterator &&other)$/;"	f	class:arg3::db::resultset_iterator
operator =	src/row.cpp	/^        row &row::operator=(const row &other)$/;"	f	class:arg3::db::row
operator =	src/row.cpp	/^        row &row::operator=(row &&other)$/;"	f	class:arg3::db::row
operator =	src/row.h	/^            row_iterator &operator=(const row_iterator &other)$/;"	f	class:arg3::db::row_iterator
operator =	src/row.h	/^            row_iterator &operator=(row_iterator &&other)$/;"	f	class:arg3::db::row_iterator
operator =	src/schema.cpp	/^        schema &schema::operator=(const schema &other)$/;"	f	class:arg3::db::schema
operator =	src/schema.cpp	/^        schema &schema::operator=(schema &&other)$/;"	f	class:arg3::db::schema
operator =	src/schema_factory.cpp	/^        schema_factory &schema_factory::operator=(const schema_factory &other)$/;"	f	class:arg3::db::schema_factory
operator =	src/schema_factory.cpp	/^        schema_factory &schema_factory::operator=(schema_factory &&other)$/;"	f	class:arg3::db::schema_factory
operator =	src/select_query.cpp	/^        select_query &select_query::operator=(const select_query &other)$/;"	f	class:arg3::db::select_query
operator =	src/select_query.cpp	/^        select_query &select_query::operator=(select_query &&other)$/;"	f	class:arg3::db::select_query
operator =	src/sql_value.cpp	/^        sql_time &sql_time::operator=(const sql_time &other)$/;"	f	class:arg3::db::sql_time
operator =	src/sql_value.cpp	/^        sql_time &sql_time::operator=(sql_time &&other)$/;"	f	class:arg3::db::sql_time
operator =	src/sqlite/column.cpp	/^            cached_column &cached_column::operator=(cached_column &&other)$/;"	f	class:arg3::db::sqlite::cached_column
operator =	src/sqlite/column.cpp	/^            column &column::operator=(column &&other)$/;"	f	class:arg3::db::sqlite::column
operator =	src/sqlite/db.cpp	/^            db &db::operator=(const db &other)$/;"	f	class:arg3::db::sqlite::db
operator =	src/sqlite/db.cpp	/^            db &db::operator=(db &&other)$/;"	f	class:arg3::db::sqlite::db
operator =	src/sqlite/resultset.cpp	/^            cached_resultset &cached_resultset::operator=(cached_resultset &&other)$/;"	f	class:arg3::db::sqlite::cached_resultset
operator =	src/sqlite/resultset.cpp	/^            resultset &resultset::operator=(resultset &&other)$/;"	f	class:arg3::db::sqlite::resultset
operator =	src/sqlite/row.cpp	/^            cached_row &cached_row::operator=(cached_row &&other)$/;"	f	class:arg3::db::sqlite::cached_row
operator =	src/sqlite/row.cpp	/^            row &row::operator=(row &&other)$/;"	f	class:arg3::db::sqlite::row
operator =	src/sqlite/statement.cpp	/^            statement &statement::operator=(statement &&other)$/;"	f	class:arg3::db::sqlite::statement
operator =	src/update_query.cpp	/^        update_query &update_query::operator=(const update_query &other)$/;"	f	class:arg3::db::update_query
operator =	src/update_query.cpp	/^        update_query &update_query::operator=(update_query &&other)$/;"	f	class:arg3::db::update_query
operator =	src/where_clause.cpp	/^        where_clause &where_clause::operator=(const where_clause &other)$/;"	f	class:arg3::db::where_clause
operator =	src/where_clause.cpp	/^        where_clause &where_clause::operator=(where_clause &&other)$/;"	f	class:arg3::db::where_clause
operator =	tests/db.test.h	/^    user &operator=(const user &other)$/;"	f	class:user
operator =	tests/db.test.h	/^    user &operator=(user &&other)$/;"	f	class:user
operator =	tests/vendor/bandit/bandit/external/optionparser.h	/^  void operator=(const Option& orig)$/;"	f	class:option::Option
operator =	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^	dots_reporter& operator=(const dots_reporter&) { return *this; }$/;"	f	struct:bandit::detail::dots_reporter
operator =	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	info_reporter &operator=(const info_reporter &)$/;"	f	struct:bandit::detail::info_reporter
operator =	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^	progress_reporter& operator=(const progress_reporter&) { return *this; }$/;"	f	struct:bandit::detail::progress_reporter
operator =	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^	single_line_reporter& operator=(const single_line_reporter&) { return *this; }$/;"	f	struct:bandit::detail::single_line_reporter
operator =	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^	spec_reporter& operator=(const spec_reporter&) { return *this; }$/;"	f	struct:bandit::detail::spec_reporter
operator =	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^	test_run_summary& operator=(const test_run_summary&) { return *this; }$/;"	f	struct:bandit::detail::test_run_summary
operator ==	libs/variant/src/binary.cpp	/^    bool binary::operator==(const binary &p) const$/;"	f	class:arg3::binary
operator ==	libs/variant/src/binary.cpp	/^    bool binary::operator==(const std::nullptr_t &null) const$/;"	f	class:arg3::binary
operator ==	libs/variant/src/binary.cpp	/^    bool binary::operator==(const void *p) const$/;"	f	class:arg3::binary
operator ==	libs/variant/src/binary.cpp	/^    bool operator==(const std::nullptr_t &null, const arg3::binary &bin)$/;"	f	namespace:arg3
operator ==	libs/variant/src/binary.cpp	/^    bool operator==(const void *ptr, const arg3::binary &p)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(bool b, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(const binary &bin, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(const nullptr_t &f, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(const string &str, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(const variant::complex &c, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(const void *ptr, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(const wstring &str, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(double d, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(float f, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(int i, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(long double d, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(long l, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(long long ll, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(unsigned long long ull, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(unsigned long ul, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool operator==(unsigned ui, const variant &v)$/;"	f	namespace:arg3
operator ==	libs/variant/src/variant.cpp	/^    bool variant::complex::operator==(const variant::complex &other) const$/;"	f	class:arg3::variant::complex
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(bool other) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(const binary &bin) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(const char *str) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(const nullptr_t &other) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(const string &str) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(const variant &value) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(const void *ptr) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(const wchar_t *str) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(const wstring &str) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(double other) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(float other) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(int i) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(long double other) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(long l) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(long long ll) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(unsigned long long ull) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(unsigned long ul) const$/;"	f	class:arg3::variant
operator ==	libs/variant/src/variant.cpp	/^    bool variant::operator==(unsigned ui) const$/;"	f	class:arg3::variant
operator ==	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    bool operator==(const MatchProxy<T>& matchProxy, const U& expectedValue)$/;"	f	namespace:bandit::Matchers
operator ==	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    bool operator==(const ValueProxy<T>& actualValue, const U& expectedValue)$/;"	f	namespace:bandit::Matchers
operator ==	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^bool operator==(const my_type& lhs, const my_type& rhs)$/;"	f
operator ==	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    bool operator==(const WithoutStreamOperator& rhs) const$/;"	f	struct:__anon3::WithoutStreamOperator
operator ==	src/resultset.h	/^            bool operator==(const resultset_iterator &other) const$/;"	f	class:arg3::db::resultset_iterator
operator ==	src/row.h	/^            bool operator==(const row_iterator &other) const$/;"	f	class:arg3::db::row_iterator
operator ==	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    bool operator==(const MatchProxy<T>& matchProxy, const U& expectedValue)$/;"	f	namespace:bandit::Matchers
operator ==	tests/vendor/bandit/bandit/assertion_frameworks/matchers/Equal.h	/^    bool operator==(const ValueProxy<T>& actualValue, const U& expectedValue)$/;"	f	namespace:bandit::Matchers
operator ==	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/container_spec.cpp	/^bool operator==(const my_type& lhs, const my_type& rhs)$/;"	f
operator ==	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^    bool operator==(const WithoutStreamOperator& rhs) const$/;"	f	struct:__anon10::WithoutStreamOperator
operator >	src/resultset.h	/^            bool operator>(const resultset_iterator &other) const$/;"	f	class:arg3::db::resultset_iterator
operator >	src/row.h	/^            bool operator>(const row_iterator &other) const$/;"	f	class:arg3::db::row_iterator
operator >=	src/resultset.h	/^            bool operator>=(const resultset_iterator &other) const$/;"	f	class:arg3::db::resultset_iterator
operator >=	src/row.h	/^            bool operator>=(const row_iterator &other) const$/;"	f	class:arg3::db::row_iterator
operator Option*	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  operator Option*()$/;"	f	class:option::Option
operator Option*	tests/vendor/bandit/bandit/external/optionparser.h	/^  operator Option*()$/;"	f	class:option::Option
operator []	src/row.cpp	/^        row::column_type row::operator[](const string &name) const$/;"	f	class:arg3::db::row
operator []	src/row.cpp	/^        row::column_type row::operator[](size_t nPosition) const$/;"	f	class:arg3::db::row
operator []	src/row.h	/^            ValueType operator[](size_t nPosition)$/;"	f	class:arg3::db::row_iterator
operator []	src/schema.cpp	/^        column_definition schema::operator[](size_t index) const$/;"	f	class:arg3::db::schema
operator binary	libs/variant/src/variant.cpp	/^    variant::complex::operator binary() const$/;"	f	class:arg3::variant::complex
operator binary	libs/variant/src/variant.cpp	/^    variant::operator binary() const$/;"	f	class:arg3::variant
operator bool	libs/variant/src/variant.cpp	/^    variant::complex::operator bool() const$/;"	f	class:arg3::variant::complex
operator bool	libs/variant/src/variant.cpp	/^    variant::operator bool() const$/;"	f	class:arg3::variant
operator char	libs/variant/src/variant.cpp	/^    variant::complex::operator char() const$/;"	f	class:arg3::variant::complex
operator char	libs/variant/src/variant.cpp	/^    variant::operator char() const$/;"	f	class:arg3::variant
operator const Option*	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  operator const Option*() const$/;"	f	class:option::Option
operator const Option*	tests/vendor/bandit/bandit/external/optionparser.h	/^  operator const Option*() const$/;"	f	class:option::Option
operator const char *	libs/variant/src/variant.cpp	/^    variant::complex::operator const char *() const$/;"	f	class:arg3::variant::complex
operator const char *	libs/variant/src/variant.cpp	/^    variant::operator const char *() const$/;"	f	class:arg3::variant
operator const wchar_t *	libs/variant/src/variant.cpp	/^    variant::complex::operator const wchar_t *() const$/;"	f	class:arg3::variant::complex
operator const wchar_t *	libs/variant/src/variant.cpp	/^    variant::operator const wchar_t *() const$/;"	f	class:arg3::variant
operator double	libs/variant/src/variant.cpp	/^    variant::complex::operator double() const$/;"	f	class:arg3::variant::complex
operator double	libs/variant/src/variant.cpp	/^    variant::operator double() const$/;"	f	class:arg3::variant
operator float	libs/variant/src/variant.cpp	/^    variant::complex::operator float() const$/;"	f	class:arg3::variant::complex
operator float	libs/variant/src/variant.cpp	/^    variant::operator float() const$/;"	f	class:arg3::variant
operator int	libs/variant/src/variant.cpp	/^    variant::complex::operator int() const$/;"	f	class:arg3::variant::complex
operator int	libs/variant/src/variant.cpp	/^    variant::operator int() const$/;"	f	class:arg3::variant
operator long	libs/variant/src/variant.cpp	/^    variant::complex::operator long() const$/;"	f	class:arg3::variant::complex
operator long	libs/variant/src/variant.cpp	/^    variant::operator long() const$/;"	f	class:arg3::variant
operator long double	libs/variant/src/variant.cpp	/^    variant::complex::operator long double() const$/;"	f	class:arg3::variant::complex
operator long double	libs/variant/src/variant.cpp	/^    variant::operator long double() const$/;"	f	class:arg3::variant
operator long long	libs/variant/src/variant.cpp	/^    variant::complex::operator long long() const$/;"	f	class:arg3::variant::complex
operator long long	libs/variant/src/variant.cpp	/^    variant::operator long long() const$/;"	f	class:arg3::variant
operator sql_time	src/sql_value.cpp	/^        sql_value::operator sql_time() const$/;"	f	class:arg3::db::sql_value
operator std::string	src/sqldb.h	/^            operator std::string() const$/;"	f	struct:arg3::db::uri_type
operator string	libs/variant/src/variant.cpp	/^    variant::complex::operator string() const$/;"	f	class:arg3::variant::complex
operator string	libs/variant/src/variant.cpp	/^    variant::operator string() const$/;"	f	class:arg3::variant
operator string	src/join_clause.cpp	/^        join_clause::operator string()$/;"	f	class:arg3::db::join_clause
operator string	src/where_clause.cpp	/^        where_clause::operator string()$/;"	f	class:arg3::db::where_clause
operator unsigned	libs/variant/src/variant.cpp	/^    variant::complex::operator unsigned() const$/;"	f	class:arg3::variant::complex
operator unsigned	libs/variant/src/variant.cpp	/^    variant::operator unsigned() const$/;"	f	class:arg3::variant
operator unsigned char	libs/variant/src/variant.cpp	/^    variant::complex::operator unsigned char() const$/;"	f	class:arg3::variant::complex
operator unsigned long	libs/variant/src/variant.cpp	/^    variant::complex::operator unsigned long() const$/;"	f	class:arg3::variant::complex
operator unsigned long	libs/variant/src/variant.cpp	/^    variant::operator unsigned long() const$/;"	f	class:arg3::variant
operator unsigned long long	libs/variant/src/variant.cpp	/^    variant::complex::operator unsigned long long() const$/;"	f	class:arg3::variant::complex
operator unsigned long long	libs/variant/src/variant.cpp	/^    variant::operator unsigned long long() const$/;"	f	class:arg3::variant
operator wchar_t	libs/variant/src/variant.cpp	/^    variant::complex::operator wchar_t() const$/;"	f	class:arg3::variant::complex
operator wstring	libs/variant/src/variant.cpp	/^    variant::complex::operator wstring() const$/;"	f	class:arg3::variant::complex
operator wstring	libs/variant/src/variant.cpp	/^    variant::operator wstring() const$/;"	f	class:arg3::variant
operator ||	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^    OrExpression<T, Right> operator||(const Right& right) const$/;"	f	struct:snowhouse::Expression
operator ||	src/where_clause.cpp	/^        where_clause &where_clause::operator||(const string &value)$/;"	f	class:arg3::db::where_clause
operator ||	src/where_clause.cpp	/^        where_clause &where_clause::operator||(const where_clause &value)$/;"	f	class:arg3::db::where_clause
operator ||	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^    OrExpression<T, Right> operator||(const Right& right) const$/;"	f	struct:snowhouse::Expression
operator%3C%3C	html/join_clause_h/index.html	/^<h3><a name="operator%3C%3C">operator <<<\/a><\/h3>$/;"	a
operator%3D(column%26%26)	html/column_h/Classes/column/index.html	/^<h3><a name="operator%3D(column%26%26)">operator =(column & &)<\/a><\/h3>$/;"	a
operator%3D(constcolumn%26)	html/column_h/Classes/column/index.html	/^<h3><a name="operator%3D(constcolumn%26)">operator =(const column &)<\/a><\/h3>$/;"	a
operator%3D(constquery%26)	html/query_h/Classes/query/index.html	/^<h3><a name="operator%3D(constquery%26)">operator =(const query &)<\/a><\/h3>$/;"	a
operator%3D(query%26%26)	html/query_h/Classes/query/index.html	/^<h3><a name="operator%3D(query%26%26)">operator =(query & &)<\/a><\/h3>$/;"	a
operator_join	html/join_clause_h/index.html	/^<h3><a name="operator_join">operator _join<\/a><\/h3>$/;"	a
operatorstd::string	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="operatorstd::string">operator std::string<\/a><\/h3>$/;"	a
operatoruri	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^<h3><a name="operatoruri">operator uri<\/a><\/h3>$/;"	a
operatoruri	html/sqldb_h/index.html	/^<h3><a name="operatoruri">operator uri<\/a><\/h3>$/;"	a
operatorvector	html/base_record_h/index.html	/^<h3><a name="operatorvector">operator vector<\/a><\/h3>$/;"	a
option	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^namespace option$/;"	n
option	tests/vendor/bandit/bandit/external/optionparser.h	/^namespace option$/;"	n
option_index	libs/variant/tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	g	struct:bandit::detail::options
option_index	tests/vendor/bandit/bandit/options.h	/^        enum option_index { UNKNOWN, VERSION, HELP, REPORTER, NO_COLOR, $/;"	g	struct:bandit::detail::options
options	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* options;$/;"	m	class:option::Parser::StoreOptionAction
options	libs/variant/tests/vendor/bandit/bandit/options.h	/^      options(int argc, char* argv[])$/;"	f	struct:bandit::detail::options
options	libs/variant/tests/vendor/bandit/bandit/options.h	/^    struct options$/;"	s	namespace:bandit::detail
options	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* options;$/;"	m	class:option::Parser::StoreOptionAction
options	tests/vendor/bandit/bandit/options.h	/^      options(int argc, char* argv[])$/;"	f	struct:bandit::detail::options
options	tests/vendor/bandit/bandit/options.h	/^    struct options$/;"	s	namespace:bandit::detail
optionsCount	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  int optionsCount()$/;"	f	class:option::Parser
optionsCount	tests/vendor/bandit/bandit/external/optionparser.h	/^  int optionsCount()$/;"	f	class:option::Parser
options_	libs/variant/tests/vendor/bandit/bandit/options.h	/^        std::vector<option::Option> options_;$/;"	m	struct:bandit::detail::options
options_	tests/vendor/bandit/bandit/options.h	/^        std::vector<option::Option> options_;$/;"	m	struct:bandit::detail::options
options_max	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  unsigned options_max;$/;"	m	struct:option::Stats
options_max	tests/vendor/bandit/bandit/external/optionparser.h	/^  unsigned options_max;$/;"	m	struct:option::Stats
or_	src/where_clause.h	/^            std::vector<where_clause> or_;$/;"	m	class:arg3::db::where_clause
or_subclass	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        ThrowException& or_subclass()$/;"	f	class:bandit::Matchers::ThrowException
or_subclass	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^        ThrowException& or_subclass()$/;"	f	class:bandit::Matchers::ThrowException
orderBy_	src/select_query.h	/^            std::string orderBy_;$/;"	m	class:arg3::db::select_query
order_by	src/select_query.cpp	/^        select_query &select_query::order_by(const string &value)$/;"	f	class:arg3::db::select_query
order_by	src/select_query.cpp	/^        string select_query::order_by() const$/;"	f	class:arg3::db::select_query
original_color_	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^	WORD original_color_;$/;"	m	struct:bandit::detail::colorizer
original_color_	tests/vendor/bandit/bandit/reporters/colorizer.h	/^	WORD original_color_;$/;"	m	struct:bandit::detail::colorizer
ostream	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    OStream& ostream;$/;"	m	struct:option::PrintUsageImplementation::OStreamWriter
ostream	tests/vendor/bandit/bandit/external/optionparser.h	/^    OStream& ostream;$/;"	m	struct:option::PrintUsageImplementation::OStreamWriter
other	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^    run_policy(const run_policy& other) = default;$/;"	m	struct:bandit::detail::run_policy
other	src/column.h	/^            column_impl &operator=(column_impl &&other) = default;$/;"	m	class:arg3::db::column_impl
other	src/column.h	/^            column_impl &operator=(const column_impl &other) = default;$/;"	m	class:arg3::db::column_impl
other	src/column.h	/^            column_impl(column_impl &&other) = default;$/;"	m	class:arg3::db::column_impl
other	src/column.h	/^            column_impl(const column_impl &other) = default;$/;"	m	class:arg3::db::column_impl
other	src/mysql/column.h	/^                column &operator=(const column &other) = delete;$/;"	m	class:arg3::db::mysql::column
other	src/mysql/column.h	/^                column(const column &other) = delete;$/;"	m	class:arg3::db::mysql::column
other	src/mysql/column.h	/^                stmt_column &operator=(const stmt_column &other) = delete;$/;"	m	class:arg3::db::mysql::stmt_column
other	src/mysql/column.h	/^                stmt_column(const stmt_column &other) = delete;$/;"	m	class:arg3::db::mysql::stmt_column
other	src/mysql/resultset.h	/^                resultset &operator=(const resultset &other) = delete;$/;"	m	class:arg3::db::mysql::resultset
other	src/mysql/resultset.h	/^                resultset(const resultset &other) = delete;$/;"	m	class:arg3::db::mysql::resultset
other	src/mysql/resultset.h	/^                stmt_resultset &operator=(const stmt_resultset &other) = delete;$/;"	m	class:arg3::db::mysql::stmt_resultset
other	src/mysql/resultset.h	/^                stmt_resultset(const stmt_resultset &other) = delete;$/;"	m	class:arg3::db::mysql::stmt_resultset
other	src/mysql/row.h	/^                row &operator=(const row &other) = delete;$/;"	m	class:arg3::db::mysql::row
other	src/mysql/row.h	/^                row(const row &other) = delete;$/;"	m	class:arg3::db::mysql::row
other	src/mysql/row.h	/^                stmt_row &operator=(const stmt_row &other) = delete;$/;"	m	class:arg3::db::mysql::stmt_row
other	src/mysql/row.h	/^                stmt_row(const stmt_row &other) = delete;$/;"	m	class:arg3::db::mysql::stmt_row
other	src/mysql/statement.h	/^                statement &operator=(const statement &other) = delete;$/;"	m	class:arg3::db::mysql::statement
other	src/mysql/statement.h	/^                statement(const statement &other) = delete;$/;"	m	class:arg3::db::mysql::statement
other	src/postgres/column.h	/^                column &operator=(const column &other) = delete;$/;"	m	class:arg3::db::postgres::column
other	src/postgres/column.h	/^                column(const column &other) = delete;$/;"	m	class:arg3::db::postgres::column
other	src/postgres/resultset.h	/^                resultset &operator=(const resultset &other) = delete;$/;"	m	class:arg3::db::postgres::resultset
other	src/postgres/resultset.h	/^                resultset(const resultset &other) = delete;$/;"	m	class:arg3::db::postgres::resultset
other	src/postgres/row.h	/^                row &operator=(const row &other) = delete;$/;"	m	class:arg3::db::postgres::row
other	src/postgres/row.h	/^                row(const row &other) = delete;$/;"	m	class:arg3::db::postgres::row
other	src/postgres/statement.h	/^                statement &operator=(const statement &other) = delete;$/;"	m	class:arg3::db::postgres::statement
other	src/postgres/statement.h	/^                statement(const statement &other) = delete;$/;"	m	class:arg3::db::postgres::statement
other	src/resultset.h	/^            resultset &operator=(const resultset &other) = delete;$/;"	m	class:arg3::db::resultset
other	src/resultset.h	/^            resultset(const resultset &other) = delete;$/;"	m	class:arg3::db::resultset
other	src/resultset.h	/^            resultset_impl &operator=(const resultset_impl &other) = delete;$/;"	m	class:arg3::db::resultset_impl
other	src/resultset.h	/^            resultset_impl &operator=(resultset_impl &&other) = default;$/;"	m	class:arg3::db::resultset_impl
other	src/resultset.h	/^            resultset_impl(const resultset_impl &other) = delete;$/;"	m	class:arg3::db::resultset_impl
other	src/resultset.h	/^            resultset_impl(resultset_impl &&other) = default;$/;"	m	class:arg3::db::resultset_impl
other	src/row.h	/^            row_impl &operator=(const row_impl &other) = default;$/;"	m	class:arg3::db::row_impl
other	src/row.h	/^            row_impl &operator=(row_impl &&other) = default;$/;"	m	class:arg3::db::row_impl
other	src/row.h	/^            row_impl(const row_impl &other) = default;$/;"	m	class:arg3::db::row_impl
other	src/row.h	/^            row_impl(row_impl &&other) = default;$/;"	m	class:arg3::db::row_impl
other	src/sqldb.h	/^            sqldb &operator=(const sqldb &other) = default;$/;"	m	class:arg3::db::sqldb
other	src/sqldb.h	/^            sqldb &operator=(sqldb &&other) = default;$/;"	m	class:arg3::db::sqldb
other	src/sqldb.h	/^            sqldb(const sqldb &other) = default;$/;"	m	class:arg3::db::sqldb
other	src/sqldb.h	/^            sqldb(sqldb &&other) = default;$/;"	m	class:arg3::db::sqldb
other	src/sqlite/column.h	/^                cached_column &operator=(const cached_column &other) = delete;$/;"	m	class:arg3::db::sqlite::cached_column
other	src/sqlite/column.h	/^                cached_column(const cached_column &other) = delete;$/;"	m	class:arg3::db::sqlite::cached_column
other	src/sqlite/column.h	/^                column &operator=(const column &other) = delete;$/;"	m	class:arg3::db::sqlite::column
other	src/sqlite/column.h	/^                column(const column &other) = delete;$/;"	m	class:arg3::db::sqlite::column
other	src/sqlite/resultset.h	/^                cached_resultset &operator=(const cached_resultset &other) = delete;$/;"	m	class:arg3::db::sqlite::cached_resultset
other	src/sqlite/resultset.h	/^                cached_resultset(const cached_resultset &other) = delete;$/;"	m	class:arg3::db::sqlite::cached_resultset
other	src/sqlite/resultset.h	/^                resultset &operator=(const resultset &other) = delete;$/;"	m	class:arg3::db::sqlite::resultset
other	src/sqlite/resultset.h	/^                resultset(const resultset &other) = delete;$/;"	m	class:arg3::db::sqlite::resultset
other	src/sqlite/row.h	/^                cached_row &operator=(const cached_row &other) = delete;$/;"	m	class:arg3::db::sqlite::cached_row
other	src/sqlite/row.h	/^                cached_row(const cached_row &other) = delete;$/;"	m	class:arg3::db::sqlite::cached_row
other	src/sqlite/row.h	/^                row &operator=(const row &other) = delete;$/;"	m	class:arg3::db::sqlite::row
other	src/sqlite/row.h	/^                row(const row &other) = delete;$/;"	m	class:arg3::db::sqlite::row
other	src/sqlite/statement.h	/^                statement &operator=(const statement &other) = delete;$/;"	m	class:arg3::db::sqlite::statement
other	src/sqlite/statement.h	/^                statement(const statement &other) = delete;$/;"	m	class:arg3::db::sqlite::statement
output	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    void output(IStringWriter& write, const char* data, int len)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
output	tests/vendor/bandit/bandit/external/optionparser.h	/^    void output(IStringWriter& write, const char* data, int len)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
params_	src/query.h	/^            std::vector<sql_value> params_;$/;"	m	class:arg3::db::query
parse	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  void parse(bool gnu, const Descriptor usage[], int argc, char** argv, Option options[], Option buffer[],$/;"	f	class:option::Parser
parse	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  void parse(const Descriptor usage[], int argc, char** argv, Option options[], Option buffer[], int min_abbr_len = 0,$/;"	f	class:option::Parser
parse	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  void parse(const Descriptor usage[], int argc, const char** argv, Option options[], Option buffer[],$/;"	f	class:option::Parser
parse	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^inline void Parser::parse(bool gnu, const Descriptor usage[], int argc, const char** argv, Option options[],$/;"	f	class:option::Parser
parse	src/sqldb.cpp	/^        void uri::parse(const string &url_s)$/;"	f	class:arg3::db::uri
parse	tests/vendor/bandit/bandit/external/optionparser.h	/^  void parse(bool gnu, const Descriptor usage[], int argc, char** argv, Option options[], Option buffer[],$/;"	f	class:option::Parser
parse	tests/vendor/bandit/bandit/external/optionparser.h	/^  void parse(const Descriptor usage[], int argc, char** argv, Option options[], Option buffer[], int min_abbr_len = 0,$/;"	f	class:option::Parser
parse	tests/vendor/bandit/bandit/external/optionparser.h	/^  void parse(const Descriptor usage[], int argc, const char** argv, Option options[], Option buffer[],$/;"	f	class:option::Parser
parse	tests/vendor/bandit/bandit/external/optionparser.h	/^inline void Parser::parse(bool gnu, const Descriptor usage[], int argc, const char** argv, Option options[],$/;"	f	class:option::Parser
parse_time	src/mysql/binding.cpp	/^                time_t parse_time(MYSQL_BIND *binding)$/;"	f	namespace:arg3::db::mysql::helper
parse_time	src/mysql/binding.cpp	/^                time_t parse_time(const char *value)$/;"	f	namespace:arg3::db::mysql::helper
parsed_ok_	libs/variant/tests/vendor/bandit/bandit/options.h	/^        bool parsed_ok_;$/;"	m	struct:bandit::detail::options
parsed_ok_	tests/vendor/bandit/bandit/options.h	/^        bool parsed_ok_;$/;"	m	struct:bandit::detail::options
parser	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser& parser;$/;"	m	class:option::Parser::StoreOptionAction
parser	tests/vendor/bandit/bandit/external/optionparser.h	/^  Parser& parser;$/;"	m	class:option::Parser::StoreOptionAction
password	src/sqldb.h	/^            std::string protocol, user, password, host, port, path, query, value;$/;"	m	struct:arg3::db::uri_type
path	src/sqldb.h	/^            std::string protocol, user, password, host, port, path, query, value;$/;"	m	struct:arg3::db::uri_type
pattern_	libs/variant/tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^    const std::string pattern_;$/;"	m	struct:bandit::detail::name_contains_skip_policy
pattern_	tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^    const std::string pattern_;$/;"	m	struct:bandit::detail::name_contains_skip_policy
perform	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  bool perform(Option& option)$/;"	f	class:option::Parser::StoreOptionAction
perform	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  bool perform(Option&)$/;"	f	class:option::Stats::CountOptionsAction
perform	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  virtual bool perform(Option&)$/;"	f	struct:option::Parser::Action
perform	tests/vendor/bandit/bandit/external/optionparser.h	/^  bool perform(Option& option)$/;"	f	class:option::Parser::StoreOptionAction
perform	tests/vendor/bandit/bandit/external/optionparser.h	/^  bool perform(Option&)$/;"	f	class:option::Stats::CountOptionsAction
perform	tests/vendor/bandit/bandit/external/optionparser.h	/^  virtual bool perform(Option&)$/;"	f	struct:option::Parser::Action
pk	src/schema.h	/^            bool pk;$/;"	m	struct:arg3::db::column_definition
port	src/sqldb.h	/^            std::string protocol, user, password, host, port, path, query, value;$/;"	m	struct:arg3::db::uri_type
pos_	src/resultset.h	/^            int pos_;$/;"	m	class:arg3::db::resultset_iterator
position_	src/mysql/column.h	/^                size_t position_;$/;"	m	class:arg3::db::mysql::stmt_column
position_	src/row.h	/^            int position_;$/;"	m	class:arg3::db::row_iterator
postgres	src/postgres/binding.cpp	/^        namespace postgres$/;"	n	namespace:arg3::db	file:
postgres	src/postgres/binding.h	/^        namespace postgres$/;"	n	namespace:arg3::db
postgres	src/postgres/column.cpp	/^        namespace postgres$/;"	n	namespace:arg3::db	file:
postgres	src/postgres/column.h	/^        namespace postgres$/;"	n	namespace:arg3::db
postgres	src/postgres/db.cpp	/^        namespace postgres$/;"	n	namespace:arg3::db	file:
postgres	src/postgres/db.h	/^        namespace postgres$/;"	n	namespace:arg3::db
postgres	src/postgres/resultset.cpp	/^        namespace postgres$/;"	n	namespace:arg3::db	file:
postgres	src/postgres/resultset.h	/^        namespace postgres$/;"	n	namespace:arg3::db
postgres	src/postgres/row.cpp	/^        namespace postgres$/;"	n	namespace:arg3::db	file:
postgres	src/postgres/row.h	/^        namespace postgres$/;"	n	namespace:arg3::db
postgres	src/postgres/statement.cpp	/^        namespace postgres$/;"	n	namespace:arg3::db	file:
postgres	src/postgres/statement.h	/^        namespace postgres$/;"	n	namespace:arg3::db
postgres_binding.h	html/postgres_binding_h/index.html	/^<h1><a name="postgres_binding.h">postgres_binding.h<\/a><\/h1>$/;"	a
postgres_cached_column	html/postgres_column_h/Classes/postgres_cached_column/index.html	/^<h1><a name="postgres_cached_column">postgres_cached_column<\/a><\/h1>$/;"	a
postgres_cached_resultset	html/postgres_resultset_h/Classes/postgres_cached_resultset/index.html	/^<h1><a name="postgres_cached_resultset">postgres_cached_resultset<\/a><\/h1>$/;"	a
postgres_cached_row	html/postgres_row_h/Classes/postgres_cached_row/index.html	/^<h1><a name="postgres_cached_row">postgres_cached_row<\/a><\/h1>$/;"	a
postgres_column	html/postgres_column_h/Classes/postgres_column/index.html	/^<h1><a name="postgres_column">postgres_column<\/a><\/h1>$/;"	a
postgres_column.h	html/postgres_column_h/index.html	/^<h1><a name="postgres_column.h">postgres_column.h<\/a><\/h1>$/;"	a
postgres_db	html/postgres_db_h/Classes/postgres_db/index.html	/^<h1><a name="postgres_db">postgres_db<\/a><\/h1>$/;"	a
postgres_db.h	html/postgres_db_h/index.html	/^<h1><a name="postgres_db.h">postgres_db.h<\/a><\/h1>$/;"	a
postgres_resultset	html/postgres_resultset_h/Classes/postgres_resultset/index.html	/^<h1><a name="postgres_resultset">postgres_resultset<\/a><\/h1>$/;"	a
postgres_resultset.h	html/postgres_resultset_h/index.html	/^<h1><a name="postgres_resultset.h">postgres_resultset.h<\/a><\/h1>$/;"	a
postgres_row	html/postgres_row_h/Classes/postgres_row/index.html	/^<h1><a name="postgres_row">postgres_row<\/a><\/h1>$/;"	a
postgres_row.h	html/postgres_row_h/index.html	/^<h1><a name="postgres_row.h">postgres_row.h<\/a><\/h1>$/;"	a
postgres_statement	html/postgres_statement_h/Classes/postgres_statement/index.html	/^<h1><a name="postgres_statement">postgres_statement<\/a><\/h1>$/;"	a
postgres_statement.h	html/postgres_statement_h/index.html	/^<h1><a name="postgres_statement.h">postgres_statement.h<\/a><\/h1>$/;"	a
predicate_	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    const BinaryPredicate predicate_;$/;"	m	struct:snowhouse::EqualsContainerConstraint
predicate_	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^    const BinaryPredicate predicate_;$/;"	m	struct:snowhouse::EqualsContainerConstraint
prepare	src/bindable.cpp	/^        std::string bind_mapping::prepare(const std::string &sql)$/;"	f	class:arg3::db::bind_mapping
prepare	src/mysql/binding.cpp	/^            std::string binding::prepare(const std::string &sql)$/;"	f	class:arg3::db::mysql::binding
prepare	src/mysql/statement.cpp	/^            void statement::prepare(const string &sql)$/;"	f	class:arg3::db::mysql::statement
prepare	src/postgres/binding.cpp	/^            std::string binding::prepare(const string &sql)$/;"	f	class:arg3::db::postgres::binding
prepare	src/postgres/statement.cpp	/^            void statement::prepare(const string &sql)$/;"	f	class:arg3::db::postgres::statement
prepare	src/query.cpp	/^        void query::prepare(const string &sql)$/;"	f	class:arg3::db::query
prepare	src/sqlite/statement.cpp	/^            void statement::prepare(const string &sql)$/;"	f	class:arg3::db::sqlite::statement
prepare_results	src/mysql/resultset.cpp	/^            void stmt_resultset::prepare_results()$/;"	f	class:arg3::db::mysql::stmt_resultset
prev	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* prev()$/;"	f	class:option::Option
prev	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* prev()$/;"	f	class:option::Option
prev_	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* prev_;$/;"	m	class:option::Option
prev_	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* prev_;$/;"	m	class:option::Option
prevwrap	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* prevwrap()$/;"	f	class:option::Option
prevwrap	tests/vendor/bandit/bandit/external/optionparser.h	/^  Option* prevwrap()$/;"	f	class:option::Option
primary_keys	src/schema.cpp	/^        vector<string> schema::primary_keys() const$/;"	f	class:arg3::db::schema
printUsage	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static void printUsage(IStringWriter& write, const Descriptor usage[], int width = 80, \/\/$/;"	f	struct:option::PrintUsageImplementation
printUsage	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(Function* prn, Stream* stream, const Descriptor usage[], int width = 80, int last_column_min_percent =$/;"	f	namespace:option
printUsage	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(Function* prn, const Descriptor usage[], int width = 80, int last_column_min_percent = 50,$/;"	f	namespace:option
printUsage	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(OStream& prn, const Descriptor usage[], int width = 80, int last_column_min_percent = 50,$/;"	f	namespace:option
printUsage	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(Syscall* prn, int fd, const Descriptor usage[], int width = 80, int last_column_min_percent = 50,$/;"	f	namespace:option
printUsage	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(const Temporary& prn, const Descriptor usage[], int width = 80, int last_column_min_percent = 50,$/;"	f	namespace:option
printUsage	tests/vendor/bandit/bandit/external/optionparser.h	/^  static void printUsage(IStringWriter& write, const Descriptor usage[], int width = 80, \/\/$/;"	f	struct:option::PrintUsageImplementation
printUsage	tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(Function* prn, Stream* stream, const Descriptor usage[], int width = 80, int last_column_min_percent =$/;"	f	namespace:option
printUsage	tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(Function* prn, const Descriptor usage[], int width = 80, int last_column_min_percent = 50,$/;"	f	namespace:option
printUsage	tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(OStream& prn, const Descriptor usage[], int width = 80, int last_column_min_percent = 50,$/;"	f	namespace:option
printUsage	tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(Syscall* prn, int fd, const Descriptor usage[], int width = 80, int last_column_min_percent = 50,$/;"	f	namespace:option
printUsage	tests/vendor/bandit/bandit/external/optionparser.h	/^void printUsage(const Temporary& prn, const Descriptor usage[], int width = 80, int last_column_min_percent = 50,$/;"	f	namespace:option
print_status_line	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void print_status_line()$/;"	f	struct:bandit::detail::single_line_reporter
print_status_line	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void print_status_line()$/;"	f	struct:bandit::detail::single_line_reporter
print_usage	libs/variant/tests/vendor/bandit/bandit/options.h	/^      void print_usage() const$/;"	f	struct:bandit::detail::options
print_usage	tests/vendor/bandit/bandit/options.h	/^      void print_usage() const$/;"	f	struct:bandit::detail::options
pro-attribs	html/classarg3_1_1db_1_1bind__mapping.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1modify__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1mysql_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1mysql__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1postgres_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1postgres__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1row__iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1sqldb.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1sqlite3__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1sqlite_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/classarg3_1_1db_1_1update__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/html/classarg3_1_1db_1_1modify__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/html/classarg3_1_1db_1_1query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/html/classarg3_1_1db_1_1row__iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/html/classarg3_1_1db_1_1sqldb.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-attribs	html/html/classarg3_1_1db_1_1update__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"><\/a>$/;"	a
pro-methods	html/classarg3_1_1db_1_1bind__mapping.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-methods	html/classarg3_1_1db_1_1bindable.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-methods	html/classarg3_1_1db_1_1query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-methods	html/classarg3_1_1db_1_1row__iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-methods	html/html/classarg3_1_1db_1_1query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-methods	html/html/classarg3_1_1db_1_1row__iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"><\/a>$/;"	a
pro-types	html/classarg3_1_1db_1_1bind__mapping.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-types"><\/a>$/;"	a
process	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    void process(IStringWriter& write, const char* data, int len)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
process	tests/vendor/bandit/bandit/external/optionparser.h	/^    void process(IStringWriter& write, const char* data, int len)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
progress_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    progress_reporter(const detail::failure_formatter& failure_formatter)$/;"	f	struct:bandit::detail::progress_reporter
progress_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^  struct progress_reporter : public listener$/;"	s	namespace:bandit::detail
progress_reporter	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    progress_reporter(const detail::failure_formatter& failure_formatter)$/;"	f	struct:bandit::detail::progress_reporter
progress_reporter	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^  struct progress_reporter : public listener$/;"	s	namespace:bandit::detail
protocol	src/sqldb.h	/^            std::string protocol, user, password, host, port, path, query, value;$/;"	m	struct:arg3::db::uri_type
ptr	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    const char* ptr; \/\/!< Ptr to current part within the current row.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
ptr	tests/vendor/bandit/bandit/external/optionparser.h	/^    const char* ptr; \/\/!< Ptr to current part within the current row.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
ptr_	libs/variant/src/variant.h	/^            arg3::binary ptr_;$/;"	m	union:arg3::variant::__anon2
pub-attribs	html/html/structarg3_1_1db_1_1column__definition.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	html/html/structarg3_1_1db_1_1uri.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	html/structarg3_1_1db_1_1column__definition.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	html/structarg3_1_1db_1_1uri.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-attribs	html/structarg3_1_1db_1_1uri__type.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1base__record.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1bind__mapping.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1bindable.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1column__impl.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1delete__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1insert__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1join__clause.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1modify__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql_1_1binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql_1_1column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql_1_1stmt__column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql_1_1stmt__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql_1_1stmt__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__cached__column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__cached__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__stmt__column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__stmt__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1mysql__stmt__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres_1_1binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres_1_1column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres__binding.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres__cached__column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres__cached__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres__cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres__column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1postgres__statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1record.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1resultset__impl.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1resultset__iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1row__impl.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1row__iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1schema.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1schema__factory.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1select__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sql__time.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sql__value.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqldb.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite3__cached__column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite3__cached__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite3__cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite3__column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite3__db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite3__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite3__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite3__statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite_1_1cached__column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite_1_1cached__resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite_1_1cached__row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite_1_1column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite_1_1db.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1sqlite_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1update__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/classarg3_1_1db_1_1where__clause.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1base__record.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1bindable.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1column.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1column__impl.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1delete__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1insert__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1join__clause.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1modify__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1resultset__impl.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1resultset__iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1row__impl.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1row__iterator.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1schema.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1schema__factory.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1select__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1sqldb.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1update__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/classarg3_1_1db_1_1where__clause.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/html/structarg3_1_1db_1_1uri.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/structarg3_1_1db_1_1helper_1_1mysql__res__delete.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/structarg3_1_1db_1_1helper_1_1postgres__res__delete.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/structarg3_1_1db_1_1mysql_1_1helper_1_1res__delete.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/structarg3_1_1db_1_1postgres_1_1helper_1_1res__delete.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/structarg3_1_1db_1_1sqlite3__stmt__delete.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/structarg3_1_1db_1_1sqlite_1_1helper_1_1stmt__delete.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/structarg3_1_1db_1_1uri.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-methods	html/structarg3_1_1db_1_1uri__type.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"><\/a>$/;"	a
pub-static-attribs	html/classarg3_1_1db_1_1modify__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"><\/a>$/;"	a
pub-static-attribs	html/html/classarg3_1_1db_1_1modify__query.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"><\/a>$/;"	a
pub-static-methods	html/classarg3_1_1db_1_1sqldb.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-static-methods	html/html/classarg3_1_1db_1_1sqldb.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1base__record.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1join__clause.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1record.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1resultset__impl.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1row__impl.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1sql__time.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1sqldb.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/classarg3_1_1db_1_1statement.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/html/classarg3_1_1db_1_1base__record.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/html/classarg3_1_1db_1_1resultset.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/html/classarg3_1_1db_1_1row.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/html/classarg3_1_1db_1_1row__impl.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
pub-types	html/html/classarg3_1_1db_1_1sqldb.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"><\/a>$/;"	a
qnxnto	.vagrant-build/CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	.vagrant-build/CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	debug/CMakeFiles/3.4.3/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	debug/CMakeFiles/3.4.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
query	html/query_h/Classes/query/index.html	/^<h1><a name="query">query<\/a><\/h1>$/;"	a
query	html/query_h/Classes/query/index.html	/^<h3><a name="query">query<\/a><\/h3>$/;"	a
query	src/query.cpp	/^        query::query(sqldb *db) : db_(db), stmt_(nullptr), params_(), named_params_()$/;"	f	class:arg3::db::query
query	src/query.h	/^        class query : public bindable$/;"	c	namespace:arg3::db
query	src/sqldb.h	/^            std::string protocol, user, password, host, port, path, query, value;$/;"	m	struct:arg3::db::uri_type
query(constquery)	html/query_h/Classes/query/index.html	/^<h3><a name="query(constquery)">query(const query &)<\/a><\/h3>$/;"	a
query(sqldb*)	html/query_h/Classes/query/index.html	/^<h3><a name="query(sqldb*)">query(sqldb *)<\/a><\/h3>$/;"	a
query.h	html/query_h/index.html	/^<h1><a name="query.h">query.h<\/a><\/h1>$/;"	a
query_schema	html/mysql_db_h/Classes/mysql_db/index.html	/^<h3><a name="query_schema">query_schema<\/a><\/h3>$/;"	a
query_schema	src/sqldb.cpp	/^        void sqldb::query_schema(const string &tableName, std::vector<column_definition> &columns)$/;"	f	class:arg3::db::sqldb
query_schema	src/sqlite/db.cpp	/^            void db::query_schema(const string &tableName, std::vector<column_definition> &columns)$/;"	f	class:arg3::db::sqlite::db
r	tests/db.test.cpp	/^std::random_device r;$/;"	v
random_name	tests/db.test.cpp	/^string random_name()$/;"	f
random_num	tests/db.test.h	/^T random_num(T min, T max)$/;"	f
rawDb	tests/db.test.h	/^    MYSQL *rawDb()$/;"	f	class:test_mysql_db
rawDb	tests/db.test.h	/^    PGconn *rawDb()$/;"	f	class:test_postgres_db
rawDb	tests/db.test.h	/^    sqlite3 *rawDb()$/;"	f	class:test_sqlite3_db
real_	libs/variant/src/variant.h	/^            long double real_;$/;"	m	union:arg3::variant::__anon2
reallocate_value	src/mysql/binding.cpp	/^            bool binding::reallocate_value(size_t index)$/;"	f	class:arg3::db::mysql::binding
reallocate_value	src/postgres/binding.cpp	/^            bool binding::reallocate_value(size_t index)$/;"	f	class:arg3::db::postgres::binding
record	src/record.h	/^            record(const record &other) : schema_(other.schema_), values_(other.values_), idColumnName_(other.idColumnName_)$/;"	f	class:arg3::db::record
record	src/record.h	/^            record(const std::shared_ptr<schema_type> &schema, const std::string &columnName) : schema_(schema), idColumnName_(columnName)$/;"	f	class:arg3::db::record
record	src/record.h	/^            record(const std::shared_ptr<schema_type> &schema, const std::string &columnName, V value)$/;"	f	class:arg3::db::record
record	src/record.h	/^            record(const std::shared_ptr<schema_type> &schema, const std::string &columnName, const row &values) : record(schema, columnName)$/;"	f	class:arg3::db::record
record	src/record.h	/^            record(record &&other)$/;"	f	class:arg3::db::record
record	src/record.h	/^            record(sqldb *db, const std::string &tableName, const std::string &columnName, const V &value)$/;"	f	class:arg3::db::record
record	src/record.h	/^            record(sqldb *db, const std::string &tableName, const std::string &columnName, const row &values) : record(db, tableName, columnName)$/;"	f	class:arg3::db::record
record	src/record.h	/^            record(sqldb *db, const std::string &tablename, const std::string &idColumnName)$/;"	f	class:arg3::db::record
record	src/record.h	/^        class record$/;"	c	namespace:arg3::db
red	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* red() const$/;"	f	struct:bandit::detail::colorizer
red	tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* red() const$/;"	f	struct:bandit::detail::colorizer
refresh	src/record.h	/^            bool refresh()$/;"	f	class:arg3::db::record
refresh_by	src/record.h	/^            bool refresh_by(const std::string &name)$/;"	f	class:arg3::db::record
register_after_each	libs/variant/tests/vendor/bandit/bandit/context.h	/^        void register_after_each(voidfunc_t func)$/;"	f	class:bandit::detail::bandit_context
register_after_each	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    void register_after_each(detail::voidfunc_t)$/;"	f	struct:bandit::fakes::fake_context
register_after_each	tests/vendor/bandit/bandit/context.h	/^        void register_after_each(voidfunc_t func)$/;"	f	class:bandit::detail::bandit_context
register_after_each	tests/vendor/bandit/specs/fakes/fake_context.h	/^    void register_after_each(detail::voidfunc_t)$/;"	f	struct:bandit::fakes::fake_context
register_before_each	libs/variant/tests/vendor/bandit/bandit/context.h	/^        void register_before_each(voidfunc_t func)$/;"	f	class:bandit::detail::bandit_context
register_before_each	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    void register_before_each(detail::voidfunc_t)$/;"	f	struct:bandit::fakes::fake_context
register_before_each	tests/vendor/bandit/bandit/context.h	/^        void register_before_each(voidfunc_t func)$/;"	f	class:bandit::detail::bandit_context
register_before_each	tests/vendor/bandit/specs/fakes/fake_context.h	/^    void register_before_each(detail::voidfunc_t)$/;"	f	struct:bandit::fakes::fake_context
register_reporter_fn	libs/variant/tests/vendor/bandit/bandit/runner.h	/^    typedef std::function<detail::listener* (detail::listener*)> register_reporter_fn;$/;"	t	namespace:bandit::detail
register_reporter_fn	tests/vendor/bandit/bandit/runner.h	/^    typedef std::function<detail::listener* (detail::listener*)> register_reporter_fn;$/;"	t	namespace:bandit::detail
registered_adapter	libs/variant/tests/vendor/bandit/bandit/adapters/adapters.h	/^  inline bandit::adapters::assertion_adapter& registered_adapter()$/;"	f	namespace:bandit::detail
registered_adapter	tests/vendor/bandit/bandit/adapters/adapters.h	/^  inline bandit::adapters::assertion_adapter& registered_adapter()$/;"	f	namespace:bandit::detail
registered_failure_formatter	libs/variant/tests/vendor/bandit/bandit/failure_formatters/failure_formatters.h	/^  inline failure_formatter& registered_failure_formatter()$/;"	f	namespace:bandit::detail
registered_failure_formatter	tests/vendor/bandit/bandit/failure_formatters/failure_formatters.h	/^  inline failure_formatter& registered_failure_formatter()$/;"	f	namespace:bandit::detail
registered_listener	libs/variant/tests/vendor/bandit/bandit/reporters/reporters.h	/^  inline listener& registered_listener(listener* reporter = NULL)$/;"	f	namespace:bandit::detail
registered_listener	tests/vendor/bandit/bandit/reporters/reporters.h	/^  inline listener& registered_listener(listener* reporter = NULL)$/;"	f	namespace:bandit::detail
registered_run_policy	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^  inline run_policy& registered_run_policy(run_policy* policy = NULL)$/;"	f	namespace:bandit::detail
registered_run_policy	tests/vendor/bandit/bandit/run_policies/run_policy.h	/^  inline run_policy& registered_run_policy(run_policy* policy = NULL)$/;"	f	namespace:bandit::detail
registered_skip_policy	libs/variant/tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^    inline skip_policy& registered_skip_policy(skip_policy* policy = NULL)$/;"	f	namespace:bandit::detail
registered_skip_policy	tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^    inline skip_policy& registered_skip_policy(skip_policy* policy = NULL)$/;"	f	namespace:bandit::detail
rem_named_param	src/bindable.cpp	/^        void bind_mapping::rem_named_param(const std::string &name, unsigned index)$/;"	f	class:arg3::db::bind_mapping
reporter	libs/variant/tests/vendor/bandit/bandit/options.h	/^      const char* reporter() const$/;"	f	struct:bandit::detail::options
reporter	tests/vendor/bandit/bandit/options.h	/^      const char* reporter() const$/;"	f	struct:bandit::detail::options
reporter_factory_fn	libs/variant/tests/vendor/bandit/bandit/runner.h	/^    typedef std::function<listener_ptr (const std::string&, const failure_formatter*)> reporter_factory_fn;$/;"	t	namespace:bandit::detail
reporter_factory_fn	tests/vendor/bandit/bandit/runner.h	/^    typedef std::function<listener_ptr (const std::string&, const failure_formatter*)> reporter_factory_fn;$/;"	t	namespace:bandit::detail
res_	src/mysql/column.h	/^                std::shared_ptr<MYSQL_RES> res_;$/;"	m	class:arg3::db::mysql::column
res_	src/mysql/resultset.h	/^                std::shared_ptr<MYSQL_RES> res_;$/;"	m	class:arg3::db::mysql::resultset
res_	src/mysql/row.h	/^                std::shared_ptr<MYSQL_RES> res_;$/;"	m	class:arg3::db::mysql::row
res_delete	src/mysql/resultset.h	/^                struct res_delete {$/;"	s	namespace:arg3::db::mysql::helper
res_delete	src/postgres/statement.h	/^                struct res_delete {$/;"	s	namespace:arg3::db::postgres::helper
reset	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="reset">reset<\/a><\/h3>$/;"	a
reset	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="reset">reset<\/a><\/h3>$/;"	a
reset	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<h3><a name="reset">reset<\/a><\/h3>$/;"	a
reset	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<h3><a name="reset">reset<\/a><\/h3>$/;"	a
reset	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* reset() const$/;"	f	struct:bandit::detail::colorizer
reset	src/bindable.cpp	/^        void bind_mapping::reset()$/;"	f	class:arg3::db::bind_mapping
reset	src/join_clause.cpp	/^        void join_clause::reset()$/;"	f	class:arg3::db::join_clause
reset	src/mysql/binding.cpp	/^            void binding::reset()$/;"	f	class:arg3::db::mysql::binding
reset	src/mysql/resultset.cpp	/^            void resultset::reset()$/;"	f	class:arg3::db::mysql::resultset
reset	src/mysql/resultset.cpp	/^            void stmt_resultset::reset()$/;"	f	class:arg3::db::mysql::stmt_resultset
reset	src/mysql/statement.cpp	/^            void statement::reset()$/;"	f	class:arg3::db::mysql::statement
reset	src/postgres/binding.cpp	/^            void binding::reset()$/;"	f	class:arg3::db::postgres::binding
reset	src/postgres/resultset.cpp	/^            void resultset::reset()$/;"	f	class:arg3::db::postgres::resultset
reset	src/postgres/statement.cpp	/^            void statement::reset()$/;"	f	class:arg3::db::postgres::statement
reset	src/query.cpp	/^        void query::reset()$/;"	f	class:arg3::db::query
reset	src/record.h	/^            void reset()$/;"	f	class:arg3::db::record
reset	src/resultset.cpp	/^        void resultset::reset()$/;"	f	class:arg3::db::resultset
reset	src/select_query.cpp	/^        void select_query::reset()$/;"	f	class:arg3::db::select_query
reset	src/sqlite/resultset.cpp	/^            void cached_resultset::reset()$/;"	f	class:arg3::db::sqlite::cached_resultset
reset	src/sqlite/resultset.cpp	/^            void resultset::reset()$/;"	f	class:arg3::db::sqlite::resultset
reset	src/sqlite/statement.cpp	/^            void statement::reset()$/;"	f	class:arg3::db::sqlite::statement
reset	src/where_clause.cpp	/^        void where_clause::reset()$/;"	f	class:arg3::db::where_clause
reset	tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* reset() const$/;"	f	struct:bandit::detail::colorizer
restartRow	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    void restartRow()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
restartRow	tests/vendor/bandit/bandit/external/optionparser.h	/^    void restartRow()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
restartTable	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    void restartTable()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
restartTable	tests/vendor/bandit/bandit/external/optionparser.h	/^    void restartTable()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
result	src/mysql/statement.cpp	/^            bool statement::result()$/;"	f	class:arg3::db::mysql::statement
result	src/postgres/statement.cpp	/^            bool statement::result()$/;"	f	class:arg3::db::postgres::statement
result	src/sqlite/statement.cpp	/^            bool statement::result()$/;"	f	class:arg3::db::sqlite::statement
results	src/mysql/statement.cpp	/^            statement::resultset_type statement::results()$/;"	f	class:arg3::db::mysql::statement
results	src/postgres/statement.cpp	/^            statement::resultset_type statement::results()$/;"	f	class:arg3::db::postgres::statement
results	src/sqlite/statement.cpp	/^            statement::resultset_type statement::results()$/;"	f	class:arg3::db::sqlite::statement
resultset	html/resultset_h/Classes/resultset/index.html	/^<h1><a name="resultset">resultset<\/a><\/h1>$/;"	a
resultset	src/mysql/resultset.cpp	/^            resultset::resultset(mysql::db *db, const shared_ptr<MYSQL_RES> &res) : res_(res), row_(nullptr), db_(db)$/;"	f	class:arg3::db::mysql::resultset
resultset	src/mysql/resultset.cpp	/^            resultset::resultset(resultset &&other) : res_(std::move(other.res_)), row_(other.row_), db_(other.db_)$/;"	f	class:arg3::db::mysql::resultset
resultset	src/mysql/resultset.h	/^            class resultset : public resultset_impl$/;"	c	namespace:arg3::db::mysql
resultset	src/postgres/resultset.cpp	/^            resultset::resultset(postgres::db *db, const shared_ptr<PGresult> &stmt) : stmt_(stmt), db_(db), currentRow_(-1)$/;"	f	class:arg3::db::postgres::resultset
resultset	src/postgres/resultset.cpp	/^            resultset::resultset(resultset &&other) : stmt_(std::move(other.stmt_)), db_(other.db_), currentRow_(other.currentRow_)$/;"	f	class:arg3::db::postgres::resultset
resultset	src/postgres/resultset.h	/^            class resultset : public resultset_impl$/;"	c	namespace:arg3::db::postgres
resultset	src/resultset.cpp	/^        resultset::resultset(const shared_ptr<resultset_impl> &impl) : impl_(impl)$/;"	f	class:arg3::db::resultset
resultset	src/resultset.cpp	/^        resultset::resultset(resultset &&other) : impl_(std::move(other.impl_))$/;"	f	class:arg3::db::resultset
resultset	src/resultset.h	/^        class resultset$/;"	c	namespace:arg3::db
resultset	src/sqlite/resultset.cpp	/^            resultset::resultset(resultset &&other) : stmt_(other.stmt_), db_(other.db_), status_(other.status_)$/;"	f	class:arg3::db::sqlite::resultset
resultset	src/sqlite/resultset.cpp	/^            resultset::resultset(sqlite::db *db, const shared_ptr<sqlite3_stmt> &stmt) : stmt_(stmt), db_(db), status_(-1)$/;"	f	class:arg3::db::sqlite::resultset
resultset	src/sqlite/resultset.h	/^            class resultset : public resultset_impl$/;"	c	namespace:arg3::db::sqlite
resultset.h	html/resultset_h/index.html	/^<h1><a name="resultset.h">resultset.h<\/a><\/h1>$/;"	a
resultset_impl	html/resultset_h/Classes/resultset_impl/index.html	/^<h1><a name="resultset_impl">resultset_impl<\/a><\/h1>$/;"	a
resultset_impl	src/resultset.h	/^        class resultset_impl$/;"	c	namespace:arg3::db
resultset_iterator	html/resultset_h/Classes/resultset_iterator/index.html	/^<h1><a name="resultset_iterator">resultset_iterator<\/a><\/h1>$/;"	a
resultset_iterator	src/resultset.h	/^            resultset_iterator(const resultset_iterator &other) : rs_(other.rs_), pos_(other.pos_), value_(other.value_)$/;"	f	class:arg3::db::resultset_iterator
resultset_iterator	src/resultset.h	/^            resultset_iterator(const std::shared_ptr<resultset_impl> &rset, int position) : rs_(rset), pos_(position), value_(rset->current_row())$/;"	f	class:arg3::db::resultset_iterator
resultset_iterator	src/resultset.h	/^            resultset_iterator(resultset_iterator &&other) : rs_(std::move(other.rs_)), pos_(other.pos_), value_(std::move(other.value_))$/;"	f	class:arg3::db::resultset_iterator
resultset_iterator	src/resultset.h	/^        class resultset_iterator : public std::iterator<std::input_iterator_tag, ValueType>$/;"	c	namespace:arg3::db
resultset_type	src/sqldb.h	/^            typedef resultset resultset_type;$/;"	t	class:arg3::db::sqldb
resultset_type	src/statement.h	/^            typedef arg3::db::resultset resultset_type;$/;"	t	class:arg3::db::statement
right_outer	src/join_clause.h	/^            typedef enum { none, natural, inner, left_outer, right_outer, full_outer, cross } type;$/;"	e	enum:arg3::db::join_clause::__anon6
row	html/row_h/Classes/row/index.html	/^<h1><a name="row">row<\/a><\/h1>$/;"	a
row	src/mysql/row.cpp	/^            row::row(mysql::db *db, const shared_ptr<MYSQL_RES> &res, MYSQL_ROW row) : row_impl(), row_(row), res_(res), db_(db)$/;"	f	class:arg3::db::mysql::row
row	src/mysql/row.cpp	/^            row::row(row &&other) : row_impl(std::move(other)), row_(other.row_), res_(other.res_), db_(other.db_), size_(other.size_)$/;"	f	class:arg3::db::mysql::row
row	src/mysql/row.h	/^            class row : public row_impl$/;"	c	namespace:arg3::db::mysql
row	src/postgres/row.cpp	/^            row::row(postgres::db *db, const shared_ptr<PGresult> &stmt, int row) : row_impl(), stmt_(stmt), db_(db), row_(row)$/;"	f	class:arg3::db::postgres::row
row	src/postgres/row.cpp	/^            row::row(row &&other) : row_impl(std::move(other)), stmt_(std::move(other.stmt_)), db_(other.db_), size_(other.size_), row_(other.row_)$/;"	f	class:arg3::db::postgres::row
row	src/postgres/row.h	/^            class row : public row_impl$/;"	c	namespace:arg3::db::postgres
row	src/row.cpp	/^        row::row() : impl_(nullptr)$/;"	f	class:arg3::db::row
row	src/row.cpp	/^        row::row(const row &other) : impl_(other.impl_)$/;"	f	class:arg3::db::row
row	src/row.cpp	/^        row::row(const shared_ptr<row_impl> &impl) : impl_(impl)$/;"	f	class:arg3::db::row
row	src/row.cpp	/^        row::row(row &&other) : impl_(std::move(other.impl_))$/;"	f	class:arg3::db::row
row	src/row.h	/^        class row$/;"	c	namespace:arg3::db
row	src/sqlite/row.cpp	/^            row::row(row &&other) : row_impl(std::move(other)), stmt_(other.stmt_), db_(other.db_), size_(other.size_)$/;"	f	class:arg3::db::sqlite::row
row	src/sqlite/row.cpp	/^            row::row(sqlite::db *db, const shared_ptr<sqlite3_stmt> &stmt) : row_impl(), stmt_(stmt), db_(db)$/;"	f	class:arg3::db::sqlite::row
row	src/sqlite/row.h	/^            class row : public row_impl$/;"	c	namespace:arg3::db::sqlite
row.h	html/row_h/index.html	/^<h1><a name="row.h">row.h<\/a><\/h1>$/;"	a
row_	src/mysql/resultset.h	/^                MYSQL_ROW row_;$/;"	m	class:arg3::db::mysql::resultset
row_	src/mysql/row.h	/^                MYSQL_ROW row_;$/;"	m	class:arg3::db::mysql::row
row_	src/postgres/column.h	/^                int row_;$/;"	m	class:arg3::db::postgres::column
row_	src/postgres/row.h	/^                int row_;$/;"	m	class:arg3::db::postgres::row
row_	src/row.h	/^            std::shared_ptr<RowType> row_;$/;"	m	class:arg3::db::row_iterator
row_impl	html/row_h/Classes/row_impl/index.html	/^<h1><a name="row_impl">row_impl<\/a><\/h1>$/;"	a
row_impl	src/row.h	/^        class row_impl$/;"	c	namespace:arg3::db
row_iterator	html/row_h/Classes/row_iterator/index.html	/^<h1><a name="row_iterator">row_iterator<\/a><\/h1>$/;"	a
row_iterator	src/row.h	/^            row_iterator() : row_(nullptr), position_(-1)$/;"	f	class:arg3::db::row_iterator
row_iterator	src/row.h	/^            row_iterator(const row_iterator &other) : row_(other.row_), position_(other.position_)$/;"	f	class:arg3::db::row_iterator
row_iterator	src/row.h	/^            row_iterator(const std::shared_ptr<RowType> &pRow, int position) : row_(pRow), position_(position)$/;"	f	class:arg3::db::row_iterator
row_iterator	src/row.h	/^            row_iterator(row_iterator &&other) : row_(std::move(other.row_)), position_(other.position_)$/;"	f	class:arg3::db::row_iterator
row_iterator	src/row.h	/^        class row_iterator : public std::iterator<std::random_access_iterator_tag, ValueType>$/;"	c	namespace:arg3::db
row_type	src/resultset.h	/^            typedef arg3::db::row row_type;$/;"	t	class:arg3::db::resultset
row_type	src/resultset.h	/^            typedef arg3::db::row row_type;$/;"	t	class:arg3::db::resultset_impl
rowdesc	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    const Descriptor* rowdesc; \/\/!< The Descriptor that contains the current row.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
rowdesc	tests/vendor/bandit/bandit/external/optionparser.h	/^    const Descriptor* rowdesc; \/\/!< The Descriptor that contains the current row.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
rows_	src/sqlite/resultset.h	/^                std::vector<std::shared_ptr<row_impl>> rows_;$/;"	m	class:arg3::db::sqlite::cached_resultset
rowstart	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    const char* rowstart; \/\/!< Ptr to 1st character of current row within rowdesc->help.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
rowstart	tests/vendor/bandit/bandit/external/optionparser.h	/^    const char* rowstart; \/\/!< Ptr to 1st character of current row within rowdesc->help.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
rs_	src/resultset.h	/^            std::shared_ptr<resultset_impl> rs_;$/;"	m	class:arg3::db::resultset_iterator
run	libs/variant/tests/vendor/bandit/bandit/runner.h	/^  inline int run(const detail::options& opt, const detail::spec_registry& specs,$/;"	f	namespace:bandit
run	libs/variant/tests/vendor/bandit/bandit/runner.h	/^  inline int run(int argc, char* argv[])$/;"	f	namespace:bandit
run	tests/vendor/bandit/bandit/runner.h	/^  inline int run(const detail::options& opt, const detail::spec_registry& specs,$/;"	f	namespace:bandit
run	tests/vendor/bandit/bandit/runner.h	/^  inline int run(int argc, char* argv[])$/;"	f	namespace:bandit
run_after_eaches	libs/variant/tests/vendor/bandit/bandit/context.h	/^        void run_after_eaches()$/;"	f	class:bandit::detail::bandit_context
run_after_eaches	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    void run_after_eaches()$/;"	f	struct:bandit::fakes::fake_context
run_after_eaches	tests/vendor/bandit/bandit/context.h	/^        void run_after_eaches()$/;"	f	class:bandit::detail::bandit_context
run_after_eaches	tests/vendor/bandit/specs/fakes/fake_context.h	/^    void run_after_eaches()$/;"	f	struct:bandit::fakes::fake_context
run_all	libs/variant/tests/vendor/bandit/bandit/context.h	/^        void run_all(const std::list<voidfunc_t>& funcs)$/;"	f	class:bandit::detail::bandit_context
run_all	tests/vendor/bandit/bandit/context.h	/^        void run_all(const std::list<voidfunc_t>& funcs)$/;"	f	class:bandit::detail::bandit_context
run_before_eaches	libs/variant/tests/vendor/bandit/bandit/context.h	/^        void run_before_eaches()$/;"	f	class:bandit::detail::bandit_context
run_before_eaches	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    void run_before_eaches()$/;"	f	struct:bandit::fakes::fake_context
run_before_eaches	tests/vendor/bandit/bandit/context.h	/^        void run_before_eaches()$/;"	f	class:bandit::detail::bandit_context
run_before_eaches	tests/vendor/bandit/specs/fakes/fake_context.h	/^    void run_before_eaches()$/;"	f	struct:bandit::fakes::fake_context
run_policy	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^    run_policy() : encountered_failure_(false) {}$/;"	f	struct:bandit::detail::run_policy
run_policy	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^  struct run_policy$/;"	s	namespace:bandit::detail
run_policy	tests/vendor/bandit/bandit/run_policies/run_policy.h	/^  struct run_policy$/;"	s	namespace:bandit::detail
run_policy_ptr	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^  typedef std::unique_ptr<run_policy> run_policy_ptr;$/;"	t	namespace:bandit::detail
run_policy_ptr	tests/vendor/bandit/bandit/run_policies/run_policy.h	/^  typedef std::unique_ptr<run_policy> run_policy_ptr;$/;"	t	namespace:bandit::detail
run_tests	tests/stress.test.cpp	/^void run_tests(sqldb* db, const char* name)$/;"	f
save	src/record.h	/^            bool save()$/;"	f	class:arg3::db::record
schema	html/schema_h/Classes/schema/index.html	/^<h1><a name="schema">schema<\/a><\/h1>$/;"	a
schema	src/record.h	/^            std::shared_ptr<schema_type> schema() const$/;"	f	class:arg3::db::record
schema	src/schema.cpp	/^        schema::schema(const schema &other) : db_(other.db_), tableName_(other.tableName_), columns_(other.columns_)$/;"	f	class:arg3::db::schema
schema	src/schema.cpp	/^        schema::schema(schema &&other) : db_(other.db_), tableName_(std::move(other.tableName_)), columns_(std::move(other.columns_))$/;"	f	class:arg3::db::schema
schema	src/schema.cpp	/^        schema::schema(sqldb *db, const string &tablename) : db_(db), tableName_(tablename)$/;"	f	class:arg3::db::schema
schema	src/schema.h	/^        class schema$/;"	c	namespace:arg3::db
schema.h	html/schema_h/index.html	/^<h1><a name="schema.h">schema.h<\/a><\/h1>$/;"	a
schema_	src/record.h	/^            std::shared_ptr<schema_type> schema_;$/;"	m	class:arg3::db::record
schema_cache_	src/schema_factory.h	/^            std::unordered_map<std::string, std::shared_ptr<schema>> schema_cache_;$/;"	m	class:arg3::db::schema_factory
schema_factory	html/schema_factory_h/Classes/schema_factory/index.html	/^<h1><a name="schema_factory">schema_factory<\/a><\/h1>$/;"	a
schema_factory	src/schema_factory.cpp	/^        schema_factory::schema_factory(const schema_factory &other) : schema_cache_(other.schema_cache_), db_(other.db_)$/;"	f	class:arg3::db::schema_factory
schema_factory	src/schema_factory.cpp	/^        schema_factory::schema_factory(schema_factory &&other) : schema_cache_(std::move(other.schema_cache_)), db_(other.db_)$/;"	f	class:arg3::db::schema_factory
schema_factory	src/schema_factory.cpp	/^        schema_factory::schema_factory(sqldb *db) : db_(db)$/;"	f	class:arg3::db::schema_factory
schema_factory	src/schema_factory.h	/^        class schema_factory$/;"	c	namespace:arg3::db
schema_factory.h	html/schema_factory_h/index.html	/^<h1><a name="schema_factory.h">schema_factory.h<\/a><\/h1>$/;"	a
schema_factory_	src/sqldb.h	/^            schema_factory schema_factory_;$/;"	m	class:arg3::db::sqldb
schema_type	src/record.h	/^            typedef arg3::db::schema schema_type;$/;"	t	class:arg3::db::record
schemas	src/sqldb.cpp	/^        const schema_factory *sqldb::schemas() const$/;"	f	class:arg3::db::sqldb
schemas	src/sqldb.cpp	/^        schema_factory *sqldb::schemas()$/;"	f	class:arg3::db::sqldb
screenLength	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int screenLength()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
screenLength	tests/vendor/bandit/bandit/external/optionparser.h	/^    int screenLength()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
screenlen	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int screenlen; \/\/!< Length of the current part in screen columns (taking narrow\/wide chars into account).$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
screenlen	tests/vendor/bandit/bandit/external/optionparser.h	/^    int screenlen; \/\/!< Length of the current part in screen columns (taking narrow\/wide chars into account).$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
searchData	html/html/search/all_0.js	/^var searchData=$/;"	v
searchData	html/html/search/all_1.js	/^var searchData=$/;"	v
searchData	html/html/search/all_10.js	/^var searchData=$/;"	v
searchData	html/html/search/all_11.js	/^var searchData=$/;"	v
searchData	html/html/search/all_12.js	/^var searchData=$/;"	v
searchData	html/html/search/all_13.js	/^var searchData=$/;"	v
searchData	html/html/search/all_14.js	/^var searchData=$/;"	v
searchData	html/html/search/all_2.js	/^var searchData=$/;"	v
searchData	html/html/search/all_3.js	/^var searchData=$/;"	v
searchData	html/html/search/all_4.js	/^var searchData=$/;"	v
searchData	html/html/search/all_5.js	/^var searchData=$/;"	v
searchData	html/html/search/all_6.js	/^var searchData=$/;"	v
searchData	html/html/search/all_7.js	/^var searchData=$/;"	v
searchData	html/html/search/all_8.js	/^var searchData=$/;"	v
searchData	html/html/search/all_9.js	/^var searchData=$/;"	v
searchData	html/html/search/all_a.js	/^var searchData=$/;"	v
searchData	html/html/search/all_b.js	/^var searchData=$/;"	v
searchData	html/html/search/all_c.js	/^var searchData=$/;"	v
searchData	html/html/search/all_d.js	/^var searchData=$/;"	v
searchData	html/html/search/all_e.js	/^var searchData=$/;"	v
searchData	html/html/search/all_f.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_0.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_1.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_2.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_3.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_4.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_5.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_6.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_7.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_8.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_9.js	/^var searchData=$/;"	v
searchData	html/html/search/classes_a.js	/^var searchData=$/;"	v
searchData	html/html/search/enums_0.js	/^var searchData=$/;"	v
searchData	html/html/search/enums_1.js	/^var searchData=$/;"	v
searchData	html/html/search/enums_2.js	/^var searchData=$/;"	v
searchData	html/html/search/enumvalues_0.js	/^var searchData=$/;"	v
searchData	html/html/search/enumvalues_1.js	/^var searchData=$/;"	v
searchData	html/html/search/enumvalues_2.js	/^var searchData=$/;"	v
searchData	html/html/search/enumvalues_3.js	/^var searchData=$/;"	v
searchData	html/html/search/enumvalues_4.js	/^var searchData=$/;"	v
searchData	html/html/search/enumvalues_5.js	/^var searchData=$/;"	v
searchData	html/html/search/files_0.js	/^var searchData=$/;"	v
searchData	html/html/search/files_1.js	/^var searchData=$/;"	v
searchData	html/html/search/files_2.js	/^var searchData=$/;"	v
searchData	html/html/search/files_3.js	/^var searchData=$/;"	v
searchData	html/html/search/files_4.js	/^var searchData=$/;"	v
searchData	html/html/search/files_5.js	/^var searchData=$/;"	v
searchData	html/html/search/files_6.js	/^var searchData=$/;"	v
searchData	html/html/search/files_7.js	/^var searchData=$/;"	v
searchData	html/html/search/files_8.js	/^var searchData=$/;"	v
searchData	html/html/search/files_9.js	/^var searchData=$/;"	v
searchData	html/html/search/files_a.js	/^var searchData=$/;"	v
searchData	html/html/search/files_b.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_0.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_1.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_10.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_11.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_12.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_13.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_2.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_3.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_4.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_5.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_6.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_7.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_8.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_9.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_a.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_b.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_c.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_d.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_e.js	/^var searchData=$/;"	v
searchData	html/html/search/functions_f.js	/^var searchData=$/;"	v
searchData	html/html/search/typedefs_0.js	/^var searchData=$/;"	v
searchData	html/html/search/variables_0.js	/^var searchData=$/;"	v
searchData	html/html/search/variables_1.js	/^var searchData=$/;"	v
searchData	html/search/all_0.js	/^var searchData=$/;"	v
searchData	html/search/all_1.js	/^var searchData=$/;"	v
searchData	html/search/all_10.js	/^var searchData=$/;"	v
searchData	html/search/all_11.js	/^var searchData=$/;"	v
searchData	html/search/all_12.js	/^var searchData=$/;"	v
searchData	html/search/all_13.js	/^var searchData=$/;"	v
searchData	html/search/all_14.js	/^var searchData=$/;"	v
searchData	html/search/all_15.js	/^var searchData=$/;"	v
searchData	html/search/all_2.js	/^var searchData=$/;"	v
searchData	html/search/all_3.js	/^var searchData=$/;"	v
searchData	html/search/all_4.js	/^var searchData=$/;"	v
searchData	html/search/all_5.js	/^var searchData=$/;"	v
searchData	html/search/all_6.js	/^var searchData=$/;"	v
searchData	html/search/all_7.js	/^var searchData=$/;"	v
searchData	html/search/all_8.js	/^var searchData=$/;"	v
searchData	html/search/all_9.js	/^var searchData=$/;"	v
searchData	html/search/all_a.js	/^var searchData=$/;"	v
searchData	html/search/all_b.js	/^var searchData=$/;"	v
searchData	html/search/all_c.js	/^var searchData=$/;"	v
searchData	html/search/all_d.js	/^var searchData=$/;"	v
searchData	html/search/all_e.js	/^var searchData=$/;"	v
searchData	html/search/all_f.js	/^var searchData=$/;"	v
searchData	html/search/classes_0.js	/^var searchData=$/;"	v
searchData	html/search/classes_1.js	/^var searchData=$/;"	v
searchData	html/search/classes_2.js	/^var searchData=$/;"	v
searchData	html/search/classes_3.js	/^var searchData=$/;"	v
searchData	html/search/classes_4.js	/^var searchData=$/;"	v
searchData	html/search/classes_5.js	/^var searchData=$/;"	v
searchData	html/search/classes_6.js	/^var searchData=$/;"	v
searchData	html/search/classes_7.js	/^var searchData=$/;"	v
searchData	html/search/classes_8.js	/^var searchData=$/;"	v
searchData	html/search/classes_9.js	/^var searchData=$/;"	v
searchData	html/search/classes_a.js	/^var searchData=$/;"	v
searchData	html/search/classes_b.js	/^var searchData=$/;"	v
searchData	html/search/enums_0.js	/^var searchData=$/;"	v
searchData	html/search/enums_1.js	/^var searchData=$/;"	v
searchData	html/search/enums_2.js	/^var searchData=$/;"	v
searchData	html/search/enumvalues_0.js	/^var searchData=$/;"	v
searchData	html/search/enumvalues_1.js	/^var searchData=$/;"	v
searchData	html/search/enumvalues_2.js	/^var searchData=$/;"	v
searchData	html/search/enumvalues_3.js	/^var searchData=$/;"	v
searchData	html/search/enumvalues_4.js	/^var searchData=$/;"	v
searchData	html/search/enumvalues_5.js	/^var searchData=$/;"	v
searchData	html/search/files_0.js	/^var searchData=$/;"	v
searchData	html/search/files_1.js	/^var searchData=$/;"	v
searchData	html/search/files_2.js	/^var searchData=$/;"	v
searchData	html/search/files_3.js	/^var searchData=$/;"	v
searchData	html/search/files_4.js	/^var searchData=$/;"	v
searchData	html/search/files_5.js	/^var searchData=$/;"	v
searchData	html/search/files_6.js	/^var searchData=$/;"	v
searchData	html/search/files_7.js	/^var searchData=$/;"	v
searchData	html/search/files_8.js	/^var searchData=$/;"	v
searchData	html/search/files_9.js	/^var searchData=$/;"	v
searchData	html/search/files_a.js	/^var searchData=$/;"	v
searchData	html/search/files_b.js	/^var searchData=$/;"	v
searchData	html/search/functions_0.js	/^var searchData=$/;"	v
searchData	html/search/functions_1.js	/^var searchData=$/;"	v
searchData	html/search/functions_10.js	/^var searchData=$/;"	v
searchData	html/search/functions_11.js	/^var searchData=$/;"	v
searchData	html/search/functions_12.js	/^var searchData=$/;"	v
searchData	html/search/functions_13.js	/^var searchData=$/;"	v
searchData	html/search/functions_14.js	/^var searchData=$/;"	v
searchData	html/search/functions_2.js	/^var searchData=$/;"	v
searchData	html/search/functions_3.js	/^var searchData=$/;"	v
searchData	html/search/functions_4.js	/^var searchData=$/;"	v
searchData	html/search/functions_5.js	/^var searchData=$/;"	v
searchData	html/search/functions_6.js	/^var searchData=$/;"	v
searchData	html/search/functions_7.js	/^var searchData=$/;"	v
searchData	html/search/functions_8.js	/^var searchData=$/;"	v
searchData	html/search/functions_9.js	/^var searchData=$/;"	v
searchData	html/search/functions_a.js	/^var searchData=$/;"	v
searchData	html/search/functions_b.js	/^var searchData=$/;"	v
searchData	html/search/functions_c.js	/^var searchData=$/;"	v
searchData	html/search/functions_d.js	/^var searchData=$/;"	v
searchData	html/search/functions_e.js	/^var searchData=$/;"	v
searchData	html/search/functions_f.js	/^var searchData=$/;"	v
searchData	html/search/namespaces_0.js	/^var searchData=$/;"	v
searchData	html/search/typedefs_0.js	/^var searchData=$/;"	v
searchData	html/search/typedefs_1.js	/^var searchData=$/;"	v
searchData	html/search/variables_0.js	/^var searchData=$/;"	v
searchData	html/search/variables_1.js	/^var searchData=$/;"	v
select_query	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/Classes/select_query/index.html	/^<h1><a name="select_query">select_query<\/a><\/h1>$/;"	a
select_query	html/select_query_h/Classes/select_query/index.html	/^<h1><a name="select_query">select_query<\/a><\/h1>$/;"	a
select_query	src/select_query.cpp	/^        select_query::select_query(const select_query &other)$/;"	f	class:arg3::db::select_query
select_query	src/select_query.cpp	/^        select_query::select_query(const shared_ptr<schema> &schema) : select_query(schema->db(), schema->column_names())$/;"	f	class:arg3::db::select_query
select_query	src/select_query.cpp	/^        select_query::select_query(select_query &&other)$/;"	f	class:arg3::db::select_query
select_query	src/select_query.cpp	/^        select_query::select_query(sqldb *db) : query(db)$/;"	f	class:arg3::db::select_query
select_query	src/select_query.cpp	/^        select_query::select_query(sqldb *db, const vector<string> &columns) : query(db), columns_(columns)$/;"	f	class:arg3::db::select_query
select_query	src/select_query.cpp	/^        select_query::select_query(sqldb *db, const vector<string> &columns, const string &tableName)$/;"	f	class:arg3::db::select_query
select_query	src/select_query.h	/^        class select_query : public query$/;"	c	namespace:arg3::db
select_query.h	html/select_query_h/index.html	/^<h1><a name="select_query.h">select_query.h<\/a><\/h1>$/;"	a
set	src/record.h	/^            void set(const std::string &name, const sql_value &value)$/;"	f	class:arg3::db::record
setClassAttr	html/html/search/search.js	/^function setClassAttr(elem,attr)$/;"	f
setClassAttr	html/search/search.js	/^function setClassAttr(elem,attr)$/;"	f
setKeyActions	html/html/search/search.js	/^function setKeyActions(elem,action)$/;"	f
setKeyActions	html/search/search.js	/^function setKeyActions(elem,action)$/;"	f
set_cache_level	src/sqlite/db.cpp	/^            void db::set_cache_level(cache::level level)$/;"	f	class:arg3::db::sqlite::db
set_connection_info	src/sqldb.cpp	/^        void sqldb::set_connection_info(const uri &value)$/;"	f	class:arg3::db::sqldb
set_console_color	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^	  void set_console_color(WORD color) const$/;"	f	struct:bandit::detail::colorizer
set_console_color	tests/vendor/bandit/bandit/reporters/colorizer.h	/^	  void set_console_color(WORD color) const$/;"	f	struct:bandit::detail::colorizer
set_current_value	src/row.h	/^            void set_current_value(size_t index)$/;"	f	class:arg3::db::row_iterator
set_flags	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="set_flags">set_flags<\/a><\/h3>$/;"	a
set_flags	src/modify_query.cpp	/^        modify_query &modify_query::set_flags(int value)$/;"	f	class:arg3::db::modify_query
set_id	src/record.h	/^            void set_id(const sql_value &value)$/;"	f	class:arg3::db::record
set_last_insert_id	src/postgres/db.cpp	/^            void db::set_last_insert_id(long long value)$/;"	f	class:arg3::db::postgres::db
set_last_number_of_changes	src/postgres/db.cpp	/^            void db::set_last_number_of_changes(int value)$/;"	f	class:arg3::db::postgres::db
set_level	src/log.cpp	/^            void set_level(const char *arg)$/;"	f	namespace:arg3::db::log
set_level	src/log.cpp	/^            void set_level(log::level level)$/;"	f	namespace:arg3::db::log
set_table_name	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="set_table_name">set_table_name<\/a><\/h3>$/;"	a
set_table_name	src/join_clause.cpp	/^        join_clause &join_clause::set_table_name(const string &value)$/;"	f	class:arg3::db::join_clause
set_test_run_status	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void set_test_run_status(bool status)$/;"	f	struct:bandit::fakes::fake_reporter
set_test_run_status	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void set_test_run_status(bool status)$/;"	f	struct:bandit::fakes::fake_reporter
set_time	src/mysql/binding.cpp	/^                void set_time(MYSQL_BIND *binding, const sql_time &value)$/;"	f	namespace:arg3::db::mysql::data_mapper
set_type	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="set_type">set_type<\/a><\/h3>$/;"	a
set_type	src/join_clause.cpp	/^        join_clause &join_clause::set_type(join::type value)$/;"	f	class:arg3::db::join_clause
set_value	src/sqlite/column.cpp	/^            void cached_column::set_value(const shared_ptr<sqlite3_stmt> &stmt, int column)$/;"	f	class:arg3::db::sqlite::cached_column
setup	tests/db.test.cpp	/^void test_mysql_db::setup()$/;"	f	class:test_mysql_db
setup	tests/db.test.cpp	/^void test_postgres_db::setup()$/;"	f	class:test_postgres_db
setup	tests/db.test.cpp	/^void test_sqlite3_db::setup()$/;"	f	class:test_sqlite3_db
setup_testdb	tests/db.test.cpp	/^void setup_testdb()$/;"	f
shift	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static void shift(const char** args, int count)$/;"	f	class:option::Parser
shift	tests/vendor/bandit/bandit/external/optionparser.h	/^  static void shift(const char** args, int count)$/;"	f	class:option::Parser
shortopt	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* const shortopt;$/;"	m	struct:option::Descriptor
shortopt	tests/vendor/bandit/bandit/external/optionparser.h	/^  const char* const shortopt;$/;"	m	struct:option::Descriptor
should_run	libs/variant/tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^    bool should_run(const char* \/* it_name *\/, const contextstack_t& \/* contexts *\/) const$/;"	f	struct:bandit::detail::always_run_policy
should_run	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool should_run(const char* it_name, const contextstack_t& contexts) const$/;"	f	struct:bandit::detail::bandit_run_policy
should_run	libs/variant/tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^    bool should_run(const char* \/* it_name *\/, const contextstack_t& \/* contexts *\/) const$/;"	f	struct:bandit::detail::never_run_policy
should_run	tests/vendor/bandit/bandit/run_policies/always_run_policy.h	/^    bool should_run(const char* \/* it_name *\/, const contextstack_t& \/* contexts *\/) const$/;"	f	struct:bandit::detail::always_run_policy
should_run	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    bool should_run(const char* it_name, const contextstack_t& contexts) const$/;"	f	struct:bandit::detail::bandit_run_policy
should_run	tests/vendor/bandit/bandit/run_policies/never_run_policy.h	/^    bool should_run(const char* \/* it_name *\/, const contextstack_t& \/* contexts *\/) const$/;"	f	struct:bandit::detail::never_run_policy
should_skip	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^    bool should_skip(const char*) const$/;"	f	struct:bandit::detail::always_include_policy
should_skip	libs/variant/tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^    bool should_skip(const char*) const$/;"	f	struct:bandit::detail::always_skip_policy
should_skip	libs/variant/tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^    bool should_skip(const char* name) const$/;"	f	struct:bandit::detail::name_contains_skip_policy
should_skip	tests/vendor/bandit/bandit/skip_policies/always_include_policy.h	/^    bool should_skip(const char*) const$/;"	f	struct:bandit::detail::always_include_policy
should_skip	tests/vendor/bandit/bandit/skip_policies/always_skip_policy.h	/^    bool should_skip(const char*) const$/;"	f	struct:bandit::detail::always_skip_policy
should_skip	tests/vendor/bandit/bandit/skip_policies/name_contains_skip_policy.h	/^    bool should_skip(const char* name) const$/;"	f	struct:bandit::detail::name_contains_skip_policy
silly_warning_about_unused_arg	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    static ExceptionType*** silly_warning_about_unused_arg(ExceptionType*** e)$/;"	f	class:snowhouse::ExceptionStorage
silly_warning_about_unused_arg	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    static ExceptionType*** silly_warning_about_unused_arg(ExceptionType*** e)$/;"	f	class:snowhouse::ExceptionStorage
single_line_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    single_line_reporter(const failure_formatter& failure_formatter,$/;"	f	struct:bandit::detail::single_line_reporter
single_line_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    single_line_reporter(std::ostream& stm, const failure_formatter& failure_formatter,$/;"	f	struct:bandit::detail::single_line_reporter
single_line_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^  struct single_line_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
single_line_reporter	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    single_line_reporter(const failure_formatter& failure_formatter,$/;"	f	struct:bandit::detail::single_line_reporter
single_line_reporter	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    single_line_reporter(std::ostream& stm, const failure_formatter& failure_formatter,$/;"	f	struct:bandit::detail::single_line_reporter
single_line_reporter	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^  struct single_line_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
size	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="size">size<\/a><\/h3>$/;"	a
size	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<h3><a name="size">size<\/a><\/h3>$/;"	a
size	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<h3><a name="size">size<\/a><\/h3>$/;"	a
size	html/mysql_row_h/Classes/mysql_row/index.html	/^<h3><a name="size">size<\/a><\/h3>$/;"	a
size	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<h3><a name="size">size<\/a><\/h3>$/;"	a
size	libs/variant/src/binary.cpp	/^    size_t binary::size() const$/;"	f	class:arg3::binary
size	libs/variant/src/variant.cpp	/^    size_t variant::size() const$/;"	f	class:arg3::variant
size	libs/variant/tests/variant.test.cpp	/^    size_t size() const$/;"	f	class:complex_val
size	src/mysql/binding.cpp	/^            size_t binding::size() const$/;"	f	class:arg3::db::mysql::binding
size	src/mysql/resultset.cpp	/^            size_t resultset::size() const$/;"	f	class:arg3::db::mysql::resultset
size	src/mysql/resultset.cpp	/^            size_t stmt_resultset::size() const$/;"	f	class:arg3::db::mysql::stmt_resultset
size	src/mysql/row.cpp	/^            size_t row::size() const$/;"	f	class:arg3::db::mysql::row
size	src/mysql/row.cpp	/^            size_t stmt_row::size() const$/;"	f	class:arg3::db::mysql::stmt_row
size	src/postgres/binding.cpp	/^            size_t binding::size() const$/;"	f	class:arg3::db::postgres::binding
size	src/postgres/resultset.cpp	/^            size_t resultset::size() const$/;"	f	class:arg3::db::postgres::resultset
size	src/postgres/row.cpp	/^            size_t row::size() const$/;"	f	class:arg3::db::postgres::row
size	src/resultset.cpp	/^        size_t resultset::size() const$/;"	f	class:arg3::db::resultset
size	src/row.cpp	/^        size_t row::size() const$/;"	f	class:arg3::db::row
size	src/schema.cpp	/^        size_t schema::size() const$/;"	f	class:arg3::db::schema
size	src/sql_value.cpp	/^        size_t sql_time::size() const$/;"	f	class:arg3::db::sql_time
size	src/sqlite/resultset.cpp	/^            size_t cached_resultset::size() const$/;"	f	class:arg3::db::sqlite::cached_resultset
size	src/sqlite/resultset.cpp	/^            size_t resultset::size() const$/;"	f	class:arg3::db::sqlite::resultset
size	src/sqlite/row.cpp	/^            size_t cached_row::size() const$/;"	f	class:arg3::db::sqlite::cached_row
size	src/sqlite/row.cpp	/^            size_t row::size() const$/;"	f	class:arg3::db::sqlite::row
size_	libs/variant/src/variant.h	/^        size_t size_;$/;"	m	class:arg3::variant
size_	src/mysql/binding.h	/^                size_t size_;$/;"	m	class:arg3::db::mysql::binding
size_	src/mysql/row.h	/^                size_t size_;$/;"	m	class:arg3::db::mysql::row
size_	src/mysql/row.h	/^                size_t size_;$/;"	m	class:arg3::db::mysql::stmt_row
size_	src/postgres/binding.h	/^                size_t size_;$/;"	m	class:arg3::db::postgres::binding
size_	src/postgres/row.h	/^                size_t size_;$/;"	m	class:arg3::db::postgres::row
size_	src/sqlite/row.h	/^                size_t size_;$/;"	m	class:arg3::db::sqlite::row
skip	libs/variant/tests/vendor/bandit/bandit/options.h	/^      const char* skip() const$/;"	f	struct:bandit::detail::options
skip	tests/vendor/bandit/bandit/options.h	/^      const char* skip() const$/;"	f	struct:bandit::detail::options
skip_pattern_	libs/variant/tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    std::string skip_pattern_;$/;"	m	struct:bandit::detail::bandit_run_policy
skip_pattern_	tests/vendor/bandit/bandit/run_policies/bandit_run_policy.h	/^    std::string skip_pattern_;$/;"	m	struct:bandit::detail::bandit_run_policy
skip_policy	libs/variant/tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^  struct skip_policy$/;"	s	namespace:bandit
skip_policy	tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^  struct skip_policy$/;"	s	namespace:bandit
skip_policy_ptr	libs/variant/tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^  typedef std::unique_ptr<skip_policy> skip_policy_ptr;$/;"	t	namespace:bandit
skip_policy_ptr	tests/vendor/bandit/bandit/skip_policies/skip_policy.h	/^  typedef std::unique_ptr<skip_policy> skip_policy_ptr;$/;"	t	namespace:bandit
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^namespace snowhouse {$/;"	n	file:
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression_fwd.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanorequaltoconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanorequaltoconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/fluent.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^namespace snowhouse$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/invalidexpressionexception.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^namespace snowhouse {$/;"	n
snowhouse	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^namespace snowhouse$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/stringize_tests.cpp	/^namespace snowhouse {$/;"	n	file:
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assert.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/containsconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/endswithconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalsconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalscontainerconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/equalswithdeltaconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/andexpression.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/expression_fwd.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/notexpression.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/expressions/orexpression.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/fulfillsconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/haslengthconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/isgreaterthanconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/islessthanconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/constraints/startswithconstraint.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintadapter.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/expressionbuilder.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/fluent.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/andoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/alloperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atleastoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/atmostoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionconstraintevaluator.h	/^namespace snowhouse$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/collectionoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/exactlyoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/collections/noneoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/constraintoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/notoperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/operators/oroperator.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^namespace snowhouse {$/;"	n
snowhouse	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringizers.h	/^namespace snowhouse$/;"	n
snowhouse_adapter	libs/variant/tests/vendor/bandit/bandit/adapters/snowhouse.h	/^  struct snowhouse_adapter : public assertion_adapter$/;"	s	namespace:bandit::adapters
snowhouse_adapter	tests/vendor/bandit/bandit/adapters/snowhouse.h	/^  struct snowhouse_adapter : public assertion_adapter$/;"	s	namespace:bandit::adapters
sound	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    sounds sound()$/;"	f	struct:fuzzbox::fuzzbox
sound	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    sounds sound()$/;"	f	struct:fuzzbox::guitar
sound	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    sounds sound()$/;"	f	struct:fuzzbox::fuzzbox
sound	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    sounds sound()$/;"	f	struct:fuzzbox::guitar
sound_	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    sounds sound_;$/;"	m	struct:fuzzbox::fuzzbox	file:
sound_	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^    sounds sound_;$/;"	m	struct:fuzzbox::fuzzbox	file:
sounds	libs/variant/tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  } sounds;$/;"	t	namespace:fuzzbox	typeref:enum:fuzzbox::__anon5	file:
sounds	tests/vendor/bandit/specs/fuzzbox.spec.cpp	/^  } sounds;$/;"	t	namespace:fuzzbox	typeref:enum:fuzzbox::__anon12	file:
spec_registrar	libs/variant/tests/vendor/bandit/bandit/registration/registrar.h	/^      spec_registrar( bandit::detail::voidfunc_t func)$/;"	f	struct:bandit::detail::spec_registrar
spec_registrar	libs/variant/tests/vendor/bandit/bandit/registration/registrar.h	/^    struct spec_registrar$/;"	s	namespace:bandit::detail
spec_registrar	tests/vendor/bandit/bandit/registration/registrar.h	/^      spec_registrar( bandit::detail::voidfunc_t func)$/;"	f	struct:bandit::detail::spec_registrar
spec_registrar	tests/vendor/bandit/bandit/registration/registrar.h	/^    struct spec_registrar$/;"	s	namespace:bandit::detail
spec_registry	libs/variant/tests/vendor/bandit/bandit/registration/spec_registry.h	/^    typedef std::list<voidfunc_t> spec_registry;$/;"	t	namespace:bandit::detail
spec_registry	tests/vendor/bandit/bandit/registration/spec_registry.h	/^    typedef std::list<voidfunc_t> spec_registry;$/;"	t	namespace:bandit::detail
spec_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    spec_reporter(const failure_formatter& failure_formatter, const detail::colorizer& colorizer)$/;"	f	struct:bandit::detail::spec_reporter
spec_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    spec_reporter(std::ostream& stm, const failure_formatter& failure_formatter, $/;"	f	struct:bandit::detail::spec_reporter
spec_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^  struct spec_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
spec_reporter	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    spec_reporter(const failure_formatter& failure_formatter, const detail::colorizer& colorizer)$/;"	f	struct:bandit::detail::spec_reporter
spec_reporter	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    spec_reporter(std::ostream& stm, const failure_formatter& failure_formatter, $/;"	f	struct:bandit::detail::spec_reporter
spec_reporter	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^  struct spec_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
specs	libs/variant/tests/vendor/bandit/bandit/registration/spec_registry.h	/^    inline detail::spec_registry& specs()$/;"	f	namespace:bandit::detail
specs	libs/variant/tests/vendor/bandit/specs/fakes/logging_fake.h	/^namespace bandit { namespace specs {$/;"	n	namespace:bandit
specs	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^namespace bandit { namespace specs { namespace util {$/;"	n	namespace:bandit
specs	tests/vendor/bandit/bandit/registration/spec_registry.h	/^    inline detail::spec_registry& specs()$/;"	f	namespace:bandit::detail
specs	tests/vendor/bandit/specs/fakes/logging_fake.h	/^namespace bandit { namespace specs {$/;"	n	namespace:bandit
specs	tests/vendor/bandit/specs/util/argv_helper.h	/^namespace bandit { namespace specs { namespace util {$/;"	n	namespace:bandit
specs_failed_	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    int specs_failed_;$/;"	m	struct:bandit::detail::progress_reporter
specs_failed_	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    int specs_failed_;$/;"	m	struct:bandit::detail::test_run_summary
specs_failed_	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    int specs_failed_;$/;"	m	struct:bandit::detail::progress_reporter
specs_failed_	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    int specs_failed_;$/;"	m	struct:bandit::detail::test_run_summary
specs_run_	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    int specs_run_;$/;"	m	struct:bandit::detail::progress_reporter
specs_run_	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    int specs_run_;$/;"	m	struct:bandit::detail::test_run_summary
specs_run_	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    int specs_run_;$/;"	m	struct:bandit::detail::progress_reporter
specs_run_	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    int specs_run_;$/;"	m	struct:bandit::detail::test_run_summary
specs_skipped_	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    int specs_skipped_;$/;"	m	struct:bandit::detail::progress_reporter
specs_skipped_	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    int specs_skipped_;$/;"	m	struct:bandit::detail::test_run_summary
specs_skipped_	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    int specs_skipped_;$/;"	m	struct:bandit::detail::progress_reporter
specs_skipped_	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    int specs_skipped_;$/;"	m	struct:bandit::detail::test_run_summary
specs_succeeded_	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    int specs_succeeded_;$/;"	m	struct:bandit::detail::progress_reporter
specs_succeeded_	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    int specs_succeeded_;$/;"	m	struct:bandit::detail::test_run_summary
specs_succeeded_	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    int specs_succeeded_;$/;"	m	struct:bandit::detail::progress_reporter
specs_succeeded_	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    int specs_succeeded_;$/;"	m	struct:bandit::detail::test_run_summary
sql_	src/postgres/statement.h	/^                std::string sql_;$/;"	m	class:arg3::db::postgres::statement
sql_blob	src/sql_value.h	/^        typedef arg3::binary sql_blob;$/;"	t	namespace:arg3::db
sql_null	html/sql_value_h/index.html	/^<h3><a name="sql_null">sql_null<\/a><\/h3>$/;"	a
sql_null	src/sql_value.cpp	/^        const nullptr_t sql_null = nullptr;$/;"	m	namespace:arg3::db	file:
sql_null_type	src/sql_value.h	/^        typedef std::nullptr_t sql_null_type;$/;"	t	namespace:arg3::db
sql_time	src/sql_value.cpp	/^        sql_time::sql_time() : value_(0), format_(TIMESTAMP)$/;"	f	class:arg3::db::sql_time
sql_time	src/sql_value.cpp	/^        sql_time::sql_time(const sql_time &other) : value_(other.value_), format_(other.format_)$/;"	f	class:arg3::db::sql_time
sql_time	src/sql_value.cpp	/^        sql_time::sql_time(sql_time &&other) : value_(other.value_), format_(other.format_)$/;"	f	class:arg3::db::sql_time
sql_time	src/sql_value.cpp	/^        sql_time::sql_time(time_t value, formats format) : value_(value), format_(format)$/;"	f	class:arg3::db::sql_time
sql_time	src/sql_value.h	/^        class sql_time : public variant::complex$/;"	c	namespace:arg3::db
sql_type	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="sql_type">sql_type<\/a><\/h3>$/;"	a
sql_type	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<h3><a name="sql_type">sql_type<\/a><\/h3>$/;"	a
sql_type	html/mysql_column_h/Classes/mysql_column/index.html	/^<h3><a name="sql_type">sql_type<\/a><\/h3>$/;"	a
sql_type	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<h3><a name="sql_type">sql_type<\/a><\/h3>$/;"	a
sql_type	src/mysql/binding.cpp	/^            int binding::sql_type(size_t index) const$/;"	f	class:arg3::db::mysql::binding
sql_type	src/mysql/column.cpp	/^            int column::sql_type() const$/;"	f	class:arg3::db::mysql::column
sql_type	src/mysql/column.cpp	/^            int stmt_column::sql_type() const$/;"	f	class:arg3::db::mysql::stmt_column
sql_type	src/postgres/binding.cpp	/^            int binding::sql_type(size_t index) const$/;"	f	class:arg3::db::postgres::binding
sql_type	src/postgres/column.cpp	/^            int column::sql_type() const$/;"	f	class:arg3::db::postgres::column
sql_type	src/sqlite/column.cpp	/^            int cached_column::sql_type() const$/;"	f	class:arg3::db::sqlite::cached_column
sql_type	src/sqlite/column.cpp	/^            int column::sql_type() const$/;"	f	class:arg3::db::sqlite::column
sql_value	html/sql_value_h/Classes/sql_value/index.html	/^<h1><a name="sql_value">sql_value<\/a><\/h1>$/;"	a
sql_value	src/sql_value.cpp	/^        sql_value::sql_value()$/;"	f	class:arg3::db::sql_value
sql_value	src/sql_value.cpp	/^        sql_value::sql_value(const sql_time &value) : variant(std::shared_ptr<complex>(new sql_time(value)))$/;"	f	class:arg3::db::sql_value
sql_value	src/sql_value.h	/^        class sql_value : public arg3::variant$/;"	c	namespace:arg3::db
sql_value.h	html/sql_value_h/index.html	/^<h1><a name="sql_value.h">sql_value.h<\/a><\/h1>$/;"	a
sqldb	html/sqldb_h/Classes/sqldb/index.html	/^<h1><a name="sqldb">sqldb<\/a><\/h1>$/;"	a
sqldb	src/sqldb.cpp	/^        sqldb::sqldb() : schema_factory_(this)$/;"	f	class:arg3::db::sqldb
sqldb	src/sqldb.cpp	/^        sqldb::sqldb(const uri &connectionInfo) : connectionInfo_(connectionInfo), schema_factory_(this)$/;"	f	class:arg3::db::sqldb
sqldb	src/sqldb.h	/^        class sqldb$/;"	c	namespace:arg3::db
sqldb.h	html/sqldb_h/index.html	/^<h1><a name="sqldb.h">sqldb.h<\/a><\/h1>$/;"	a
sqlite	src/sqlite/column.cpp	/^        namespace sqlite$/;"	n	namespace:arg3::db	file:
sqlite	src/sqlite/column.h	/^        namespace sqlite$/;"	n	namespace:arg3::db
sqlite	src/sqlite/db.cpp	/^        namespace sqlite$/;"	n	namespace:arg3::db	file:
sqlite	src/sqlite/db.h	/^        namespace sqlite$/;"	n	namespace:arg3::db
sqlite	src/sqlite/resultset.cpp	/^        namespace sqlite$/;"	n	namespace:arg3::db	file:
sqlite	src/sqlite/resultset.h	/^        namespace sqlite$/;"	n	namespace:arg3::db
sqlite	src/sqlite/row.cpp	/^        namespace sqlite$/;"	n	namespace:arg3::db	file:
sqlite	src/sqlite/row.h	/^        namespace sqlite$/;"	n	namespace:arg3::db
sqlite	src/sqlite/statement.cpp	/^        namespace sqlite$/;"	n	namespace:arg3::db	file:
sqlite	src/sqlite/statement.h	/^        namespace sqlite$/;"	n	namespace:arg3::db
sqlite3_cached_column	html/sqlite3_column_h/Classes/sqlite3_cached_column/index.html	/^<h1><a name="sqlite3_cached_column">sqlite3_cached_column<\/a><\/h1>$/;"	a
sqlite3_cached_resultset	html/sqlite3_resultset_h/Classes/sqlite3_cached_resultset/index.html	/^<h1><a name="sqlite3_cached_resultset">sqlite3_cached_resultset<\/a><\/h1>$/;"	a
sqlite3_cached_row	html/sqlite3_row_h/Classes/sqlite3_cached_row/index.html	/^<h1><a name="sqlite3_cached_row">sqlite3_cached_row<\/a><\/h1>$/;"	a
sqlite3_column	html/sqlite3_column_h/Classes/sqlite3_column/index.html	/^<h1><a name="sqlite3_column">sqlite3_column<\/a><\/h1>$/;"	a
sqlite3_column.h	html/sqlite3_column_h/index.html	/^<h1><a name="sqlite3_column.h">sqlite3_column.h<\/a><\/h1>$/;"	a
sqlite3_db	html/sqlite3_db_h/Classes/sqlite3_db/index.html	/^<h1><a name="sqlite3_db">sqlite3_db<\/a><\/h1>$/;"	a
sqlite3_db.h	html/sqlite3_db_h/index.html	/^<h1><a name="sqlite3_db.h">sqlite3_db.h<\/a><\/h1>$/;"	a
sqlite3_resultset	html/sqlite3_resultset_h/Classes/sqlite3_resultset/index.html	/^<h1><a name="sqlite3_resultset">sqlite3_resultset<\/a><\/h1>$/;"	a
sqlite3_resultset.h	html/sqlite3_resultset_h/index.html	/^<h1><a name="sqlite3_resultset.h">sqlite3_resultset.h<\/a><\/h1>$/;"	a
sqlite3_row	html/sqlite3_row_h/Classes/sqlite3_row/index.html	/^<h1><a name="sqlite3_row">sqlite3_row<\/a><\/h1>$/;"	a
sqlite3_row.h	html/sqlite3_row_h/index.html	/^<h1><a name="sqlite3_row.h">sqlite3_row.h<\/a><\/h1>$/;"	a
sqlite3_statement	html/sqlite3_statement_h/Classes/sqlite3_statement/index.html	/^<h1><a name="sqlite3_statement">sqlite3_statement<\/a><\/h1>$/;"	a
sqlite3_statement.h	html/sqlite3_statement_h/index.html	/^<h1><a name="sqlite3_statement.h">sqlite3_statement.h<\/a><\/h1>$/;"	a
src Directory Reference	html/latex/dir_68267d1309a1af8e8297ef4c3efbcdba.tex	/^\\hypertarget{dir_68267d1309a1af8e8297ef4c3efbcdba}{}\\section{src Directory Reference}$/;"	s
src Directory Reference	latex/dir_68267d1309a1af8e8297ef4c3efbcdba.tex	/^\\hypertarget{dir_68267d1309a1af8e8297ef4c3efbcdba}{}\\section{src Directory Reference}$/;"	s
src alloc h File Reference	html/latex/alloc_8h.tex	/^\\hypertarget{alloc_8h}{}\\section{src\/alloc.h File Reference}$/;"	s
src alloc h File Reference	latex/alloc_8h.tex	/^\\hypertarget{alloc_8h}{}\\section{src\/alloc.h File Reference}$/;"	s
src base _ record h File Reference	html/latex/base__record_8h.tex	/^\\hypertarget{base__record_8h}{}\\section{src\/base\\+\\_\\+record.h File Reference}$/;"	s
src base _ record h File Reference	latex/base__record_8h.tex	/^\\hypertarget{base__record_8h}{}\\section{src\/base\\+\\_\\+record.h File Reference}$/;"	s
src bindable h File Reference	html/latex/bindable_8h.tex	/^\\hypertarget{bindable_8h}{}\\section{src\/bindable.h File Reference}$/;"	s
src bindable h File Reference	latex/bindable_8h.tex	/^\\hypertarget{bindable_8h}{}\\section{src\/bindable.h File Reference}$/;"	s
src column h File Reference	html/latex/column_8h.tex	/^\\hypertarget{column_8h}{}\\section{src\/column.h File Reference}$/;"	s
src column h File Reference	latex/column_8h.tex	/^\\hypertarget{column_8h}{}\\section{src\/column.h File Reference}$/;"	s
src exception h File Reference	html/latex/exception_8h.tex	/^\\hypertarget{exception_8h}{}\\section{src\/exception.h File Reference}$/;"	s
src exception h File Reference	latex/exception_8h.tex	/^\\hypertarget{exception_8h}{}\\section{src\/exception.h File Reference}$/;"	s
src join _ clause h File Reference	html/latex/join__clause_8h.tex	/^\\hypertarget{join__clause_8h}{}\\section{src\/join\\+\\_\\+clause.h File Reference}$/;"	s
src join _ clause h File Reference	latex/join__clause_8h.tex	/^\\hypertarget{join__clause_8h}{}\\section{src\/join\\+\\_\\+clause.h File Reference}$/;"	s
src log h File Reference	html/latex/log_8h.tex	/^\\hypertarget{log_8h}{}\\section{src\/log.h File Reference}$/;"	s
src log h File Reference	latex/log_8h.tex	/^\\hypertarget{log_8h}{}\\section{src\/log.h File Reference}$/;"	s
src modify _ query h File Reference	html/latex/modify__query_8h.tex	/^\\hypertarget{modify__query_8h}{}\\section{src\/modify\\+\\_\\+query.h File Reference}$/;"	s
src modify _ query h File Reference	latex/modify__query_8h.tex	/^\\hypertarget{modify__query_8h}{}\\section{src\/modify\\+\\_\\+query.h File Reference}$/;"	s
src mysql Directory Reference	latex/dir_60069a2593ee8ad0d9786f72a1d3874d.tex	/^\\hypertarget{dir_60069a2593ee8ad0d9786f72a1d3874d}{}\\section{src\/mysql Directory Reference}$/;"	s
src mysql _ binding h File Reference	html/latex/mysql__binding_8h.tex	/^\\hypertarget{mysql__binding_8h}{}\\section{src\/mysql\\+\\_\\+binding.h File Reference}$/;"	s
src mysql _ binding h File Reference	latex/mysql__binding_8h.tex	/^\\hypertarget{mysql__binding_8h}{}\\section{src\/mysql\\+\\_\\+binding.h File Reference}$/;"	s
src mysql _ column h File Reference	html/latex/mysql__column_8h.tex	/^\\hypertarget{mysql__column_8h}{}\\section{src\/mysql\\+\\_\\+column.h File Reference}$/;"	s
src mysql _ column h File Reference	latex/mysql__column_8h.tex	/^\\hypertarget{mysql__column_8h}{}\\section{src\/mysql\\+\\_\\+column.h File Reference}$/;"	s
src mysql _ db h File Reference	html/latex/mysql__db_8h.tex	/^\\hypertarget{mysql__db_8h}{}\\section{src\/mysql\\+\\_\\+db.h File Reference}$/;"	s
src mysql _ db h File Reference	latex/mysql__db_8h.tex	/^\\hypertarget{mysql__db_8h}{}\\section{src\/mysql\\+\\_\\+db.h File Reference}$/;"	s
src mysql _ resultset h File Reference	html/latex/mysql__resultset_8h.tex	/^\\hypertarget{mysql__resultset_8h}{}\\section{src\/mysql\\+\\_\\+resultset.h File Reference}$/;"	s
src mysql _ resultset h File Reference	latex/mysql__resultset_8h.tex	/^\\hypertarget{mysql__resultset_8h}{}\\section{src\/mysql\\+\\_\\+resultset.h File Reference}$/;"	s
src mysql _ row h File Reference	html/latex/mysql__row_8h.tex	/^\\hypertarget{mysql__row_8h}{}\\section{src\/mysql\\+\\_\\+row.h File Reference}$/;"	s
src mysql _ row h File Reference	latex/mysql__row_8h.tex	/^\\hypertarget{mysql__row_8h}{}\\section{src\/mysql\\+\\_\\+row.h File Reference}$/;"	s
src mysql _ statement h File Reference	html/latex/mysql__statement_8h.tex	/^\\hypertarget{mysql__statement_8h}{}\\section{src\/mysql\\+\\_\\+statement.h File Reference}$/;"	s
src mysql _ statement h File Reference	latex/mysql__statement_8h.tex	/^\\hypertarget{mysql__statement_8h}{}\\section{src\/mysql\\+\\_\\+statement.h File Reference}$/;"	s
src postgres Directory Reference	latex/dir_c2fdef15bfa3f58fa044504e43d14c93.tex	/^\\hypertarget{dir_c2fdef15bfa3f58fa044504e43d14c93}{}\\section{src\/postgres Directory Reference}$/;"	s
src postgres _ binding h File Reference	html/latex/postgres__binding_8h.tex	/^\\hypertarget{postgres__binding_8h}{}\\section{src\/postgres\\+\\_\\+binding.h File Reference}$/;"	s
src postgres _ binding h File Reference	latex/postgres__binding_8h.tex	/^\\hypertarget{postgres__binding_8h}{}\\section{src\/postgres\\+\\_\\+binding.h File Reference}$/;"	s
src postgres _ column h File Reference	html/latex/postgres__column_8h.tex	/^\\hypertarget{postgres__column_8h}{}\\section{src\/postgres\\+\\_\\+column.h File Reference}$/;"	s
src postgres _ column h File Reference	latex/postgres__column_8h.tex	/^\\hypertarget{postgres__column_8h}{}\\section{src\/postgres\\+\\_\\+column.h File Reference}$/;"	s
src postgres _ db h File Reference	html/latex/postgres__db_8h.tex	/^\\hypertarget{postgres__db_8h}{}\\section{src\/postgres\\+\\_\\+db.h File Reference}$/;"	s
src postgres _ db h File Reference	latex/postgres__db_8h.tex	/^\\hypertarget{postgres__db_8h}{}\\section{src\/postgres\\+\\_\\+db.h File Reference}$/;"	s
src postgres _ resultset h File Reference	html/latex/postgres__resultset_8h.tex	/^\\hypertarget{postgres__resultset_8h}{}\\section{src\/postgres\\+\\_\\+resultset.h File Reference}$/;"	s
src postgres _ resultset h File Reference	latex/postgres__resultset_8h.tex	/^\\hypertarget{postgres__resultset_8h}{}\\section{src\/postgres\\+\\_\\+resultset.h File Reference}$/;"	s
src postgres _ row h File Reference	html/latex/postgres__row_8h.tex	/^\\hypertarget{postgres__row_8h}{}\\section{src\/postgres\\+\\_\\+row.h File Reference}$/;"	s
src postgres _ row h File Reference	latex/postgres__row_8h.tex	/^\\hypertarget{postgres__row_8h}{}\\section{src\/postgres\\+\\_\\+row.h File Reference}$/;"	s
src postgres _ statement h File Reference	html/latex/postgres__statement_8h.tex	/^\\hypertarget{postgres__statement_8h}{}\\section{src\/postgres\\+\\_\\+statement.h File Reference}$/;"	s
src postgres _ statement h File Reference	latex/postgres__statement_8h.tex	/^\\hypertarget{postgres__statement_8h}{}\\section{src\/postgres\\+\\_\\+statement.h File Reference}$/;"	s
src query h File Reference	html/latex/query_8h.tex	/^\\hypertarget{query_8h}{}\\section{src\/query.h File Reference}$/;"	s
src query h File Reference	latex/query_8h.tex	/^\\hypertarget{query_8h}{}\\section{src\/query.h File Reference}$/;"	s
src record h File Reference	latex/record_8h.tex	/^\\hypertarget{record_8h}{}\\section{src\/record.h File Reference}$/;"	s
src resultset h File Reference	html/latex/resultset_8h.tex	/^\\hypertarget{resultset_8h}{}\\section{src\/resultset.h File Reference}$/;"	s
src resultset h File Reference	latex/resultset_8h.tex	/^\\hypertarget{resultset_8h}{}\\section{src\/resultset.h File Reference}$/;"	s
src row h File Reference	html/latex/row_8h.tex	/^\\hypertarget{row_8h}{}\\section{src\/row.h File Reference}$/;"	s
src row h File Reference	latex/row_8h.tex	/^\\hypertarget{row_8h}{}\\section{src\/row.h File Reference}$/;"	s
src schema _ factory h File Reference	html/latex/schema__factory_8h.tex	/^\\hypertarget{schema__factory_8h}{}\\section{src\/schema\\+\\_\\+factory.h File Reference}$/;"	s
src schema _ factory h File Reference	latex/schema__factory_8h.tex	/^\\hypertarget{schema__factory_8h}{}\\section{src\/schema\\+\\_\\+factory.h File Reference}$/;"	s
src schema h File Reference	html/latex/schema_8h.tex	/^\\hypertarget{schema_8h}{}\\section{src\/schema.h File Reference}$/;"	s
src schema h File Reference	latex/schema_8h.tex	/^\\hypertarget{schema_8h}{}\\section{src\/schema.h File Reference}$/;"	s
src select _ query h File Reference	html/latex/select__query_8h.tex	/^\\hypertarget{select__query_8h}{}\\section{src\/select\\+\\_\\+query.h File Reference}$/;"	s
src select _ query h File Reference	latex/select__query_8h.tex	/^\\hypertarget{select__query_8h}{}\\section{src\/select\\+\\_\\+query.h File Reference}$/;"	s
src sql _ value h File Reference	html/latex/sql__value_8h.tex	/^\\hypertarget{sql__value_8h}{}\\section{src\/sql\\+\\_\\+value.h File Reference}$/;"	s
src sql _ value h File Reference	latex/sql__value_8h.tex	/^\\hypertarget{sql__value_8h}{}\\section{src\/sql\\+\\_\\+value.h File Reference}$/;"	s
src sqldb h File Reference	html/latex/sqldb_8h.tex	/^\\hypertarget{sqldb_8h}{}\\section{src\/sqldb.h File Reference}$/;"	s
src sqldb h File Reference	latex/sqldb_8h.tex	/^\\hypertarget{sqldb_8h}{}\\section{src\/sqldb.h File Reference}$/;"	s
src sqlite Directory Reference	latex/dir_f4168869f34973b52812f2c13b570376.tex	/^\\hypertarget{dir_f4168869f34973b52812f2c13b570376}{}\\section{src\/sqlite Directory Reference}$/;"	s
src sqlite3 _ column h File Reference	html/latex/sqlite3__column_8h.tex	/^\\hypertarget{sqlite3__column_8h}{}\\section{src\/sqlite3\\+\\_\\+column.h File Reference}$/;"	s
src sqlite3 _ column h File Reference	latex/sqlite3__column_8h.tex	/^\\hypertarget{sqlite3__column_8h}{}\\section{src\/sqlite3\\+\\_\\+column.h File Reference}$/;"	s
src sqlite3 _ db h File Reference	html/latex/sqlite3__db_8h.tex	/^\\hypertarget{sqlite3__db_8h}{}\\section{src\/sqlite3\\+\\_\\+db.h File Reference}$/;"	s
src sqlite3 _ db h File Reference	latex/sqlite3__db_8h.tex	/^\\hypertarget{sqlite3__db_8h}{}\\section{src\/sqlite3\\+\\_\\+db.h File Reference}$/;"	s
src sqlite3 _ resultset h File Reference	html/latex/sqlite3__resultset_8h.tex	/^\\hypertarget{sqlite3__resultset_8h}{}\\section{src\/sqlite3\\+\\_\\+resultset.h File Reference}$/;"	s
src sqlite3 _ resultset h File Reference	latex/sqlite3__resultset_8h.tex	/^\\hypertarget{sqlite3__resultset_8h}{}\\section{src\/sqlite3\\+\\_\\+resultset.h File Reference}$/;"	s
src sqlite3 _ row h File Reference	html/latex/sqlite3__row_8h.tex	/^\\hypertarget{sqlite3__row_8h}{}\\section{src\/sqlite3\\+\\_\\+row.h File Reference}$/;"	s
src sqlite3 _ row h File Reference	latex/sqlite3__row_8h.tex	/^\\hypertarget{sqlite3__row_8h}{}\\section{src\/sqlite3\\+\\_\\+row.h File Reference}$/;"	s
src sqlite3 _ statement h File Reference	html/latex/sqlite3__statement_8h.tex	/^\\hypertarget{sqlite3__statement_8h}{}\\section{src\/sqlite3\\+\\_\\+statement.h File Reference}$/;"	s
src sqlite3 _ statement h File Reference	latex/sqlite3__statement_8h.tex	/^\\hypertarget{sqlite3__statement_8h}{}\\section{src\/sqlite3\\+\\_\\+statement.h File Reference}$/;"	s
src statement h File Reference	html/latex/statement_8h.tex	/^\\hypertarget{statement_8h}{}\\section{src\/statement.h File Reference}$/;"	s
src statement h File Reference	latex/statement_8h.tex	/^\\hypertarget{statement_8h}{}\\section{src\/statement.h File Reference}$/;"	s
src where _ clause h File Reference	html/latex/where__clause_8h.tex	/^\\hypertarget{where__clause_8h}{}\\section{src\/where\\+\\_\\+clause.h File Reference}$/;"	s
src where _ clause h File Reference	latex/where__clause_8h.tex	/^\\hypertarget{where__clause_8h}{}\\section{src\/where\\+\\_\\+clause.h File Reference}$/;"	s
statement	html/statement_h/Classes/statement/index.html	/^<h1><a name="statement">statement<\/a><\/h1>$/;"	a
statement	src/mysql/statement.cpp	/^            statement::statement(mysql::db *db) : db_(db), stmt_(nullptr)$/;"	f	class:arg3::db::mysql::statement
statement	src/mysql/statement.cpp	/^            statement::statement(statement &&other)$/;"	f	class:arg3::db::mysql::statement
statement	src/mysql/statement.h	/^            class statement : public arg3::db::statement$/;"	c	namespace:arg3::db::mysql
statement	src/postgres/statement.cpp	/^            statement::statement(postgres::db *db) : db_(db), stmt_(nullptr)$/;"	f	class:arg3::db::postgres::statement
statement	src/postgres/statement.cpp	/^            statement::statement(statement &&other)$/;"	f	class:arg3::db::postgres::statement
statement	src/postgres/statement.h	/^            class statement : public arg3::db::statement$/;"	c	namespace:arg3::db::postgres
statement	src/sqlite/statement.cpp	/^            statement::statement(sqlite::db *db) : db_(db), stmt_(nullptr)$/;"	f	class:arg3::db::sqlite::statement
statement	src/sqlite/statement.cpp	/^            statement::statement(statement &&other) : db_(other.db_), stmt_(other.stmt_)$/;"	f	class:arg3::db::sqlite::statement
statement	src/sqlite/statement.h	/^            class statement : public arg3::db::statement$/;"	c	namespace:arg3::db::sqlite
statement	src/statement.h	/^        class statement : public bindable$/;"	c	namespace:arg3::db
statement.h	html/statement_h/index.html	/^<h1><a name="statement.h">statement.h<\/a><\/h1>$/;"	a
statement_type	src/sqldb.h	/^            typedef statement statement_type;$/;"	t	class:arg3::db::sqldb
status_	src/mysql/resultset.h	/^                int status_;$/;"	m	class:arg3::db::mysql::stmt_resultset
status_	src/sqlite/resultset.h	/^                int status_;$/;"	m	class:arg3::db::sqlite::resultset
stdout_handle_	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^	HANDLE stdout_handle_;$/;"	m	struct:bandit::detail::colorizer
stdout_handle_	tests/vendor/bandit/bandit/reporters/colorizer.h	/^	HANDLE stdout_handle_;$/;"	m	struct:bandit::detail::colorizer
stm_	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    std::ostream& stm_;$/;"	m	struct:bandit::detail::dots_reporter
stm_	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	std::ostream &stm_;$/;"	m	struct:bandit::detail::info_reporter
stm_	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    std::ostream& stm_;$/;"	m	struct:bandit::detail::single_line_reporter
stm_	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    std::ostream& stm_;$/;"	m	struct:bandit::detail::spec_reporter
stm_	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    std::ostream& stm_;$/;"	m	struct:bandit::detail::xunit_reporter
stm_	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    std::ostream& stm_;$/;"	m	struct:bandit::detail::dots_reporter
stm_	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	std::ostream &stm_;$/;"	m	struct:bandit::detail::info_reporter
stm_	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    std::ostream& stm_;$/;"	m	struct:bandit::detail::single_line_reporter
stm_	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    std::ostream& stm_;$/;"	m	struct:bandit::detail::spec_reporter
stm_	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    std::ostream& stm_;$/;"	m	struct:bandit::detail::xunit_reporter
stmt_	src/mysql/resultset.h	/^                std::shared_ptr<MYSQL_STMT> stmt_;$/;"	m	class:arg3::db::mysql::stmt_resultset
stmt_	src/mysql/row.h	/^                std::shared_ptr<MYSQL_STMT> stmt_;$/;"	m	class:arg3::db::mysql::stmt_row
stmt_	src/mysql/statement.h	/^                std::shared_ptr<MYSQL_STMT> stmt_;$/;"	m	class:arg3::db::mysql::statement
stmt_	src/postgres/column.h	/^                std::shared_ptr<PGresult> stmt_;$/;"	m	class:arg3::db::postgres::column
stmt_	src/postgres/resultset.h	/^                std::shared_ptr<PGresult> stmt_;$/;"	m	class:arg3::db::postgres::resultset
stmt_	src/postgres/row.h	/^                std::shared_ptr<PGresult> stmt_;$/;"	m	class:arg3::db::postgres::row
stmt_	src/postgres/statement.h	/^                std::shared_ptr<PGresult> stmt_;$/;"	m	class:arg3::db::postgres::statement
stmt_	src/query.h	/^            std::shared_ptr<statement> stmt_;$/;"	m	class:arg3::db::query
stmt_	src/sqlite/column.h	/^                std::shared_ptr<sqlite3_stmt> stmt_;$/;"	m	class:arg3::db::sqlite::column
stmt_	src/sqlite/resultset.h	/^                std::shared_ptr<sqlite3_stmt> stmt_;$/;"	m	class:arg3::db::sqlite::resultset
stmt_	src/sqlite/row.h	/^                std::shared_ptr<sqlite3_stmt> stmt_;$/;"	m	class:arg3::db::sqlite::row
stmt_	src/sqlite/statement.h	/^                std::shared_ptr<sqlite3_stmt> stmt_;$/;"	m	class:arg3::db::sqlite::statement
stmt_column	src/mysql/column.cpp	/^            stmt_column::stmt_column(const string &name, const shared_ptr<mysql::binding> &bindings, size_t position)$/;"	f	class:arg3::db::mysql::stmt_column
stmt_column	src/mysql/column.cpp	/^            stmt_column::stmt_column(stmt_column &&other) : name_(std::move(other.name_)), value_(std::move(other.value_)), position_(other.position_)$/;"	f	class:arg3::db::mysql::stmt_column
stmt_column	src/mysql/column.h	/^            class stmt_column : public column_impl$/;"	c	namespace:arg3::db::mysql
stmt_delete	src/mysql/statement.cpp	/^                struct stmt_delete {$/;"	s	namespace:arg3::db::mysql::helper	file:
stmt_delete	src/sqlite/statement.h	/^                struct stmt_delete {$/;"	s	namespace:arg3::db::sqlite::helper
stmt_resultset	src/mysql/resultset.cpp	/^            stmt_resultset::stmt_resultset(mysql::db *db, const shared_ptr<MYSQL_STMT> &stmt)$/;"	f	class:arg3::db::mysql::stmt_resultset
stmt_resultset	src/mysql/resultset.cpp	/^            stmt_resultset::stmt_resultset(stmt_resultset &&other)$/;"	f	class:arg3::db::mysql::stmt_resultset
stmt_resultset	src/mysql/resultset.h	/^            class stmt_resultset : public resultset_impl$/;"	c	namespace:arg3::db::mysql
stmt_row	src/mysql/row.cpp	/^            stmt_row::stmt_row(mysql::db *db, const shared_ptr<MYSQL_STMT> &stmt, const shared_ptr<MYSQL_RES> &metadata,$/;"	f	class:arg3::db::mysql::stmt_row
stmt_row	src/mysql/row.cpp	/^            stmt_row::stmt_row(stmt_row &&other)$/;"	f	class:arg3::db::mysql::stmt_row
stmt_row	src/mysql/row.h	/^            class stmt_row : public row_impl$/;"	c	namespace:arg3::db::mysql
store	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    static void store(const ExceptionType& e)$/;"	f	class:snowhouse::ExceptionStorage
store	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    static void store(const ExceptionType& e)$/;"	f	class:snowhouse::ExceptionStorage
str_	libs/variant/src/variant.h	/^            std::string str_;$/;"	m	union:arg3::variant::__anon2
stream	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    Stream* stream;$/;"	m	struct:option::PrintUsageImplementation::StreamWriter
stream	tests/vendor/bandit/bandit/external/optionparser.h	/^    Stream* stream;$/;"	m	struct:option::PrintUsageImplementation::StreamWriter
streq	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool streq(const char* st1, const char* st2)$/;"	f	class:option::Parser
streq	tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool streq(const char* st1, const char* st2)$/;"	f	class:option::Parser
streqabbr	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool streqabbr(const char* st1, const char* st2, long long min)$/;"	f	class:option::Parser
streqabbr	tests/vendor/bandit/bandit/external/optionparser.h	/^  static bool streqabbr(const char* st1, const char* st2, long long min)$/;"	f	class:option::Parser
strip_newline	libs/variant/tests/vendor/bandit/specs/fakes/logging_fake.h	/^    std::string strip_newline(const char* val)$/;"	f	struct:bandit::specs::logging_fake
strip_newline	tests/vendor/bandit/specs/fakes/logging_fake.h	/^    std::string strip_newline(const char* val)$/;"	f	struct:bandit::specs::logging_fake
subdirs	html/dir_68267d1309a1af8e8297ef4c3efbcdba.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"><\/a>$/;"	a
subtractable_types_match	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        bool subtractable_types_match(const U& actualValue, const V& expectedValue) const$/;"	f	class:bandit::Matchers::BeCloseTo
subtractable_types_match	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        bool subtractable_types_match(const U& actualValue, const V& expectedValue) const$/;"	f	class:bandit::Matchers::BeCloseTo
summary	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	void summary()$/;"	f	struct:bandit::detail::info_reporter
summary	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	void summary()$/;"	f	struct:bandit::detail::info_reporter
sz_	libs/variant/src/binary.h	/^        size_t sz_;$/;"	m	class:arg3::binary
t	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    typedef ConstraintList<typename L1::HeadType, typename type_concat<typename L1::TailType, L2>::t> t;$/;"	t	struct:snowhouse::type_concat
t	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  template <typename L2> struct type_concat<Nil, L2> { typedef L2 t; };$/;"	t	struct:snowhouse::type_concat
t	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^    typedef ConstraintList<typename L1::HeadType, typename type_concat<typename L1::TailType, L2>::t> t;$/;"	t	struct:snowhouse::type_concat
t	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  template <typename L2> struct type_concat<Nil, L2> { typedef L2 t; };$/;"	t	struct:snowhouse::type_concat
table	src/update_query.cpp	/^        string update_query::table() const$/;"	f	class:arg3::db::update_query
table	src/update_query.cpp	/^        update_query &update_query::table(const string &value)$/;"	f	class:arg3::db::update_query
tableName_	src/delete_query.h	/^            std::string tableName_;$/;"	m	class:arg3::db::delete_query
tableName_	src/insert_query.h	/^            std::string tableName_;$/;"	m	class:arg3::db::insert_query
tableName_	src/join_clause.h	/^            std::string tableName_;$/;"	m	class:arg3::db::join_clause
tableName_	src/schema.h	/^            std::string tableName_;$/;"	m	class:arg3::db::schema
tableName_	src/select_query.h	/^            std::string tableName_;$/;"	m	class:arg3::db::select_query
tableName_	src/update_query.h	/^            std::string tableName_;$/;"	m	class:arg3::db::update_query
table_name	src/schema.cpp	/^        string schema::table_name() const$/;"	f	class:arg3::db::schema
table_name	src/select_query.cpp	/^        select_query &select_query::table_name(const string &value)$/;"	f	class:arg3::db::select_query
table_name	src/select_query.cpp	/^        string select_query::table_name() const$/;"	f	class:arg3::db::select_query
table_name()	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="table_name()">table_name()<\/a><\/h3>$/;"	a
table_name(conststd::string)	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="table_name(conststd::string)">table_name(const std :: string &)<\/a><\/h3>$/;"	a
tablestart	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    const Descriptor* tablestart; \/\/!< The 1st descriptor of the current table.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
tablestart	tests/vendor/bandit/bandit/external/optionparser.h	/^    const Descriptor* tablestart; \/\/!< The 1st descriptor of the current table.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
tag	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct tag {};$/;"	s	namespace:snowhouse::detail
tag	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static Option* tag(Option* ptr)$/;"	f	class:option::Option
tag	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    struct tag {};$/;"	s	namespace:snowhouse::detail
tag	tests/vendor/bandit/bandit/external/optionparser.h	/^  static Option* tag(Option* ptr)$/;"	f	class:option::Option
tail	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int tail; \/\/!< @brief index for next read - 1 (i.e. increment tail BEFORE read)$/;"	m	class:option::PrintUsageImplementation::LineWrapper
tail	tests/vendor/bandit/bandit/external/optionparser.h	/^    int tail; \/\/!< @brief index for next read - 1 (i.e. increment tail BEFORE read)$/;"	m	class:option::PrintUsageImplementation::LineWrapper
target_line_in_block	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int target_line_in_block; \/\/!< Line index of the parts we should return to the user on this iteration.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
target_line_in_block	tests/vendor/bandit/bandit/external/optionparser.h	/^    int target_line_in_block; \/\/!< Line index of the parts we should return to the user on this iteration.$/;"	m	class:option::PrintUsageImplementation::LinePartIterator
teardown	tests/db.test.cpp	/^void test_mysql_db::teardown()$/;"	f	class:test_mysql_db
teardown	tests/db.test.cpp	/^void test_postgres_db::teardown()$/;"	f	class:test_postgres_db
teardown	tests/db.test.cpp	/^void test_sqlite3_db::teardown()$/;"	f	class:test_sqlite3_db
teardown_testdb	tests/db.test.cpp	/^void teardown_testdb()$/;"	f
template$ $class Value Type class Non Const class Row Type$ $ class arg3 db row _ iterator$ $ Value Type Non Const Row Type $ $	html/latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsubsection*{template$<$class Value\\+Type, class Non\\+Const, class Row\\+Type$>$\\\\*$/;"	b
template$ $class Value Type class Non Const class Row Type$ $ class arg3 db row _ iterator$ $ Value Type Non Const Row Type $ $	latex/classarg3_1_1db_1_1row__iterator.tex	/^\\subsubsection*{template$<$class Value\\+Type, class Non\\+Const, class Row\\+Type$>$\\\\*$/;"	b
template$ $typename T$ $ class arg3 db base _ record$ $ T $ $	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection*{template$<$typename T$>$\\\\*$/;"	b
template$ $typename T$ $ class arg3 db base _ record$ $ T $ $	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection*{template$<$typename T$>$\\\\*$/;"	b
template$ $typename T$ $ class arg3 db record$ $ T $ $	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection*{template$<$typename T$>$\\\\*$/;"	b
template$ $typename Value Type typename Non Const$ $ class arg3 db resultset _ iterator$ $ Value Type Non Const $ $	html/latex/classarg3_1_1db_1_1resultset__iterator.tex	/^\\subsubsection*{template$<$typename Value\\+Type, typename Non\\+Const$>$\\\\*$/;"	b
template$ $typename Value Type typename Non Const$ $ class arg3 db resultset _ iterator$ $ Value Type Non Const $ $	latex/classarg3_1_1db_1_1resultset__iterator.tex	/^\\subsubsection*{template$<$typename Value\\+Type, typename Non\\+Const$>$\\\\*$/;"	b
test_db	tests/db.test.h	/^class test_db$/;"	c
test_last_log	tests/log.test.cpp	/^bool test_last_log(log::level level, const char *test)$/;"	f
test_move_column	tests/mysql_column.test.cpp	/^void test_move_column(std::function<shared_ptr<column_impl>(size_t, size_t)> funk)$/;"	f
test_move_resultset	tests/mysql_resultset.test.cpp	/^void test_move_resultset(std::function<shared_ptr<resultset_impl>()> funk)$/;"	f
test_move_row	tests/mysql_row.test.cpp	/^void test_move_row(std::function<shared_ptr<row_impl>(size_t)> funk)$/;"	f
test_mysql_db	tests/db.test.h	/^    test_mysql_db() : db(arg3::db::uri(get_env_uri("MYSQL_URI", "mysql:\/\/test")))$/;"	f	class:test_mysql_db
test_mysql_db	tests/db.test.h	/^class test_mysql_db : public arg3::db::mysql::db, public test_db$/;"	c
test_postgres_db	tests/db.test.h	/^    test_postgres_db() : db(arg3::db::uri(get_env_uri("POSTGRES_URI", "postgres:\/\/localhost\/test")))$/;"	f	class:test_postgres_db
test_postgres_db	tests/db.test.h	/^class test_postgres_db : public arg3::db::postgres::db, public test_db$/;"	c
test_resultset_row	tests/mysql_resultset.test.cpp	/^void test_resultset_row(std::function<shared_ptr<resultset_impl>()> funk)$/;"	f
test_row_column	tests/mysql_row.test.cpp	/^void test_row_column(std::function<shared_ptr<row_impl>(size_t)> funk)$/;"	f
test_run_complete	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void test_run_complete() $/;"	f	struct:bandit::detail::dots_reporter
test_run_complete	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	void test_run_complete()$/;"	f	struct:bandit::detail::info_reporter
test_run_complete	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void test_run_complete()$/;"	f	struct:bandit::detail::progress_reporter
test_run_complete	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void test_run_complete() $/;"	f	struct:bandit::detail::single_line_reporter
test_run_complete	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    void test_run_complete() $/;"	f	struct:bandit::detail::spec_reporter
test_run_complete	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void test_run_complete()$/;"	f	struct:bandit::detail::xunit_reporter
test_run_complete	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void test_run_complete()$/;"	f	struct:bandit::fakes::fake_reporter
test_run_complete	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void test_run_complete() $/;"	f	struct:bandit::detail::dots_reporter
test_run_complete	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	void test_run_complete()$/;"	f	struct:bandit::detail::info_reporter
test_run_complete	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void test_run_complete()$/;"	f	struct:bandit::detail::progress_reporter
test_run_complete	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void test_run_complete() $/;"	f	struct:bandit::detail::single_line_reporter
test_run_complete	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    void test_run_complete() $/;"	f	struct:bandit::detail::spec_reporter
test_run_complete	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    void test_run_complete()$/;"	f	struct:bandit::detail::xunit_reporter
test_run_complete	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void test_run_complete()$/;"	f	struct:bandit::fakes::fake_reporter
test_run_error	libs/variant/tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void test_run_error(const char* desc, const struct test_run_error& err)$/;"	f	struct:bandit::detail::dots_reporter
test_run_error	libs/variant/tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	void test_run_error(const char *desc, const struct test_run_error &err)$/;"	f	struct:bandit::detail::info_reporter
test_run_error	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void test_run_error(const char*, const struct test_run_error&)$/;"	f	struct:bandit::detail::progress_reporter
test_run_error	libs/variant/tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void test_run_error(const char* desc, const struct test_run_error& err)$/;"	f	struct:bandit::detail::single_line_reporter
test_run_error	libs/variant/tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    void test_run_error(const char* desc, const struct test_run_error& err)$/;"	f	struct:bandit::detail::spec_reporter
test_run_error	libs/variant/tests/vendor/bandit/bandit/test_run_error.h	/^    test_run_error(const char* message) : std::runtime_error(message) {}$/;"	f	struct:bandit::detail::test_run_error
test_run_error	libs/variant/tests/vendor/bandit/bandit/test_run_error.h	/^  struct test_run_error : public std::runtime_error$/;"	s	namespace:bandit::detail
test_run_error	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void test_run_error(const char* desc, const struct bandit::detail::test_run_error& err)$/;"	f	struct:bandit::fakes::fake_reporter
test_run_error	tests/vendor/bandit/bandit/reporters/dots_reporter.h	/^    void test_run_error(const char* desc, const struct test_run_error& err)$/;"	f	struct:bandit::detail::dots_reporter
test_run_error	tests/vendor/bandit/bandit/reporters/info_reporter.h	/^	void test_run_error(const char *desc, const struct test_run_error &err)$/;"	f	struct:bandit::detail::info_reporter
test_run_error	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void test_run_error(const char*, const struct test_run_error&)$/;"	f	struct:bandit::detail::progress_reporter
test_run_error	tests/vendor/bandit/bandit/reporters/single_line_reporter.h	/^    void test_run_error(const char* desc, const struct test_run_error& err)$/;"	f	struct:bandit::detail::single_line_reporter
test_run_error	tests/vendor/bandit/bandit/reporters/spec_reporter.h	/^    void test_run_error(const char* desc, const struct test_run_error& err)$/;"	f	struct:bandit::detail::spec_reporter
test_run_error	tests/vendor/bandit/bandit/test_run_error.h	/^    test_run_error(const char* message) : std::runtime_error(message) {}$/;"	f	struct:bandit::detail::test_run_error
test_run_error	tests/vendor/bandit/bandit/test_run_error.h	/^  struct test_run_error : public std::runtime_error$/;"	s	namespace:bandit::detail
test_run_error	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void test_run_error(const char* desc, const struct bandit::detail::test_run_error& err)$/;"	f	struct:bandit::fakes::fake_reporter
test_run_errors_	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    std::list<std::string> test_run_errors_;$/;"	m	struct:bandit::detail::progress_reporter
test_run_errors_	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    std::list<std::string> test_run_errors_;$/;"	m	struct:bandit::detail::test_run_summary
test_run_errors_	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    std::list<std::string> test_run_errors_;$/;"	m	struct:bandit::detail::progress_reporter
test_run_errors_	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    std::list<std::string> test_run_errors_;$/;"	m	struct:bandit::detail::test_run_summary
test_run_starting	libs/variant/tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void test_run_starting() $/;"	f	struct:bandit::detail::progress_reporter
test_run_starting	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void test_run_starting()$/;"	f	struct:bandit::fakes::fake_reporter
test_run_starting	tests/vendor/bandit/bandit/reporters/progress_reporter.h	/^    virtual void test_run_starting() $/;"	f	struct:bandit::detail::progress_reporter
test_run_starting	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    void test_run_starting()$/;"	f	struct:bandit::fakes::fake_reporter
test_run_status_	libs/variant/tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    bool test_run_status_;$/;"	m	struct:bandit::fakes::fake_reporter
test_run_status_	tests/vendor/bandit/specs/fakes/fake_reporter.h	/^    bool test_run_status_;$/;"	m	struct:bandit::fakes::fake_reporter
test_run_summary	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    test_run_summary(int specs_run, int specs_failed, int specs_succeeded, int specs_skipped,$/;"	f	struct:bandit::detail::test_run_summary
test_run_summary	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^  struct test_run_summary$/;"	s	namespace:bandit::detail
test_run_summary	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    test_run_summary(int specs_run, int specs_failed, int specs_succeeded, int specs_skipped,$/;"	f	struct:bandit::detail::test_run_summary
test_run_summary	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^  struct test_run_summary$/;"	s	namespace:bandit::detail
test_sqlite3_db	tests/db.test.h	/^    test_sqlite3_db() : db(arg3::db::uri("file:\/\/testdb.db"))$/;"	f	class:test_sqlite3_db
test_sqlite3_db	tests/db.test.h	/^class test_sqlite3_db : public arg3::db::sqlite::db, public test_db$/;"	c
testdb	tests/db.test.cpp	/^sqldb *testdb = &mysql_testdb;$/;"	v
texorpdfstring $ sim$query query	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{$\\sim$query()}{~query()}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual arg3\\+::db\\+::query\\+::$\\sim$query ($/;"	b
texorpdfstring A R G3 _ D E C L A R E _ E X C E P T I ON ARG3_DECLARE_EXCEPTION	html/latex/exception_8h.tex	/^\\subsubsection[{\\texorpdfstring{A\\+R\\+G3\\+\\_\\+\\+D\\+E\\+C\\+L\\+A\\+R\\+E\\+\\_\\+\\+E\\+X\\+C\\+E\\+P\\+T\\+I\\+ON}{ARG3_DECLARE_EXCEPTION}}]{\\setlength{\\rightskip}{0pt plus 5cm}\\#define A\\+R\\+G3\\+\\_\\+\\+D\\+E\\+C\\+L\\+A\\+R\\+E\\+\\_\\+\\+E\\+X\\+C\\+E\\+P\\+T\\+I\\+ON($/;"	b
texorpdfstring A R G3 _ D E C L A R E _ E X C E P T I ON ARG3_DECLARE_EXCEPTION	latex/exception_8h.tex	/^\\subsubsection[{\\texorpdfstring{A\\+R\\+G3\\+\\_\\+\\+D\\+E\\+C\\+L\\+A\\+R\\+E\\+\\_\\+\\+E\\+X\\+C\\+E\\+P\\+T\\+I\\+ON}{ARG3_DECLARE_EXCEPTION}}]{\\setlength{\\rightskip}{0pt plus 5cm}\\#define A\\+R\\+G3\\+\\_\\+\\+D\\+E\\+C\\+L\\+A\\+R\\+E\\+\\_\\+\\+E\\+X\\+C\\+E\\+P\\+T\\+I\\+ON($/;"	b
texorpdfstring A R G3 _ I M P L E M E N T _ E X C E P T I ON ARG3_IMPLEMENT_EXCEPTION	html/latex/exception_8h.tex	/^\\subsubsection[{\\texorpdfstring{A\\+R\\+G3\\+\\_\\+\\+I\\+M\\+P\\+L\\+E\\+M\\+E\\+N\\+T\\+\\_\\+\\+E\\+X\\+C\\+E\\+P\\+T\\+I\\+ON}{ARG3_IMPLEMENT_EXCEPTION}}]{\\setlength{\\rightskip}{0pt plus 5cm}\\#define A\\+R\\+G3\\+\\_\\+\\+I\\+M\\+P\\+L\\+E\\+M\\+E\\+N\\+T\\+\\_\\+\\+E\\+X\\+C\\+E\\+P\\+T\\+I\\+ON($/;"	b
texorpdfstring A R G3 _ I M P L E M E N T _ E X C E P T I ON ARG3_IMPLEMENT_EXCEPTION	latex/exception_8h.tex	/^\\subsubsection[{\\texorpdfstring{A\\+R\\+G3\\+\\_\\+\\+I\\+M\\+P\\+L\\+E\\+M\\+E\\+N\\+T\\+\\_\\+\\+E\\+X\\+C\\+E\\+P\\+T\\+I\\+ON}{ARG3_IMPLEMENT_EXCEPTION}}]{\\setlength{\\rightskip}{0pt plus 5cm}\\#define A\\+R\\+G3\\+\\_\\+\\+I\\+M\\+P\\+L\\+E\\+M\\+E\\+N\\+T\\+\\_\\+\\+E\\+X\\+C\\+E\\+P\\+T\\+I\\+ON($/;"	b
texorpdfstring B A T CH BATCH	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{B\\+A\\+T\\+CH}{BATCH}}]{\\setlength{\\rightskip}{0pt plus 5cm}constexpr const int arg3\\+::db\\+::modify\\+\\_\\+query\\+::\\+B\\+A\\+T\\+CH = (1 $<$$<$ 0)\\hspace{0.3cm}{\\ttfamily [static]}}\\hypertarget{classarg3_1_1db_1_1modify__query_aa29bd820545852f2b8b3341c6fbc989d}{}\\label{classarg3_1_1db_1_1modify__query_aa29bd820545852f2b8b3341c6fbc989d}$/;"	b
texorpdfstring Batch Batch	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{Batch}{Batch}}]{\\setlength{\\rightskip}{0pt plus 5cm}constexpr const int arg3\\+::db\\+::modify\\+\\_\\+query\\+::\\+Batch = (1 $<$$<$ 0)\\hspace{0.3cm}{\\ttfamily [static]}}\\hypertarget{classarg3_1_1db_1_1modify__query_a193b36e1bcb10d4202258609ce47930f}{}\\label{classarg3_1_1db_1_1modify__query_a193b36e1bcb10d4202258609ce47930f}$/;"	b
texorpdfstring Cache Level CacheLevel	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{Cache\\+Level}{CacheLevel}}]{\\setlength{\\rightskip}{0pt plus 5cm}enum {\\bf arg3\\+::db\\+::sqldb\\+::\\+Cache\\+Level}}\\hypertarget{classarg3_1_1db_1_1sqldb_afc162aabe92b1326aaa3a160ad7819ed}{}\\label{classarg3_1_1db_1_1sqldb_afc162aabe92b1326aaa3a160ad7819ed}$/;"	b
texorpdfstring base _ record base _ record other base_record base_record other	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(base\\+\\_\\+record \\&\\&other)}{base_record(base_record &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record base _ record other base_record base_record other	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(base\\+\\_\\+record \\&\\&other)}{base_record(base_record &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record const base _ record other base_record const base_record other	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(const base\\+\\_\\+record \\&other)}{base_record(const base_record &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record const base _ record other base_record const base_record other	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(const base\\+\\_\\+record \\&other)}{base_record(const base_record &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record const std shared _ ptr$ $ schema _ type $ $ schema const std string column Name V value base_record const std shared_ptr schema_type schema const std string columnName V value	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(const std\\+::shared\\+\\_\\+ptr$<$ schema\\+\\_\\+type $>$ \\&schema, const std\\+::string \\&column\\+Name, V value)}{base_record(const std::shared_ptr< schema_type > &schema, const std::string &columnName, V value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ template$<$typename V $>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record const std shared _ ptr$ $ schema _ type $ $ schema const std string column Name V value base_record const std shared_ptr schema_type schema const std string columnName V value	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(const std\\+::shared\\+\\_\\+ptr$<$ schema\\+\\_\\+type $>$ \\&schema, const std\\+::string \\&column\\+Name, V value)}{base_record(const std::shared_ptr< schema_type > &schema, const std::string &columnName, V value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ template$<$typename V $>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record const std shared _ ptr$ $ schema _ type $ $ schema const std string column Name base_record const std shared_ptr schema_type schema const std string columnName	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(const std\\+::shared\\+\\_\\+ptr$<$ schema\\+\\_\\+type $>$ \\&schema, const std\\+::string \\&column\\+Name)}{base_record(const std::shared_ptr< schema_type > &schema, const std::string &columnName)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record const std shared _ ptr$ $ schema _ type $ $ schema const std string column Name base_record const std shared_ptr schema_type schema const std string columnName	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(const std\\+::shared\\+\\_\\+ptr$<$ schema\\+\\_\\+type $>$ \\&schema, const std\\+::string \\&column\\+Name)}{base_record(const std::shared_ptr< schema_type > &schema, const std::string &columnName)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record const std shared _ ptr$ $ schema _ type $ $ schema const std string column Name const row values base_record const std shared_ptr schema_type schema const std string columnName const row values	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(const std\\+::shared\\+\\_\\+ptr$<$ schema\\+\\_\\+type $>$ \\&schema, const std\\+::string \\&column\\+Name, const row \\&values)}{base_record(const std::shared_ptr< schema_type > &schema, const std::string &columnName, const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record const std shared _ ptr$ $ schema _ type $ $ schema const std string column Name const row values base_record const std shared_ptr schema_type schema const std string columnName const row values	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(const std\\+::shared\\+\\_\\+ptr$<$ schema\\+\\_\\+type $>$ \\&schema, const std\\+::string \\&column\\+Name, const row \\&values)}{base_record(const std::shared_ptr< schema_type > &schema, const std::string &columnName, const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record sqldb $ ast$db const std string table Name const std string column Name const V value base_record sqldb db const std string tableName const std string columnName const V value	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(sqldb $\\ast$db, const std\\+::string \\&table\\+Name, const std\\+::string \\&column\\+Name, const V \\&value)}{base_record(sqldb *db, const std::string &tableName, const std::string &columnName, const V &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ template$<$typename V $>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record sqldb $ ast$db const std string table Name const std string column Name const V value base_record sqldb db const std string tableName const std string columnName const V value	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(sqldb $\\ast$db, const std\\+::string \\&table\\+Name, const std\\+::string \\&column\\+Name, const V \\&value)}{base_record(sqldb *db, const std::string &tableName, const std::string &columnName, const V &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ template$<$typename V $>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record sqldb $ ast$db const std string table Name const std string column Name const row values base_record sqldb db const std string tableName const std string columnName const row values	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(sqldb $\\ast$db, const std\\+::string \\&table\\+Name, const std\\+::string \\&column\\+Name, const row \\&values)}{base_record(sqldb *db, const std::string &tableName, const std::string &columnName, const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record sqldb $ ast$db const std string table Name const std string column Name const row values base_record sqldb db const std string tableName const std string columnName const row values	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(sqldb $\\ast$db, const std\\+::string \\&table\\+Name, const std\\+::string \\&column\\+Name, const row \\&values)}{base_record(sqldb *db, const std::string &tableName, const std::string &columnName, const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record sqldb $ ast$db const std string tablename const std string id Column Name base_record sqldb db const std string tablename const std string idColumnName	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(sqldb $\\ast$db, const std\\+::string \\&tablename, const std\\+::string \\&id\\+Column\\+Name)}{base_record(sqldb *db, const std::string &tablename, const std::string &idColumnName)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring base _ record sqldb $ ast$db const std string tablename const std string id Column Name base_record sqldb db const std string tablename const std string idColumnName	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{base\\+\\_\\+record(sqldb $\\ast$db, const std\\+::string \\&tablename, const std\\+::string \\&id\\+Column\\+Name)}{base_record(sqldb *db, const std::string &tablename, const std::string &idColumnName)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf base\\+\\_\\+record} ($/;"	b
texorpdfstring begin begin	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{begin()}{begin()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf iterator} arg3\\+::db\\+::resultset\\+::begin ($/;"	b
texorpdfstring begin begin	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{begin()}{begin()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf iterator} arg3\\+::db\\+::resultset\\+::begin ($/;"	b
texorpdfstring begin begin	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{begin()}{begin()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf iterator} arg3\\+::db\\+::row\\+::begin ($/;"	b
texorpdfstring begin const begin const	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{begin() const }{begin() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf const\\+\\_\\+iterator} arg3\\+::db\\+::resultset\\+::begin ($/;"	b
texorpdfstring begin const begin const	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{begin() const }{begin() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf const\\+\\_\\+iterator} arg3\\+::db\\+::resultset\\+::begin ($/;"	b
texorpdfstring begin const begin const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{begin() const }{begin() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf const\\+\\_\\+iterator} arg3\\+::db\\+::row\\+::begin ($/;"	b
texorpdfstring bind _ list size _ t index const T value bind_list size_t index const T value	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind\\+\\_\\+list(size\\+\\_\\+t index, const T \\&value)}{bind_list(size_t index, const T &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T $>$ {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind\\+\\_\\+list ($/;"	b
texorpdfstring bind _ list size _ t index const T value const List argv bind_list size_t index const T value const List argv	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind\\+\\_\\+list(size\\+\\_\\+t index, const T \\&value, const List \\&...\\+argv)}{bind_list(size_t index, const T &value, const List &...argv)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T , typename... List$>$ {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind\\+\\_\\+list ($/;"	b
texorpdfstring bind _ params M Y S Q L _ S T M T $ ast$stmt const bind_params MYSQL_STMT stmt const	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind\\+\\_\\+params(\\+M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+S\\+T\\+M\\+T $\\ast$stmt) const }{bind_params(MYSQL_STMT *stmt) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::binding\\+::bind\\+\\_\\+params ($/;"	b
texorpdfstring bind _ params M Y S Q L _ S T M T $ ast$stmt const bind_params MYSQL_STMT stmt const	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{bind\\+\\_\\+params(\\+M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+S\\+T\\+M\\+T $\\ast$stmt) const }{bind_params(MYSQL_STMT *stmt) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::bind\\+\\_\\+params ($/;"	b
texorpdfstring bind _ result M Y S Q L _ S T M T $ ast$stmt const bind_result MYSQL_STMT stmt const	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind\\+\\_\\+result(\\+M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+S\\+T\\+M\\+T $\\ast$stmt) const }{bind_result(MYSQL_STMT *stmt) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::binding\\+::bind\\+\\_\\+result ($/;"	b
texorpdfstring bind _ result M Y S Q L _ S T M T $ ast$stmt const bind_result MYSQL_STMT stmt const	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{bind\\+\\_\\+result(\\+M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+S\\+T\\+M\\+T $\\ast$stmt) const }{bind_result(MYSQL_STMT *stmt) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::bind\\+\\_\\+result ($/;"	b
texorpdfstring bind _ value size _ t index const sql _ value v bind_value size_t index const sql_value v	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind\\+\\_\\+value(size\\+\\_\\+t index, const sql\\+\\_\\+value \\&v)}{bind_value(size_t index, const sql_value &v)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind\\+\\_\\+value ($/;"	b
texorpdfstring bind _ value size _ t index const sql _ value value bind_value size_t index const sql_value value	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind\\+\\_\\+value(size\\+\\_\\+t index, const sql\\+\\_\\+value \\&value)}{bind_value(size_t index, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind\\+\\_\\+value ($/;"	b
texorpdfstring bind const std string name const sql _ value value 0 bind const std string name const sql_value value 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)=0}{bind(const std::string &name, const sql_value &value)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind const std string name const sql _ value value bind const std string name const sql_value value	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\subsubsection[{\\texorpdfstring{bind(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{bind(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf bind\\+\\_\\+mapping}\\& arg3\\+::db\\+::bind\\+\\_\\+mapping\\+::bind ($/;"	b
texorpdfstring bind const std string name const sql _ value value bind const std string name const sql_value value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{bind(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind const std string name const sql _ value value bind const std string name const sql_value value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{bind(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind const std string name const sql _ value value bind const std string name const sql_value value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{bind(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind const std string name const sql _ value value bind const std string name const sql_value value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{bind(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind const std string name const sql _ value value bind const std string name const sql_value value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{bind(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind const std string name const sql _ value value bind const std string name const sql_value value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{bind(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index bind size_t index	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index)}{bind(size_t index)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ blob value 0 bind size_t index const sql_blob value 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+blob \\&value)=0}{bind(size_t index, const sql_blob &value)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ blob value bind size_t index const sql_blob value	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+blob \\&value)}{bind(size_t index, const sql_blob &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ blob value bind size_t index const sql_blob value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+blob \\&value)}{bind(size_t index, const sql_blob &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ blob value bind size_t index const sql_blob value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+blob \\&value)}{bind(size_t index, const sql_blob &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ blob value bind size_t index const sql_blob value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+blob \\&value)}{bind(size_t index, const sql_blob &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ blob value bind size_t index const sql_blob value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+blob \\&value)}{bind(size_t index, const sql_blob &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ blob value bind size_t index const sql_blob value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+blob \\&value)}{bind(size_t index, const sql_blob &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ blob value bind size_t index const sql_blob value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+blob \\&value)}{bind(size_t index, const sql_blob &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ null _ t value bind size_t index const sql_null_t value	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+null\\+\\_\\+t \\&value)}{bind(size_t index, const sql_null_t &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ null _ type value 0 bind size_t index const sql_null_type value 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+null\\+\\_\\+type \\&value)=0}{bind(size_t index, const sql_null_type &value)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ null _ type value bind size_t index const sql_null_type value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+null\\+\\_\\+type \\&value)}{bind(size_t index, const sql_null_type &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ null _ type value bind size_t index const sql_null_type value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+null\\+\\_\\+type \\&value)}{bind(size_t index, const sql_null_type &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ null _ type value bind size_t index const sql_null_type value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+null\\+\\_\\+type \\&value)}{bind(size_t index, const sql_null_type &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ null _ type value bind size_t index const sql_null_type value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+null\\+\\_\\+type \\&value)}{bind(size_t index, const sql_null_type &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ null _ type value bind size_t index const sql_null_type value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+null\\+\\_\\+type \\&value)}{bind(size_t index, const sql_null_type &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ null _ type value bind size_t index const sql_null_type value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+null\\+\\_\\+type \\&value)}{bind(size_t index, const sql_null_type &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ time time 0 bind size_t index const sql_time time 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+time \\&time)=0}{bind(size_t index, const sql_time &time)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ time value bind size_t index const sql_time value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+time \\&value)}{bind(size_t index, const sql_time &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ time value bind size_t index const sql_time value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+time \\&value)}{bind(size_t index, const sql_time &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ time value bind size_t index const sql_time value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+time \\&value)}{bind(size_t index, const sql_time &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ time value bind size_t index const sql_time value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+time \\&value)}{bind(size_t index, const sql_time &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ time value bind size_t index const sql_time value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+time \\&value)}{bind(size_t index, const sql_time &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const sql _ time value bind size_t index const sql_time value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const sql\\+\\_\\+time \\&value)}{bind(size_t index, const sql_time &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std string value int len 1 0 bind size_t index const std string value int len 1 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::string \\&value, int len=-\\\/1)=0}{bind(size_t index, const std::string &value, int len=-1)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std string value int len 1 bind size_t index const std string value int len 1	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::string \\&value, int len=-\\\/1)}{bind(size_t index, const std::string &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std string value int len 1 bind size_t index const std string value int len 1	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::string \\&value, int len=-\\\/1)}{bind(size_t index, const std::string &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std string value int len 1 bind size_t index const std string value int len 1	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::string \\&value, int len=-\\\/1)}{bind(size_t index, const std::string &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std string value int len 1 bind size_t index const std string value int len 1	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::string \\&value, int len=-\\\/1)}{bind(size_t index, const std::string &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std string value int len 1 bind size_t index const std string value int len 1	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::string \\&value, int len=-\\\/1)}{bind(size_t index, const std::string &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std string value int len 1 bind size_t index const std string value int len 1	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::string \\&value, int len=-\\\/1)}{bind(size_t index, const std::string &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std string value int len 1 bind size_t index const std string value int len 1	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::string \\&value, int len=-\\\/1)}{bind(size_t index, const std::string &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std wstring value int len 1 0 bind size_t index const std wstring value int len 1 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::wstring \\&value, int len=-\\\/1)=0}{bind(size_t index, const std::wstring &value, int len=-1)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std wstring value int len 1 bind size_t index const std wstring value int len 1	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::wstring \\&value, int len=-\\\/1)}{bind(size_t index, const std::wstring &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std wstring value int len 1 bind size_t index const std wstring value int len 1	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::wstring \\&value, int len=-\\\/1)}{bind(size_t index, const std::wstring &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std wstring value int len 1 bind size_t index const std wstring value int len 1	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::wstring \\&value, int len=-\\\/1)}{bind(size_t index, const std::wstring &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std wstring value int len 1 bind size_t index const std wstring value int len 1	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::wstring \\&value, int len=-\\\/1)}{bind(size_t index, const std::wstring &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std wstring value int len 1 bind size_t index const std wstring value int len 1	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::wstring \\&value, int len=-\\\/1)}{bind(size_t index, const std::wstring &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std wstring value int len 1 bind size_t index const std wstring value int len 1	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::wstring \\&value, int len=-\\\/1)}{bind(size_t index, const std::wstring &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index const std wstring value int len 1 bind size_t index const std wstring value int len 1	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, const std\\+::wstring \\&value, int len=-\\\/1)}{bind(size_t index, const std::wstring &value, int len=-1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index double value 0 bind size_t index double value 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, double value)=0}{bind(size_t index, double value)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index double value bind size_t index double value	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, double value)}{bind(size_t index, double value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index double value bind size_t index double value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, double value)}{bind(size_t index, double value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index double value bind size_t index double value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, double value)}{bind(size_t index, double value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index double value bind size_t index double value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, double value)}{bind(size_t index, double value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index double value bind size_t index double value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, double value)}{bind(size_t index, double value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index double value bind size_t index double value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, double value)}{bind(size_t index, double value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index double value bind size_t index double value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, double value)}{bind(size_t index, double value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index float value 0 bind size_t index float value 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, float value)=0}{bind(size_t index, float value)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index float value bind size_t index float value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, float value)}{bind(size_t index, float value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index float value bind size_t index float value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, float value)}{bind(size_t index, float value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index float value bind size_t index float value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, float value)}{bind(size_t index, float value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index float value bind size_t index float value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, float value)}{bind(size_t index, float value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index float value bind size_t index float value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, float value)}{bind(size_t index, float value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index float value bind size_t index float value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, float value)}{bind(size_t index, float value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index int value 0 bind size_t index int value 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, int value)=0}{bind(size_t index, int value)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index int value bind size_t index int value	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, int value)}{bind(size_t index, int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index int value bind size_t index int value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, int value)}{bind(size_t index, int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index int value bind size_t index int value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, int value)}{bind(size_t index, int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index int value bind size_t index int value	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, int value)}{bind(size_t index, int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf mysql\\+\\_\\+binding}\\& arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index int value bind size_t index int value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, int value)}{bind(size_t index, int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index int value bind size_t index int value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, int value)}{bind(size_t index, int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index int value bind size_t index int value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, int value)}{bind(size_t index, int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index int value bind size_t index int value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, int value)}{bind(size_t index, int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index long long value 0 bind size_t index long long value 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, long long value)=0}{bind(size_t index, long long value)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index long long value bind size_t index long long value	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, long long value)}{bind(size_t index, long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index long long value bind size_t index long long value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, long long value)}{bind(size_t index, long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index long long value bind size_t index long long value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, long long value)}{bind(size_t index, long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index long long value bind size_t index long long value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, long long value)}{bind(size_t index, long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index long long value bind size_t index long long value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, long long value)}{bind(size_t index, long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index long long value bind size_t index long long value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, long long value)}{bind(size_t index, long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index long long value bind size_t index long long value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, long long value)}{bind(size_t index, long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned long long value 0 bind size_t index unsigned long long value 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned long long value)=0}{bind(size_t index, unsigned long long value)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned long long value bind size_t index unsigned long long value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned long long value)}{bind(size_t index, unsigned long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned long long value bind size_t index unsigned long long value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned long long value)}{bind(size_t index, unsigned long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned long long value bind size_t index unsigned long long value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned long long value)}{bind(size_t index, unsigned long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned long long value bind size_t index unsigned long long value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned long long value)}{bind(size_t index, unsigned long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned long long value bind size_t index unsigned long long value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned long long value)}{bind(size_t index, unsigned long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned long long value bind size_t index unsigned long long value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned long long value)}{bind(size_t index, unsigned long long value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned value 0 bind size_t index unsigned value 0	latex/classarg3_1_1db_1_1bindable.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned value)=0}{bind(size_t index, unsigned value)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf bindable}\\& arg3\\+::db\\+::bindable\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned value bind size_t index unsigned value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned value)}{bind(size_t index, unsigned value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::mysql\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned value bind size_t index unsigned value	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned value)}{bind(size_t index, unsigned value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::mysql\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned value bind size_t index unsigned value	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned value)}{bind(size_t index, unsigned value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf binding}\\& arg3\\+::db\\+::postgres\\+::binding\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned value bind size_t index unsigned value	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned value)}{bind(size_t index, unsigned value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::postgres\\+::statement\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned value bind size_t index unsigned value	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned value)}{bind(size_t index, unsigned value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::bind ($/;"	b
texorpdfstring bind size _ t index unsigned value bind size_t index unsigned value	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{bind(size\\+\\_\\+t index, unsigned value)}{bind(size_t index, unsigned value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf statement}\\& arg3\\+::db\\+::sqlite\\+::statement\\+::bind ($/;"	b
texorpdfstring binding M Y S Q L _ B I N D $ ast$value size _ t size binding MYSQL_BIND value size_t size	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{binding(\\+M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+B\\+I\\+N\\+D $\\ast$value, size\\+\\_\\+t size)}{binding(MYSQL_BIND *value, size_t size)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::binding\\+::binding ($/;"	b
texorpdfstring binding M Y S Q L _ F I E L D $ ast$fields size _ t size binding MYSQL_FIELD fields size_t size	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{binding(\\+M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+F\\+I\\+E\\+L\\+D $\\ast$fields, size\\+\\_\\+t size)}{binding(MYSQL_FIELD *fields, size_t size)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::binding\\+::binding ($/;"	b
texorpdfstring binding binding	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{binding()}{binding()}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::binding\\+::binding ($/;"	b
texorpdfstring binding binding	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{binding()}{binding()}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+::binding\\+::binding ($/;"	b
texorpdfstring binding const M Y S Q L _ B I N D value binding const MYSQL_BIND value	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{binding(const M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+B\\+I\\+N\\+D \\&value)}{binding(const MYSQL_BIND &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::binding\\+::binding ($/;"	b
texorpdfstring binding size _ t size binding size_t size	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{binding(size\\+\\_\\+t size)}{binding(size_t size)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::binding\\+::binding ($/;"	b
texorpdfstring binding size _ t size binding size_t size	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{binding(size\\+\\_\\+t size)}{binding(size_t size)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+::binding\\+::binding ($/;"	b
texorpdfstring c _ alloc T $ ast$value size _ t num size _ t old Size c_alloc T value size_t num size_t oldSize	html/latex/alloc_8h.tex	/^\\subsubsection[{\\texorpdfstring{c\\+\\_\\+alloc(\\+T $\\ast$value, size\\+\\_\\+t num, size\\+\\_\\+t old\\+Size)}{c_alloc(T *value, size_t num, size_t oldSize)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T $>$ T$\\ast$ arg3\\+::db\\+::c\\+\\_\\+alloc ($/;"	b
texorpdfstring c _ alloc T $ ast$value size _ t num size _ t old Size c_alloc T value size_t num size_t oldSize	latex/alloc_8h.tex	/^\\subsubsection[{\\texorpdfstring{c\\+\\_\\+alloc(\\+T $\\ast$value, size\\+\\_\\+t num, size\\+\\_\\+t old\\+Size)}{c_alloc(T *value, size_t num, size_t oldSize)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T $>$ T$\\ast$ arg3\\+::db\\+::c\\+\\_\\+alloc ($/;"	b
texorpdfstring c _ alloc size _ t num 1 c_alloc size_t num 1	html/latex/alloc_8h.tex	/^\\subsubsection[{\\texorpdfstring{c\\+\\_\\+alloc(size\\+\\_\\+t num=1)}{c_alloc(size_t num=1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T $>$ T$\\ast$ arg3\\+::db\\+::c\\+\\_\\+alloc ($/;"	b
texorpdfstring c _ alloc size _ t num 1 c_alloc size_t num 1	latex/alloc_8h.tex	/^\\subsubsection[{\\texorpdfstring{c\\+\\_\\+alloc(size\\+\\_\\+t num=1)}{c_alloc(size_t num=1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T $>$ T$\\ast$ arg3\\+::db\\+::c\\+\\_\\+alloc ($/;"	b
texorpdfstring c _ alloc size _ t size size _ t num 1 c_alloc size_t size size_t num 1	html/latex/alloc_8h.tex	/^\\subsubsection[{\\texorpdfstring{c\\+\\_\\+alloc(size\\+\\_\\+t size, size\\+\\_\\+t num=1)}{c_alloc(size_t size, size_t num=1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void$\\ast$ arg3\\+::db\\+::c\\+\\_\\+alloc ($/;"	b
texorpdfstring c _ alloc size _ t size size _ t num 1 c_alloc size_t size size_t num 1	latex/alloc_8h.tex	/^\\subsubsection[{\\texorpdfstring{c\\+\\_\\+alloc(size\\+\\_\\+t size, size\\+\\_\\+t num=1)}{c_alloc(size_t size, size_t num=1)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void$\\ast$ arg3\\+::db\\+::c\\+\\_\\+alloc ($/;"	b
texorpdfstring cache _ level const cache_level const	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{cache\\+\\_\\+level() const }{cache_level() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}cache\\+::level arg3\\+::db\\+::sqlite\\+::db\\+::cache\\+\\_\\+level ($/;"	b
texorpdfstring cached _ column const std shared _ ptr$ $ sqlite3 _ stmt $ $ stmt int column cached_column const std shared_ptr sqlite3_stmt stmt int column	latex/classarg3_1_1db_1_1sqlite_1_1cached__column.tex	/^\\subsubsection[{\\texorpdfstring{cached\\+\\_\\+column(const std\\+::shared\\+\\_\\+ptr$<$ sqlite3\\+\\_\\+stmt $>$ \\&stmt, int column)}{cached_column(const std::shared_ptr< sqlite3_stmt > &stmt, int column)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+column\\+::cached\\+\\_\\+column ($/;"	b
texorpdfstring cached _ resultset sqlite db $ ast$db std shared _ ptr$ $ sqlite3 _ stmt $ $ stmt cached_resultset sqlite db db std shared_ptr sqlite3_stmt stmt	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{cached\\+\\_\\+resultset(sqlite\\+::db $\\ast$db, std\\+::shared\\+\\_\\+ptr$<$ sqlite3\\+\\_\\+stmt $>$ stmt)}{cached_resultset(sqlite::db *db, std::shared_ptr< sqlite3_stmt > stmt)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+resultset\\+::cached\\+\\_\\+resultset ($/;"	b
texorpdfstring cached _ row sqlite db $ ast$db std shared _ ptr$ $ sqlite3 _ stmt $ $ stmt cached_row sqlite db db std shared_ptr sqlite3_stmt stmt	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsubsection[{\\texorpdfstring{cached\\+\\_\\+row(sqlite\\+::db $\\ast$db, std\\+::shared\\+\\_\\+ptr$<$ sqlite3\\+\\_\\+stmt $>$ stmt)}{cached_row(sqlite::db *db, std::shared_ptr< sqlite3_stmt > stmt)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+row\\+::cached\\+\\_\\+row ($/;"	b
texorpdfstring cbegin const cbegin const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{cbegin() const }{cbegin() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf const\\+\\_\\+iterator} arg3\\+::db\\+::row\\+::cbegin ($/;"	b
texorpdfstring cend const cend const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{cend() const }{cend() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf const\\+\\_\\+iterator} arg3\\+::db\\+::row\\+::cend ($/;"	b
texorpdfstring clear const std string tablename clear const std string tablename	latex/classarg3_1_1db_1_1schema__factory.tex	/^\\subsubsection[{\\texorpdfstring{clear(const std\\+::string \\&tablename)}{clear(const std::string &tablename)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::schema\\+\\_\\+factory\\+::clear ($/;"	b
texorpdfstring close 0 close 0	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{close()=0}{close()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::sqldb\\+::close ($/;"	b
texorpdfstring close close	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{close()}{close()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::db\\+::close ($/;"	b
texorpdfstring close close	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsubsection[{\\texorpdfstring{close()}{close()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+db\\+::close ($/;"	b
texorpdfstring close close	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{close()}{close()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+::db\\+::close ($/;"	b
texorpdfstring close close	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsubsection[{\\texorpdfstring{close()}{close()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+\\_\\+db\\+::close ($/;"	b
texorpdfstring close close	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{close()}{close()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite\\+::db\\+::close ($/;"	b
texorpdfstring column _ name size _ t n Position const column_name size_t nPosition const	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t n\\+Position) const }{column_name(size_t nPosition) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::postgres\\+::row\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ name size _ t n Position const column_name size_t nPosition const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t n\\+Position) const }{column_name(size_t nPosition) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::row\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ name size _ t n Position const column_name size_t nPosition const	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t n\\+Position) const }{column_name(size_t nPosition) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+row\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ name size _ t n Position const column_name size_t nPosition const	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t n\\+Position) const }{column_name(size_t nPosition) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sqlite\\+::row\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ name size _ t position const 0 column_name size_t position const 0	latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t position) const  =0}{column_name(size_t position) const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::row\\+\\_\\+impl\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ name size _ t position const column_name size_t position const	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t position) const }{column_name(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+::row\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ name size _ t position const column_name size_t position const	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t position) const }{column_name(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+row\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ name size _ t position const column_name size_t position const	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t position) const }{column_name(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+row\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ name size _ t position const column_name size_t position const	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t position) const }{column_name(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+\\_\\+row\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ name size _ t position const column_name size_t position const	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+name(size\\+\\_\\+t position) const }{column_name(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+row\\+::column\\+\\_\\+name ($/;"	b
texorpdfstring column _ names const column_names const	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{column\\+\\_\\+names() const }{column_names() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::vector$<$std\\+::string$>$ arg3\\+::db\\+::schema\\+::column\\+\\_\\+names ($/;"	b
texorpdfstring column column other column column other	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{column(column \\&\\&other)}{column(column &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::column\\+::column ($/;"	b
texorpdfstring column column other column column other	latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{column(column \\&\\&other)}{column(column &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::column\\+::column ($/;"	b
texorpdfstring column const column other column const column other	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{column(const column \\&other)}{column(const column &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::column\\+::column ($/;"	b
texorpdfstring column const column other column const column other	latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{column(const column \\&other)}{column(const column &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::column\\+::column ($/;"	b
texorpdfstring column const std shared _ ptr$ $ M Y S Q L _ R E S $ $ res M Y S Q L _ R O W value size _ t index column const std shared_ptr MYSQL_RES res MYSQL_ROW value size_t index	latex/classarg3_1_1db_1_1mysql_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&res, M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+O\\+W value, size\\+\\_\\+t index)}{column(const std::shared_ptr< MYSQL_RES > &res, MYSQL_ROW value, size_t index)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::column\\+::column ($/;"	b
texorpdfstring column const std shared _ ptr$ $ P Gresult $ $ stmt int row int column column const std shared_ptr PGresult stmt int row int column	latex/classarg3_1_1db_1_1postgres_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::shared\\+\\_\\+ptr$<$ P\\+Gresult $>$ \\&stmt, int row, int column)}{column(const std::shared_ptr< PGresult > &stmt, int row, int column)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+::column\\+::column ($/;"	b
texorpdfstring column const std shared _ ptr$ $ column _ impl $ $ impl column const std shared_ptr column_impl impl	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::shared\\+\\_\\+ptr$<$ column\\+\\_\\+impl $>$ \\&impl)}{column(const std::shared_ptr< column_impl > &impl)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::column\\+::column ($/;"	b
texorpdfstring column const std shared _ ptr$ $ column _ impl $ $ impl column const std shared_ptr column_impl impl	latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::shared\\+\\_\\+ptr$<$ column\\+\\_\\+impl $>$ \\&impl)}{column(const std::shared_ptr< column_impl > &impl)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::column\\+::column ($/;"	b
texorpdfstring column const std shared _ ptr$ $ sqlite3 _ stmt $ $ stmt int column column const std shared_ptr sqlite3_stmt stmt int column	latex/classarg3_1_1db_1_1sqlite_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::shared\\+\\_\\+ptr$<$ sqlite3\\+\\_\\+stmt $>$ \\&stmt, int column)}{column(const std::shared_ptr< sqlite3_stmt > &stmt, int column)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqlite\\+::column\\+::column ($/;"	b
texorpdfstring column const std string name const 0 column const std string name const 0	latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const  =0}{column(const std::string &name) const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf column\\+\\_\\+type} arg3\\+::db\\+::row\\+\\_\\+impl\\+::column ($/;"	b
texorpdfstring column const std string name const column const std string name const	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const }{column(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+::row\\+::column ($/;"	b
texorpdfstring column const std string name const column const std string name const	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const }{column(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring column const std string name const column const std string name const	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const }{column(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring column const std string name const column const std string name const	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const }{column(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring column const std string name const column const std string name const	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const }{column(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring column const std string name const column const std string name const	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const }{column(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::postgres\\+::row\\+::column ($/;"	b
texorpdfstring column const std string name const column const std string name const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const }{column(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::row\\+::column ($/;"	b
texorpdfstring column const std string name const column const std string name const	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const }{column(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring column const std string name const column const std string name const	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column(const std\\+::string \\&name) const }{column(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::sqlite\\+::row\\+::column ($/;"	b
texorpdfstring column size _ t n Position const column size_t nPosition const	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t n\\+Position) const }{column(size_t nPosition) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::postgres\\+::row\\+::column ($/;"	b
texorpdfstring column size _ t n Position const column size_t nPosition const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t n\\+Position) const }{column(size_t nPosition) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::row\\+::column ($/;"	b
texorpdfstring column size _ t n Position const column size_t nPosition const	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t n\\+Position) const }{column(size_t nPosition) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring column size _ t n Position const column size_t nPosition const	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t n\\+Position) const }{column(size_t nPosition) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::sqlite\\+::row\\+::column ($/;"	b
texorpdfstring column size _ t position const 0 column size_t position const 0	latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t position) const  =0}{column(size_t position) const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf column\\+\\_\\+type} arg3\\+::db\\+::row\\+\\_\\+impl\\+::column ($/;"	b
texorpdfstring column size _ t position const column size_t position const	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t position) const }{column(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+::row\\+::column ($/;"	b
texorpdfstring column size _ t position const column size_t position const	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t position) const }{column(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring column size _ t position const column size_t position const	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t position) const }{column(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring column size _ t position const column size_t position const	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t position) const }{column(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring column size _ t position const column size_t position const	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{column(size\\+\\_\\+t position) const }{column(size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+row\\+::column ($/;"	b
texorpdfstring columns const columns const	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{columns() const }{columns() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::vector$<${\\bf column\\+\\_\\+definition}$>$ arg3\\+::db\\+::schema\\+::columns ($/;"	b
texorpdfstring columns const columns const	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{columns() const }{columns() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::vector$<$std\\+::string$>$ arg3\\+::db\\+::select\\+\\_\\+query\\+::columns ($/;"	b
texorpdfstring connection _ info const connection_info const	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{connection\\+\\_\\+info() const }{connection_info() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf uri} arg3\\+::db\\+::sqldb\\+::connection\\+\\_\\+info ($/;"	b
texorpdfstring count count	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{count()}{count()}}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::select\\+\\_\\+query\\+::count ($/;"	b
texorpdfstring create _ statement 0 create_statement 0	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{create\\+\\_\\+statement()=0}{create_statement()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::shared\\+\\_\\+ptr$<${\\bf statement\\+\\_\\+type}$>$ arg3\\+::db\\+::sqldb\\+::create\\+\\_\\+statement ($/;"	b
texorpdfstring create _ statement create_statement	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{create\\+\\_\\+statement()}{create_statement()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::shared\\+\\_\\+ptr$<${\\bf statement\\+\\_\\+type}$>$ arg3\\+::db\\+::mysql\\+::db\\+::create\\+\\_\\+statement ($/;"	b
texorpdfstring create _ statement create_statement	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsubsection[{\\texorpdfstring{create\\+\\_\\+statement()}{create_statement()}}]{\\setlength{\\rightskip}{0pt plus 5cm}shared\\+\\_\\+ptr$<${\\bf statement}$>$ arg3\\+::db\\+::mysql\\+\\_\\+db\\+::create\\+\\_\\+statement ($/;"	b
texorpdfstring create _ statement create_statement	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{create\\+\\_\\+statement()}{create_statement()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::shared\\+\\_\\+ptr$<${\\bf statement\\+\\_\\+type}$>$ arg3\\+::db\\+::postgres\\+::db\\+::create\\+\\_\\+statement ($/;"	b
texorpdfstring create _ statement create_statement	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{create\\+\\_\\+statement()}{create_statement()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::shared\\+\\_\\+ptr$<${\\bf statement\\+\\_\\+type}$>$ arg3\\+::db\\+::sqlite\\+::db\\+::create\\+\\_\\+statement ($/;"	b
texorpdfstring current _ row 0 current_row 0	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()=0}{current_row()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf row\\+\\_\\+type} arg3\\+::db\\+::resultset\\+\\_\\+impl\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row} arg3\\+::db\\+::resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset\\+::row\\+\\_\\+type} arg3\\+::db\\+::mysql\\+::resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf stmt\\+\\_\\+resultset\\+::row\\+\\_\\+type} arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row} arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row} arg3\\+::db\\+::mysql\\+\\_\\+resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row} arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row\\+\\_\\+type} arg3\\+::db\\+::postgres\\+::resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row\\+\\_\\+type} arg3\\+::db\\+::resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row\\+\\_\\+type} arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring current _ row current_row	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{current\\+\\_\\+row()}{current_row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row\\+\\_\\+type} arg3\\+::db\\+::sqlite\\+::resultset\\+::current\\+\\_\\+row ($/;"	b
texorpdfstring db const db const	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{db() const }{db() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sqldb}$\\ast$ arg3\\+::db\\+::query\\+::db ($/;"	b
texorpdfstring db const db const	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{db() const }{db() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sqldb}$\\ast$ arg3\\+::db\\+::schema\\+::db ($/;"	b
texorpdfstring db const uri conn Info db const uri connInfo	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{db(const uri \\&conn\\+Info)}{db(const uri &connInfo)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::db\\+::db ($/;"	b
texorpdfstring db const uri info db const uri info	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{db(const uri \\&info)}{db(const uri &info)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+::db\\+::db ($/;"	b
texorpdfstring db const uri info db const uri info	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{db(const uri \\&info)}{db(const uri &info)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqlite\\+::db\\+::db ($/;"	b
texorpdfstring de1ete const de1ete const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{de1ete() const }{de1ete() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::de1ete ($/;"	b
texorpdfstring de1ete de1ete	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{de1ete()}{de1ete()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::de1ete ($/;"	b
texorpdfstring de1ete de1ete	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{de1ete()}{de1ete()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::de1ete ($/;"	b
texorpdfstring empty const empty const	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{empty() const }{empty() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::resultset\\+::empty ($/;"	b
texorpdfstring empty const empty const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{empty() const }{empty() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::row\\+::empty ($/;"	b
texorpdfstring end const end const	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{end() const }{end() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf const\\+\\_\\+iterator} arg3\\+::db\\+::resultset\\+::end ($/;"	b
texorpdfstring end const end const	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{end() const }{end() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf const\\+\\_\\+iterator} arg3\\+::db\\+::resultset\\+::end ($/;"	b
texorpdfstring end const end const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{end() const }{end() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf const\\+\\_\\+iterator} arg3\\+::db\\+::row\\+::end ($/;"	b
texorpdfstring end end	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{end()}{end()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf iterator} arg3\\+::db\\+::resultset\\+::end ($/;"	b
texorpdfstring end end	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{end()}{end()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf iterator} arg3\\+::db\\+::resultset\\+::end ($/;"	b
texorpdfstring end end	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{end()}{end()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf iterator} arg3\\+::db\\+::row\\+::end ($/;"	b
texorpdfstring execute _ scalar execute_scalar	html/latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{execute\\+\\_\\+scalar()}{execute_scalar()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T $>$ T arg3\\+::db\\+::select\\+\\_\\+query\\+::execute\\+\\_\\+scalar ($/;"	b
texorpdfstring execute _ scalar execute_scalar	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{execute\\+\\_\\+scalar()}{execute_scalar()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T $>$ T arg3\\+::db\\+::select\\+\\_\\+query\\+::execute\\+\\_\\+scalar ($/;"	b
texorpdfstring execute const std function$ $ void const resultset $ $ funk execute const std function void const resultset funk	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{execute(const std\\+::function$<$ void(const resultset \\&)$>$ \\&funk)}{execute(const std::function< void(const resultset &)> &funk)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::select\\+\\_\\+query\\+::execute ($/;"	b
texorpdfstring execute const std string sql 0 execute const std string sql 0	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{execute(const std\\+::string \\&sql)=0}{execute(const std::string &sql)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf resultset\\+\\_\\+type} arg3\\+::db\\+::sqldb\\+::execute ($/;"	b
texorpdfstring execute const std string sql execute const std string sql	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{execute(const std\\+::string \\&sql)}{execute(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset\\+\\_\\+type} arg3\\+::db\\+::mysql\\+::db\\+::execute ($/;"	b
texorpdfstring execute const std string sql execute const std string sql	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{execute(const std\\+::string \\&sql)}{execute(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset\\+\\_\\+type} arg3\\+::db\\+::postgres\\+::db\\+::execute ($/;"	b
texorpdfstring execute const std string sql execute const std string sql	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{execute(const std\\+::string \\&sql)}{execute(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset\\+\\_\\+type} arg3\\+::db\\+::sqlite\\+::db\\+::execute ($/;"	b
texorpdfstring execute const string sql bool cache false execute const string sql bool cache false	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsubsection[{\\texorpdfstring{execute(const string \\&sql, bool cache=false)}{execute(const string &sql, bool cache=false)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset} arg3\\+::db\\+::mysql\\+\\_\\+db\\+::execute ($/;"	b
texorpdfstring execute execute	html/latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsubsection[{\\texorpdfstring{execute()}{execute()}}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::insert\\+\\_\\+query\\+::execute ($/;"	b
texorpdfstring execute execute	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{execute()}{execute()}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual int arg3\\+::db\\+::modify\\+\\_\\+query\\+::execute ($/;"	b
texorpdfstring execute execute	latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsubsection[{\\texorpdfstring{execute()}{execute()}}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::insert\\+\\_\\+query\\+::execute ($/;"	b
texorpdfstring execute execute	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{execute()}{execute()}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual int arg3\\+::db\\+::modify\\+\\_\\+query\\+::execute ($/;"	b
texorpdfstring execute execute	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{execute()}{execute()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset} arg3\\+::db\\+::select\\+\\_\\+query\\+::execute ($/;"	b
texorpdfstring exists const exists const	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{exists() const }{exists() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::exists ($/;"	b
texorpdfstring exists const exists const	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{exists() const }{exists() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::exists ($/;"	b
texorpdfstring exists const exists const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{exists() const }{exists() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::exists ($/;"	b
texorpdfstring find _ all const callback funk const find_all const callback funk const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+all(const callback \\&funk) const }{find_all(const callback &funk) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::find\\+\\_\\+all ($/;"	b
texorpdfstring find _ all const callback funk find_all const callback funk	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+all(const callback \\&funk)}{find_all(const callback &funk)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+all ($/;"	b
texorpdfstring find _ all const callback funk find_all const callback funk	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+all(const callback \\&funk)}{find_all(const callback &funk)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+all ($/;"	b
texorpdfstring find _ all const find_all const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+all() const }{find_all() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::vector$<$std\\+::shared\\+\\_\\+ptr$<$T$>$ $>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::find\\+\\_\\+all ($/;"	b
texorpdfstring find _ all find_all	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+all()}{find_all()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::vector$<$std\\+::shared\\+\\_\\+ptr$<$T$>$ $>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+all ($/;"	b
texorpdfstring find _ all find_all	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+all()}{find_all()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::vector$<$std\\+::shared\\+\\_\\+ptr$<$T$>$ $>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+all ($/;"	b
texorpdfstring find _ by _ id const sql _ value value const find_by_id const sql_value value const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+by\\+\\_\\+id(const sql\\+\\_\\+value \\&value) const }{find_by_id(const sql_value &value) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::shared\\+\\_\\+ptr$<$T$>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::find\\+\\_\\+by\\+\\_\\+id ($/;"	b
texorpdfstring find _ by _ id const sql _ value value find_by_id const sql_value value	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+by\\+\\_\\+id(const sql\\+\\_\\+value \\&value)}{find_by_id(const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::shared\\+\\_\\+ptr$<$T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+by\\+\\_\\+id ($/;"	b
texorpdfstring find _ by _ id const sql _ value value find_by_id const sql_value value	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+by\\+\\_\\+id(const sql\\+\\_\\+value \\&value)}{find_by_id(const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::shared\\+\\_\\+ptr$<$T$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+by\\+\\_\\+id ($/;"	b
texorpdfstring find _ by const std string name const sql _ value value const callback funk const find_by const std string name const sql_value value const callback funk const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+by(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value, const callback \\&funk) const }{find_by(const std::string &name, const sql_value &value, const callback &funk) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::find\\+\\_\\+by ($/;"	b
texorpdfstring find _ by const std string name const sql _ value value const callback funk find_by const std string name const sql_value value const callback funk	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+by(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value, const callback \\&funk)}{find_by(const std::string &name, const sql_value &value, const callback &funk)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+by ($/;"	b
texorpdfstring find _ by const std string name const sql _ value value const callback funk find_by const std string name const sql_value value const callback funk	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+by(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value, const callback \\&funk)}{find_by(const std::string &name, const sql_value &value, const callback &funk)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+by ($/;"	b
texorpdfstring find _ by const std string name const sql _ value value const find_by const std string name const sql_value value const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+by(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value) const }{find_by(const std::string &name, const sql_value &value) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::vector$<$std\\+::shared\\+\\_\\+ptr$<$T$>$ $>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::find\\+\\_\\+by ($/;"	b
texorpdfstring find _ by const std string name const sql _ value value find_by const std string name const sql_value value	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+by(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{find_by(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::vector$<$std\\+::shared\\+\\_\\+ptr$<$T$>$ $>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+by ($/;"	b
texorpdfstring find _ by const std string name const sql _ value value find_by const std string name const sql_value value	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+by(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{find_by(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::vector$<$std\\+::shared\\+\\_\\+ptr$<$T$>$ $>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::find\\+\\_\\+by ($/;"	b
texorpdfstring find _ one const std string name const sql _ value value const callback funk const find_one const std string name const sql_value value const callback funk const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+one(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value, const callback \\&funk) const }{find_one(const std::string &name, const sql_value &value, const callback &funk) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::find\\+\\_\\+one ($/;"	b
texorpdfstring find _ one const std string name const sql _ value value const find_one const std string name const sql_value value const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{find\\+\\_\\+one(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value) const }{find_one(const std::string &name, const sql_value &value) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::shared\\+\\_\\+ptr$<$T$>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::find\\+\\_\\+one ($/;"	b
texorpdfstring finish 0 finish 0	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{finish()=0}{finish()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::statement\\+::finish ($/;"	b
texorpdfstring finish 0 finish 0	latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{finish()=0}{finish()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::statement\\+::finish ($/;"	b
texorpdfstring finish finish	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{finish()}{finish()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::statement\\+::finish ($/;"	b
texorpdfstring finish finish	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{finish()}{finish()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::finish ($/;"	b
texorpdfstring finish finish	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{finish()}{finish()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+::statement\\+::finish ($/;"	b
texorpdfstring finish finish	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsubsection[{\\texorpdfstring{finish()}{finish()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+\\_\\+statement\\+::finish ($/;"	b
texorpdfstring finish finish	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{finish()}{finish()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::finish ($/;"	b
texorpdfstring finish finish	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{finish()}{finish()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite\\+::statement\\+::finish ($/;"	b
texorpdfstring for _ each const std function$ $ void const db column $ $ funk const for_each const std function void const db column funk const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{for\\+\\_\\+each(const std\\+::function$<$ void(const db\\+::column \\&)$>$ \\&funk) const }{for_each(const std::function< void(const db::column &)> &funk) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::row\\+::for\\+\\_\\+each ($/;"	b
texorpdfstring for _ each const std function$ $ void const row $ $ funk const for_each const std function void const row funk const	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{for\\+\\_\\+each(const std\\+::function$<$ void(const row \\&)$>$ \\&funk) const }{for_each(const std::function< void(const row &)> &funk) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::resultset\\+::for\\+\\_\\+each ($/;"	b
texorpdfstring for _ each const std function$ $ void const row _ type $ $ funk const for_each const std function void const row_type funk const	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{for\\+\\_\\+each(const std\\+::function$<$ void(const row\\+\\_\\+type \\&)$>$ \\&funk) const }{for_each(const std::function< void(const row_type &)> &funk) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::resultset\\+::for\\+\\_\\+each ($/;"	b
texorpdfstring format const format const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{format() const }{format() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf formats} arg3\\+::db\\+::sql\\+\\_\\+time\\+::format ($/;"	b
texorpdfstring formats formats	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{formats}{formats}}]{\\setlength{\\rightskip}{0pt plus 5cm}enum {\\bf arg3\\+::db\\+::sql\\+\\_\\+time\\+::formats}}\\hypertarget{classarg3_1_1db_1_1sql__time_ad944f0a3fffbd325f751fbc7f7512a22}{}\\label{classarg3_1_1db_1_1sql__time_ad944f0a3fffbd325f751fbc7f7512a22}$/;"	b
texorpdfstring from _ uri const std string value from_uri const std string value	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{from\\+\\_\\+uri(const std\\+::string \\&value)}{from_uri(const std::string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}static std\\+::shared\\+\\_\\+ptr$<${\\bf sqldb}$>$ arg3\\+::db\\+::sqldb\\+::from\\+\\_\\+uri ($/;"	b
texorpdfstring get const std string name const get const std string name const	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{get(const std\\+::string \\&name) const }{get(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ sql\\+\\_\\+value {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::get ($/;"	b
texorpdfstring get const std string name const get const std string name const	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{get(const std\\+::string \\&name) const }{get(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ sql\\+\\_\\+value {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::get ($/;"	b
texorpdfstring get const std string name const get const std string name const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{get(const std\\+::string \\&name) const }{get(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf sql\\+\\_\\+value} {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::get ($/;"	b
texorpdfstring get size _ t index const get size_t index const	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{get(size\\+\\_\\+t index) const }{get(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+B\\+I\\+ND$\\ast$ arg3\\+::db\\+::mysql\\+::binding\\+::get ($/;"	b
texorpdfstring get size _ t index const get size_t index const	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{get(size\\+\\_\\+t index) const }{get(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+B\\+I\\+ND$\\ast$ arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::get ($/;"	b
texorpdfstring group _ by const group_by const	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{group\\+\\_\\+by() const }{group_by() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::select\\+\\_\\+query\\+::group\\+\\_\\+by ($/;"	b
texorpdfstring group _ by const std string value group_by const std string value	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{group\\+\\_\\+by(const std\\+::string \\&value)}{group_by(const std::string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf select\\+\\_\\+query}\\& arg3\\+::db\\+::select\\+\\_\\+query\\+::group\\+\\_\\+by ($/;"	b
texorpdfstring has const std string name const has const std string name const	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{has(const std\\+::string \\&name) const }{has(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::has ($/;"	b
texorpdfstring has const std string name const has const std string name const	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{has(const std\\+::string \\&name) const }{has(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::has ($/;"	b
texorpdfstring has const std string name const has const std string name const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{has(const std\\+::string \\&name) const }{has(const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::has ($/;"	b
texorpdfstring hashcode const hashcode const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{hashcode() const }{hashcode() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}long arg3\\+::db\\+::sql\\+\\_\\+time\\+::hashcode ($/;"	b
texorpdfstring id _ column _ name const id_column_name const	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{id\\+\\_\\+column\\+\\_\\+name() const }{id_column_name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::string {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::id\\+\\_\\+column\\+\\_\\+name ($/;"	b
texorpdfstring id _ column _ name const id_column_name const	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{id\\+\\_\\+column\\+\\_\\+name() const }{id_column_name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::string {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::id\\+\\_\\+column\\+\\_\\+name ($/;"	b
texorpdfstring id _ column _ name const id_column_name const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{id\\+\\_\\+column\\+\\_\\+name() const }{id_column_name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::string {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::id\\+\\_\\+column\\+\\_\\+name ($/;"	b
texorpdfstring id const id const	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{id() const }{id() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ sql\\+\\_\\+value {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::id ($/;"	b
texorpdfstring id const id const	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{id() const }{id() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ sql\\+\\_\\+value {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::id ($/;"	b
texorpdfstring id const id const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{id() const }{id() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf sql\\+\\_\\+value} {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::id ($/;"	b
texorpdfstring impl const impl const	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{impl() const }{impl() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::shared\\+\\_\\+ptr$<${\\bf column\\+\\_\\+impl}$>$ arg3\\+::db\\+::column\\+::impl ($/;"	b
texorpdfstring impl const impl const	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{impl() const }{impl() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::shared\\+\\_\\+ptr$<${\\bf resultset\\+\\_\\+impl}$>$ arg3\\+::db\\+::resultset\\+::impl ($/;"	b
texorpdfstring impl const impl const	latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{impl() const }{impl() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::shared\\+\\_\\+ptr$<${\\bf column\\+\\_\\+impl}$>$ arg3\\+::db\\+::column\\+::impl ($/;"	b
texorpdfstring impl const impl const	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{impl() const }{impl() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::shared\\+\\_\\+ptr$<${\\bf resultset\\+\\_\\+impl}$>$ arg3\\+::db\\+::resultset\\+::impl ($/;"	b
texorpdfstring impl const impl const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{impl() const }{impl() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::shared\\+\\_\\+ptr$<${\\bf row\\+\\_\\+impl}$>$ arg3\\+::db\\+::row\\+::impl ($/;"	b
texorpdfstring init const row values init const row values	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{init(const row \\&values)}{init(const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::init ($/;"	b
texorpdfstring init const row values init const row values	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{init(const row \\&values)}{init(const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::init ($/;"	b
texorpdfstring init const row values init const row values	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{init(const row \\&values)}{init(const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::init ($/;"	b
texorpdfstring init init	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{init()}{init()}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::schema\\+::init ($/;"	b
texorpdfstring is _ open const 0 is_open const 0	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+open() const  =0}{is_open() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::sqldb\\+::is\\+\\_\\+open ($/;"	b
texorpdfstring is _ open const is_open const	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+open() const }{is_open() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::db\\+::is\\+\\_\\+open ($/;"	b
texorpdfstring is _ open const is_open const	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+open() const }{is_open() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+db\\+::is\\+\\_\\+open ($/;"	b
texorpdfstring is _ open const is_open const	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+open() const }{is_open() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+::db\\+::is\\+\\_\\+open ($/;"	b
texorpdfstring is _ open const is_open const	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+open() const }{is_open() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+\\_\\+db\\+::is\\+\\_\\+open ($/;"	b
texorpdfstring is _ open const is_open const	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+open() const }{is_open() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::db\\+::is\\+\\_\\+open ($/;"	b
texorpdfstring is _ time const is_time const	latex/classarg3_1_1db_1_1sql__value.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+time() const }{is_time() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sql\\+\\_\\+value\\+::is\\+\\_\\+time ($/;"	b
texorpdfstring is _ valid const 0 is_valid const 0	html/latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const  =0}{is_valid() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::column\\+\\_\\+impl\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const 0 is_valid const 0	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const  =0}{is_valid() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::statement\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const 0 is_valid const 0	latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const  =0}{is_valid() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::column\\+\\_\\+impl\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const 0 is_valid const 0	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const  =0}{is_valid() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::resultset\\+\\_\\+impl\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const 0 is_valid const 0	latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const  =0}{is_valid() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::row\\+\\_\\+impl\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const 0 is_valid const 0	latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const  =0}{is_valid() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::statement\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::row\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::statement\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql_1_1stmt__column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+row\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+row\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+row\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+row\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1postgres_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+::column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+::resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+::row\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+::statement\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+\\_\\+cached\\+\\_\\+column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+\\_\\+column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+\\_\\+statement\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::query\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::row\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::schema\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite3__cached__column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite3\\+\\_\\+cached\\+\\_\\+column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite3__column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite3\\+\\_\\+column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite_1_1cached__column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+row\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::column\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::resultset\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::row\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring is _ valid const is_valid const	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{is\\+\\_\\+valid() const }{is_valid() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::statement\\+::is\\+\\_\\+valid ($/;"	b
texorpdfstring join const join _ clause value join const join_clause value	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{join(const join\\+\\_\\+clause \\&value)}{join(const join_clause &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf select\\+\\_\\+query}\\& arg3\\+::db\\+::select\\+\\_\\+query\\+::join ($/;"	b
texorpdfstring join const std string table Name join type type join inner join const std string tableName join type type join inner	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{join(const std\\+::string \\&table\\+Name, join\\+::type type=join\\+::inner)}{join(const std::string &tableName, join::type type=join::inner)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf join\\+\\_\\+clause}\\& arg3\\+::db\\+::select\\+\\_\\+query\\+::join ($/;"	b
texorpdfstring last _ error 0 last_error 0	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()=0}{last_error()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::statement\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error 0 last_error 0	latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()=0}{last_error()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::statement\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error const 0 last_error const 0	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error() const  =0}{last_error() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::sqldb\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error const last_error const	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error() const }{last_error() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+::db\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error const last_error const	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error() const }{last_error() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}string arg3\\+::db\\+::mysql\\+\\_\\+db\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error const last_error const	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error() const }{last_error() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::postgres\\+::db\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error const last_error const	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error() const }{last_error() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sqlite\\+::db\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error last_error	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()}{last_error()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::query\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error last_error	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()}{last_error()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+::statement\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error last_error	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()}{last_error()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error last_error	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()}{last_error()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::postgres\\+::statement\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error last_error	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()}{last_error()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::postgres\\+\\_\\+statement\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error last_error	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()}{last_error()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::query\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error last_error	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()}{last_error()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ error last_error	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+error()}{last_error()}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sqlite\\+::statement\\+::last\\+\\_\\+error ($/;"	b
texorpdfstring last _ insert _ id 0 last_insert_id 0	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id()=0}{last_insert_id()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual long long arg3\\+::db\\+::statement\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id 0 last_insert_id 0	latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id()=0}{last_insert_id()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual long long arg3\\+::db\\+::statement\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id const 0 last_insert_id const 0	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id() const  =0}{last_insert_id() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual long long arg3\\+::db\\+::sqldb\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id const last_insert_id const	html/latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id() const }{last_insert_id() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::insert\\+\\_\\+query\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id const last_insert_id const	latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id() const }{last_insert_id() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::insert\\+\\_\\+query\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id const last_insert_id const	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id() const }{last_insert_id() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::mysql\\+::db\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id const last_insert_id const	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id() const }{last_insert_id() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::mysql\\+\\_\\+db\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id const last_insert_id const	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id() const }{last_insert_id() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::postgres\\+::db\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id const last_insert_id const	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id() const }{last_insert_id() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::sqlite\\+::db\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id last_insert_id	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id()}{last_insert_id()}}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::mysql\\+::statement\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id last_insert_id	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id()}{last_insert_id()}}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id last_insert_id	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id()}{last_insert_id()}}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::postgres\\+::statement\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id last_insert_id	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id()}{last_insert_id()}}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::postgres\\+\\_\\+statement\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id last_insert_id	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id()}{last_insert_id()}}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ insert _ id last_insert_id	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+insert\\+\\_\\+id()}{last_insert_id()}}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::sqlite\\+::statement\\+::last\\+\\_\\+insert\\+\\_\\+id ($/;"	b
texorpdfstring last _ number _ of _ changes 0 last_number_of_changes 0	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes()=0}{last_number_of_changes()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual int arg3\\+::db\\+::statement\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes 0 last_number_of_changes 0	latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes()=0}{last_number_of_changes()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual int arg3\\+::db\\+::statement\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes const 0 last_number_of_changes const 0	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes() const  =0}{last_number_of_changes() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual int arg3\\+::db\\+::sqldb\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes const last_number_of_changes const	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes() const }{last_number_of_changes() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::modify\\+\\_\\+query\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes const last_number_of_changes const	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes() const }{last_number_of_changes() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::modify\\+\\_\\+query\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes const last_number_of_changes const	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes() const }{last_number_of_changes() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::mysql\\+::db\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes const last_number_of_changes const	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes() const }{last_number_of_changes() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::mysql\\+\\_\\+db\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes const last_number_of_changes const	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes() const }{last_number_of_changes() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::postgres\\+::db\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes const last_number_of_changes const	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes() const }{last_number_of_changes() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::sqlite\\+::db\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes last_number_of_changes	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes()}{last_number_of_changes()}}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::mysql\\+::statement\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes last_number_of_changes	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes()}{last_number_of_changes()}}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes last_number_of_changes	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes()}{last_number_of_changes()}}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::postgres\\+::statement\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes last_number_of_changes	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes()}{last_number_of_changes()}}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::postgres\\+\\_\\+statement\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes last_number_of_changes	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes()}{last_number_of_changes()}}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring last _ number _ of _ changes last_number_of_changes	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes()}{last_number_of_changes()}}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::sqlite\\+::statement\\+::last\\+\\_\\+number\\+\\_\\+of\\+\\_\\+changes ($/;"	b
texorpdfstring limit const limit const	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{limit() const }{limit() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::select\\+\\_\\+query\\+::limit ($/;"	b
texorpdfstring limit const std string value limit const std string value	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{limit(const std\\+::string \\&value)}{limit(const std::string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf select\\+\\_\\+query}\\& arg3\\+::db\\+::select\\+\\_\\+query\\+::limit ($/;"	b
texorpdfstring modify _ query const std shared _ ptr$ $ schema $ $ schema const std vector$ $ std string $ $ columns modify_query const std shared_ptr schema schema const std vector std string columns	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{modify\\+\\_\\+query(const std\\+::shared\\+\\_\\+ptr$<$ schema $>$ \\&schema, const std\\+::vector$<$ std\\+::string $>$ \\&columns)}{modify_query(const std::shared_ptr< schema > &schema, const std::vector< std::string > &columns)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::modify\\+\\_\\+query\\+::modify\\+\\_\\+query ($/;"	b
texorpdfstring modify _ query const std shared _ ptr$ $ schema $ $ schema const std vector$ $ std string $ $ columns modify_query const std shared_ptr schema schema const std vector std string columns	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{modify\\+\\_\\+query(const std\\+::shared\\+\\_\\+ptr$<$ schema $>$ \\&schema, const std\\+::vector$<$ std\\+::string $>$ \\&columns)}{modify_query(const std::shared_ptr< schema > &schema, const std::vector< std::string > &columns)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::modify\\+\\_\\+query\\+::modify\\+\\_\\+query ($/;"	b
texorpdfstring modify _ query const std shared _ ptr$ $ schema $ $ schema modify_query const std shared_ptr schema schema	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{modify\\+\\_\\+query(const std\\+::shared\\+\\_\\+ptr$<$ schema $>$ \\&schema)}{modify_query(const std::shared_ptr< schema > &schema)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::modify\\+\\_\\+query\\+::modify\\+\\_\\+query ($/;"	b
texorpdfstring modify _ query const std shared _ ptr$ $ schema $ $ schema modify_query const std shared_ptr schema schema	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{modify\\+\\_\\+query(const std\\+::shared\\+\\_\\+ptr$<$ schema $>$ \\&schema)}{modify_query(const std::shared_ptr< schema > &schema)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::modify\\+\\_\\+query\\+::modify\\+\\_\\+query ($/;"	b
texorpdfstring modify _ query sqldb $ ast$db const std string table Name const std vector$ $ std string $ $ columns modify_query sqldb db const std string tableName const std vector std string columns	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{modify\\+\\_\\+query(sqldb $\\ast$db, const std\\+::string \\&table\\+Name, const std\\+::vector$<$ std\\+::string $>$ \\&columns)}{modify_query(sqldb *db, const std::string &tableName, const std::vector< std::string > &columns)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::modify\\+\\_\\+query\\+::modify\\+\\_\\+query ($/;"	b
texorpdfstring modify _ query sqldb $ ast$db const std string table Name const std vector$ $ std string $ $ columns modify_query sqldb db const std string tableName const std vector std string columns	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{modify\\+\\_\\+query(sqldb $\\ast$db, const std\\+::string \\&table\\+Name, const std\\+::vector$<$ std\\+::string $>$ \\&columns)}{modify_query(sqldb *db, const std::string &tableName, const std::vector< std::string > &columns)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::modify\\+\\_\\+query\\+::modify\\+\\_\\+query ($/;"	b
texorpdfstring modify _ query sqldb $ ast$db const std string table Name modify_query sqldb db const std string tableName	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{modify\\+\\_\\+query(sqldb $\\ast$db, const std\\+::string \\&table\\+Name)}{modify_query(sqldb *db, const std::string &tableName)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::modify\\+\\_\\+query\\+::modify\\+\\_\\+query ($/;"	b
texorpdfstring modify _ query sqldb $ ast$db const std string table Name modify_query sqldb db const std string tableName	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{modify\\+\\_\\+query(sqldb $\\ast$db, const std\\+::string \\&table\\+Name)}{modify_query(sqldb *db, const std::string &tableName)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::modify\\+\\_\\+query\\+::modify\\+\\_\\+query ($/;"	b
texorpdfstring mysql _ binding M Y S Q L _ B I N D $ ast$value size _ t size mysql_binding MYSQL_BIND value size_t size	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+binding(\\+M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+B\\+I\\+N\\+D $\\ast$value, size\\+\\_\\+t size)}{mysql_binding(MYSQL_BIND *value, size_t size)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::mysql\\+\\_\\+binding ($/;"	b
texorpdfstring mysql _ binding M Y S Q L _ F I E L D $ ast$fields size _ t size mysql_binding MYSQL_FIELD fields size_t size	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+binding(\\+M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+F\\+I\\+E\\+L\\+D $\\ast$fields, size\\+\\_\\+t size)}{mysql_binding(MYSQL_FIELD *fields, size_t size)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::mysql\\+\\_\\+binding ($/;"	b
texorpdfstring mysql _ binding const M Y S Q L _ B I N D value mysql_binding const MYSQL_BIND value	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+binding(const M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+B\\+I\\+N\\+D \\&value)}{mysql_binding(const MYSQL_BIND &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::mysql\\+\\_\\+binding ($/;"	b
texorpdfstring mysql _ binding mysql_binding	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+binding()}{mysql_binding()}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::mysql\\+\\_\\+binding ($/;"	b
texorpdfstring mysql _ binding size _ t size mysql_binding size_t size	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+binding(size\\+\\_\\+t size)}{mysql_binding(size_t size)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::mysql\\+\\_\\+binding ($/;"	b
texorpdfstring mysql _ cached _ resultset mysql _ db $ ast$db const std shared _ ptr$ $ M Y S Q L _ R E S $ $ res mysql_cached_resultset mysql_db db const std shared_ptr MYSQL_RES res	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+cached\\+\\_\\+resultset(mysql\\+\\_\\+db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&res)}{mysql_cached_resultset(mysql_db *db, const std::shared_ptr< MYSQL_RES > &res)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+resultset\\+::mysql\\+\\_\\+cached\\+\\_\\+resultset ($/;"	b
texorpdfstring mysql _ cached _ resultset sqldb $ ast$db const std shared _ ptr$ $ M Y S Q L _ S T M T $ $ stmt mysql_cached_resultset sqldb db const std shared_ptr MYSQL_STMT stmt	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+cached\\+\\_\\+resultset(sqldb $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+S\\+T\\+M\\+T $>$ \\&stmt)}{mysql_cached_resultset(sqldb *db, const std::shared_ptr< MYSQL_STMT > &stmt)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+resultset\\+::mysql\\+\\_\\+cached\\+\\_\\+resultset ($/;"	b
texorpdfstring mysql _ cached _ row sqldb $ ast$db const std shared _ ptr$ $ M Y S Q L _ R E S $ $ res mysql _ binding fields mysql_cached_row sqldb db const std shared_ptr MYSQL_RES res mysql_binding fields	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+cached\\+\\_\\+row(sqldb $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&res, mysql\\+\\_\\+binding \\&fields)}{mysql_cached_row(sqldb *db, const std::shared_ptr< MYSQL_RES > &res, mysql_binding &fields)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+row\\+::mysql\\+\\_\\+cached\\+\\_\\+row ($/;"	b
texorpdfstring mysql _ column const shared _ ptr$ $ M Y S Q L _ R E S $ $ res M Y S Q L _ R O W value size _ t index mysql_column const shared_ptr MYSQL_RES res MYSQL_ROW value size_t index	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+column(const shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&res, M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+O\\+W value, size\\+\\_\\+t index)}{mysql_column(const shared_ptr< MYSQL_RES > &res, MYSQL_ROW value, size_t index)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+column\\+::mysql\\+\\_\\+column ($/;"	b
texorpdfstring mysql _ db const uri conn Info mysql_db const uri connInfo	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+db(const uri \\&conn\\+Info)}{mysql_db(const uri &connInfo)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+db\\+::mysql\\+\\_\\+db ($/;"	b
texorpdfstring mysql _ resultset mysql _ db $ ast$db const std shared _ ptr$ $ M Y S Q L _ R E S $ $ res mysql_resultset mysql_db db const std shared_ptr MYSQL_RES res	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+resultset(mysql\\+\\_\\+db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&res)}{mysql_resultset(mysql_db *db, const std::shared_ptr< MYSQL_RES > &res)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+resultset\\+::mysql\\+\\_\\+resultset ($/;"	b
texorpdfstring mysql _ row mysql _ db $ ast$db const std shared _ ptr$ $ M Y S Q L _ R E S $ $ res M Y S Q L _ R O W row mysql_row mysql_db db const std shared_ptr MYSQL_RES res MYSQL_ROW row	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+row(mysql\\+\\_\\+db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&res, M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+O\\+W row)}{mysql_row(mysql_db *db, const std::shared_ptr< MYSQL_RES > &res, MYSQL_ROW row)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+row\\+::mysql\\+\\_\\+row ($/;"	b
texorpdfstring mysql _ statement mysql _ db $ ast$db mysql_statement mysql_db db	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+statement(mysql\\+\\_\\+db $\\ast$db)}{mysql_statement(mysql_db *db)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::mysql\\+\\_\\+statement ($/;"	b
texorpdfstring mysql _ stmt _ column const std string name const shared _ ptr$ $ mysql _ binding $ $ bindings size _ t position mysql_stmt_column const std string name const shared_ptr mysql_binding bindings size_t position	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+stmt\\+\\_\\+column(const std\\+::string \\&name, const shared\\+\\_\\+ptr$<$ mysql\\+\\_\\+binding $>$ \\&bindings, size\\+\\_\\+t position)}{mysql_stmt_column(const std::string &name, const shared_ptr< mysql_binding > &bindings, size_t position)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+column\\+::mysql\\+\\_\\+stmt\\+\\_\\+column ($/;"	b
texorpdfstring mysql _ stmt _ resultset mysql _ db $ ast$db const std shared _ ptr$ $ M Y S Q L _ S T M T $ $ stmt mysql_stmt_resultset mysql_db db const std shared_ptr MYSQL_STMT stmt	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+stmt\\+\\_\\+resultset(mysql\\+\\_\\+db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+S\\+T\\+M\\+T $>$ \\&stmt)}{mysql_stmt_resultset(mysql_db *db, const std::shared_ptr< MYSQL_STMT > &stmt)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+resultset\\+::mysql\\+\\_\\+stmt\\+\\_\\+resultset ($/;"	b
texorpdfstring mysql _ stmt _ row mysql _ db $ ast$db const std shared _ ptr$ $ M Y S Q L _ S T M T $ $ stmt const std shared _ ptr$ $ M Y S Q L _ R E S $ $ metadata const std shared _ ptr$ $ mysql _ binding $ $ fields mysql_stmt_row mysql_db db const std shared_ptr MYSQL_STMT stmt const std shared_ptr MYSQL_RES metadata const std shared_ptr mysql_binding fields	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{mysql\\+\\_\\+stmt\\+\\_\\+row(mysql\\+\\_\\+db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+S\\+T\\+M\\+T $>$ \\&stmt, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&metadata, const std\\+::shared\\+\\_\\+ptr$<$ mysql\\+\\_\\+binding $>$ \\&fields)}{mysql_stmt_row(mysql_db *db, const std::shared_ptr< MYSQL_STMT > &stmt, const std::shared_ptr< MYSQL_RES > &metadata, const std::shared_ptr< mysql_binding > &fields)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+row\\+::mysql\\+\\_\\+stmt\\+\\_\\+row ($/;"	b
texorpdfstring name const 0 name const 0	html/latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsubsection[{\\texorpdfstring{name() const  =0}{name() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::column\\+\\_\\+impl\\+::name ($/;"	b
texorpdfstring name const 0 name const 0	latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsubsection[{\\texorpdfstring{name() const  =0}{name() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::column\\+\\_\\+impl\\+::name ($/;"	b
texorpdfstring name const name const	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1mysql_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+::column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1mysql_1_1stmt__column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+\\_\\+column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1postgres_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::postgres\\+::column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::postgres\\+\\_\\+cached\\+\\_\\+column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::postgres\\+\\_\\+column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1sqlite3__cached__column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sqlite3\\+\\_\\+cached\\+\\_\\+column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1sqlite3__column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sqlite3\\+\\_\\+column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1sqlite_1_1cached__column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+column\\+::name ($/;"	b
texorpdfstring name const name const	latex/classarg3_1_1db_1_1sqlite_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{name() const }{name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sqlite\\+::column\\+::name ($/;"	b
texorpdfstring next 0 next 0	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsubsection[{\\texorpdfstring{next()=0}{next()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::resultset\\+\\_\\+impl\\+::next ($/;"	b
texorpdfstring next next	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::resultset\\+::next ($/;"	b
texorpdfstring next next	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::resultset\\+::next ($/;"	b
texorpdfstring next next	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+resultset\\+::next ($/;"	b
texorpdfstring next next	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+resultset\\+::next ($/;"	b
texorpdfstring next next	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+resultset\\+::next ($/;"	b
texorpdfstring next next	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+resultset\\+::next ($/;"	b
texorpdfstring next next	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+::resultset\\+::next ($/;"	b
texorpdfstring next next	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::resultset\\+::next ($/;"	b
texorpdfstring next next	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+resultset\\+::next ($/;"	b
texorpdfstring next next	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{next()}{next()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::resultset\\+::next ($/;"	b
texorpdfstring on _ record _ init const row values on_record_init const row values	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{on\\+\\_\\+record\\+\\_\\+init(const row \\&values)}{on_record_init(const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ virtual void {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::on\\+\\_\\+record\\+\\_\\+init ($/;"	b
texorpdfstring open 0 open 0	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{open()=0}{open()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::sqldb\\+::open ($/;"	b
texorpdfstring open open	latex/classarg3_1_1db_1_1mysql_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{open()}{open()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::db\\+::open ($/;"	b
texorpdfstring open open	latex/classarg3_1_1db_1_1mysql__db.tex	/^\\subsubsection[{\\texorpdfstring{open()}{open()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+db\\+::open ($/;"	b
texorpdfstring open open	latex/classarg3_1_1db_1_1postgres_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{open()}{open()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+::db\\+::open ($/;"	b
texorpdfstring open open	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsubsection[{\\texorpdfstring{open()}{open()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+\\_\\+db\\+::open ($/;"	b
texorpdfstring open open	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{open()}{open()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite\\+::db\\+::open ($/;"	b
texorpdfstring operator	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{operator[](const std\\+::string \\&name) const }{operator[](const std::string &name) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::row\\+::operator\\mbox{[}$\\,$\\mbox{]} ($/;"	b
texorpdfstring operator	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{operator[](size\\+\\_\\+t position) const }{operator[](size_t position) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+type} arg3\\+::db\\+::row\\+::operator\\mbox{[}$\\,$\\mbox{]} ($/;"	b
texorpdfstring operator	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{operator[](size\\+\\_\\+t index) const }{operator[](size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column\\+\\_\\+definition} arg3\\+::db\\+::schema\\+::operator\\mbox{[}$\\,$\\mbox{]} ($/;"	b
texorpdfstring operator base _ record other operator base_record other	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{operator=(base\\+\\_\\+record \\&\\&other)}{operator=(base_record &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf base\\+\\_\\+record}\\& {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::operator= ($/;"	b
texorpdfstring operator base _ record other operator base_record other	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{operator=(base\\+\\_\\+record \\&\\&other)}{operator=(base_record &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf base\\+\\_\\+record}\\& {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::operator= ($/;"	b
texorpdfstring operator column other operator column other	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{operator=(column \\&\\&other)}{operator=(column &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column}\\& arg3\\+::db\\+::column\\+::operator= ($/;"	b
texorpdfstring operator column other operator column other	latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{operator=(column \\&\\&other)}{operator=(column &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column}\\& arg3\\+::db\\+::column\\+::operator= ($/;"	b
texorpdfstring operator const base _ record other operator const base_record other	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{operator=(const base\\+\\_\\+record \\&other)}{operator=(const base_record &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf base\\+\\_\\+record}\\& {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::operator= ($/;"	b
texorpdfstring operator const base _ record other operator const base_record other	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{operator=(const base\\+\\_\\+record \\&other)}{operator=(const base_record &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf base\\+\\_\\+record}\\& {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::operator= ($/;"	b
texorpdfstring operator const column other operator const column other	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{operator=(const column \\&other)}{operator=(const column &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column}\\& arg3\\+::db\\+::column\\+::operator= ($/;"	b
texorpdfstring operator const column other operator const column other	latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{operator=(const column \\&other)}{operator=(const column &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf column}\\& arg3\\+::db\\+::column\\+::operator= ($/;"	b
texorpdfstring operator const query other operator const query other	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{operator=(const query \\&other)}{operator=(const query &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::operator= ($/;"	b
texorpdfstring operator const query other operator const query other	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{operator=(const query \\&other)}{operator=(const query &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::operator= ($/;"	b
texorpdfstring operator const record other operator const record other	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{operator=(const record \\&other)}{operator=(const record &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf record}\\& {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::operator= ($/;"	b
texorpdfstring operator query other operator query other	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{operator=(query \\&\\&other)}{operator=(query &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::operator= ($/;"	b
texorpdfstring operator query other operator query other	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{operator=(query \\&\\&other)}{operator=(query &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf query}\\& arg3\\+::db\\+::query\\+::operator= ($/;"	b
texorpdfstring operator record other operator record other	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{operator=(record \\&\\&other)}{operator=(record &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf record}\\& {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::operator= ($/;"	b
texorpdfstring operator$ $$ $ std ostream os const column _ definition def operator std ostream os const column_definition def	latex/schema_8h.tex	/^\\subsubsection[{\\texorpdfstring{operator$<$$<$(std\\+::ostream \\&os, const column\\+\\_\\+definition \\&def)}{operator<<(std::ostream &os, const column_definition &def)}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::ostream\\& arg3\\+::db\\+::operator$<$$<$ ($/;"	b
texorpdfstring operator$ ast$ operator	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{operator$\\ast$()}{operator*()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row} arg3\\+::db\\+::resultset\\+::operator$\\ast$ ($/;"	b
texorpdfstring operator$ ast$ operator	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{operator$\\ast$()}{operator*()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf row\\+\\_\\+type} arg3\\+::db\\+::resultset\\+::operator$\\ast$ ($/;"	b
texorpdfstring order _ by const order_by const	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{order\\+\\_\\+by() const }{order_by() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::select\\+\\_\\+query\\+::order\\+\\_\\+by ($/;"	b
texorpdfstring order _ by const std string value order_by const std string value	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{order\\+\\_\\+by(const std\\+::string \\&value)}{order_by(const std::string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf select\\+\\_\\+query}\\& arg3\\+::db\\+::select\\+\\_\\+query\\+::order\\+\\_\\+by ($/;"	b
texorpdfstring parse const std string url parse const std string url	html/latex/structarg3_1_1db_1_1uri.tex	/^\\subsubsection[{\\texorpdfstring{parse(const std\\+::string \\&url)}{parse(const std::string &url)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::uri\\+::parse ($/;"	b
texorpdfstring parse const std string url parse const std string url	latex/structarg3_1_1db_1_1uri.tex	/^\\subsubsection[{\\texorpdfstring{parse(const std\\+::string \\&url)}{parse(const std::string &url)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::uri\\+::parse ($/;"	b
texorpdfstring parse const std string url parse const std string url	latex/structarg3_1_1db_1_1uri__type.tex	/^\\subsubsection[{\\texorpdfstring{parse(const std\\+::string \\&url)}{parse(const std::string &url)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::uri\\+\\_\\+type\\+::parse ($/;"	b
texorpdfstring postgres _ binding postgres_binding	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsubsection[{\\texorpdfstring{postgres\\+\\_\\+binding()}{postgres_binding()}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+\\_\\+binding\\+::postgres\\+\\_\\+binding ($/;"	b
texorpdfstring postgres _ binding size _ t size postgres_binding size_t size	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsubsection[{\\texorpdfstring{postgres\\+\\_\\+binding(size\\+\\_\\+t size)}{postgres_binding(size_t size)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+\\_\\+binding\\+::postgres\\+\\_\\+binding ($/;"	b
texorpdfstring postgres _ cached _ column const std shared _ ptr$ $ P Gresult $ $ stmt size _ t row size _ t column postgres_cached_column const std shared_ptr PGresult stmt size_t row size_t column	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\subsubsection[{\\texorpdfstring{postgres\\+\\_\\+cached\\+\\_\\+column(const std\\+::shared\\+\\_\\+ptr$<$ P\\+Gresult $>$ \\&stmt, size\\+\\_\\+t row, size\\+\\_\\+t column)}{postgres_cached_column(const std::shared_ptr< PGresult > &stmt, size_t row, size_t column)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+\\_\\+cached\\+\\_\\+column\\+::postgres\\+\\_\\+cached\\+\\_\\+column ($/;"	b
texorpdfstring postgres _ column const std shared _ ptr$ $ P Gresult $ $ stmt int row int column postgres_column const std shared_ptr PGresult stmt int row int column	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\subsubsection[{\\texorpdfstring{postgres\\+\\_\\+column(const std\\+::shared\\+\\_\\+ptr$<$ P\\+Gresult $>$ \\&stmt, int row, int column)}{postgres_column(const std::shared_ptr< PGresult > &stmt, int row, int column)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+\\_\\+column\\+::postgres\\+\\_\\+column ($/;"	b
texorpdfstring postgres _ db const uri info postgres_db const uri info	latex/classarg3_1_1db_1_1postgres__db.tex	/^\\subsubsection[{\\texorpdfstring{postgres\\+\\_\\+db(const uri \\&info)}{postgres_db(const uri &info)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+\\_\\+db\\+::postgres\\+\\_\\+db ($/;"	b
texorpdfstring prepare const std string sql 0 prepare const std string sql 0	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)=0}{prepare(const std::string &sql)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::statement\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql 0 prepare const std string sql 0	latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)=0}{prepare(const std::string &sql)=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::statement\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::bind\\+\\_\\+mapping\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::mysql\\+::binding\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::statement\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::postgres\\+::binding\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+::statement\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+\\_\\+statement\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::query\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::prepare ($/;"	b
texorpdfstring prepare const std string sql prepare const std string sql	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{prepare(const std\\+::string \\&sql)}{prepare(const std::string &sql)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite\\+::statement\\+::prepare ($/;"	b
texorpdfstring primary _ keys const primary_keys const	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{primary\\+\\_\\+keys() const }{primary_keys() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::vector$<$std\\+::string$>$ arg3\\+::db\\+::schema\\+::primary\\+\\_\\+keys ($/;"	b
texorpdfstring query _ schema const std string table Name std vector$ $ column _ definition $ $ columns query_schema const std string tableName std vector column_definition columns	latex/classarg3_1_1db_1_1sqlite3__db.tex	/^\\subsubsection[{\\texorpdfstring{query\\+\\_\\+schema(const std\\+::string \\&table\\+Name, std\\+::vector$<$ column\\+\\_\\+definition $>$ \\&columns)}{query_schema(const std::string &tableName, std::vector< column_definition > &columns)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite3\\+\\_\\+db\\+::query\\+\\_\\+schema ($/;"	b
texorpdfstring query _ schema const std string table Name std vector$ $ column _ definition $ $ columns query_schema const std string tableName std vector column_definition columns	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{query\\+\\_\\+schema(const std\\+::string \\&table\\+Name, std\\+::vector$<$ column\\+\\_\\+definition $>$ \\&columns)}{query_schema(const std::string &tableName, std::vector< column_definition > &columns)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite\\+::db\\+::query\\+\\_\\+schema ($/;"	b
texorpdfstring query _ schema const std string tablename std vector$ $ column _ definition $ $ columns query_schema const std string tablename std vector column_definition columns	html/latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{query\\+\\_\\+schema(const std\\+::string \\&tablename, std\\+::vector$<$ column\\+\\_\\+definition $>$ \\&columns)}{query_schema(const std::string &tablename, std::vector< column_definition > &columns)}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::sqldb\\+::query\\+\\_\\+schema ($/;"	b
texorpdfstring query _ schema const std string tablename std vector$ $ column _ definition $ $ columns query_schema const std string tablename std vector column_definition columns	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{query\\+\\_\\+schema(const std\\+::string \\&tablename, std\\+::vector$<$ column\\+\\_\\+definition $>$ \\&columns)}{query_schema(const std::string &tablename, std::vector< column_definition > &columns)}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::sqldb\\+::query\\+\\_\\+schema ($/;"	b
texorpdfstring query const query other noexcept query const query other noexcept	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{query(const query \\&other) noexcept}{query(const query &other) noexcept}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::query\\+::query ($/;"	b
texorpdfstring query const query other query const query other	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{query(const query \\&other)}{query(const query &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::query\\+::query ($/;"	b
texorpdfstring query query other noexcept query query other noexcept	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{query(query \\&\\&other) noexcept}{query(query &&other) noexcept}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::query\\+::query ($/;"	b
texorpdfstring query query other query query other	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{query(query \\&\\&other)}{query(query &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::query\\+::query ($/;"	b
texorpdfstring query sqldb $ ast$db query sqldb db	html/latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{query(sqldb $\\ast$db)}{query(sqldb *db)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::query\\+::query ($/;"	b
texorpdfstring query sqldb $ ast$db query sqldb db	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{query(sqldb $\\ast$db)}{query(sqldb *db)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::query\\+::query ($/;"	b
texorpdfstring record const record other record const record other	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{record(const record \\&other)}{record(const record &other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::{\\bf record} ($/;"	b
texorpdfstring record const std shared _ ptr$ $ schema _ type $ $ schema const std string column Name V value record const std shared_ptr schema_type schema const std string columnName V value	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{record(const std\\+::shared\\+\\_\\+ptr$<$ schema\\+\\_\\+type $>$ \\&schema, const std\\+::string \\&column\\+Name, V value)}{record(const std::shared_ptr< schema_type > &schema, const std::string &columnName, V value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ template$<$typename V $>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::{\\bf record} ($/;"	b
texorpdfstring record const std shared _ ptr$ $ schema _ type $ $ schema const std string column Name const row values record const std shared_ptr schema_type schema const std string columnName const row values	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{record(const std\\+::shared\\+\\_\\+ptr$<$ schema\\+\\_\\+type $>$ \\&schema, const std\\+::string \\&column\\+Name, const row \\&values)}{record(const std::shared_ptr< schema_type > &schema, const std::string &columnName, const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::{\\bf record} ($/;"	b
texorpdfstring record const std shared _ ptr$ $ schema _ type $ $ schema const std string column Name record const std shared_ptr schema_type schema const std string columnName	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{record(const std\\+::shared\\+\\_\\+ptr$<$ schema\\+\\_\\+type $>$ \\&schema, const std\\+::string \\&column\\+Name)}{record(const std::shared_ptr< schema_type > &schema, const std::string &columnName)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::{\\bf record} ($/;"	b
texorpdfstring record record other record record other	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{record(record \\&\\&other)}{record(record &&other)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::{\\bf record} ($/;"	b
texorpdfstring record sqldb $ ast$db const std string table Name const std string column Name const V value record sqldb db const std string tableName const std string columnName const V value	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{record(sqldb $\\ast$db, const std\\+::string \\&table\\+Name, const std\\+::string \\&column\\+Name, const V \\&value)}{record(sqldb *db, const std::string &tableName, const std::string &columnName, const V &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ template$<$typename V $>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::{\\bf record} ($/;"	b
texorpdfstring record sqldb $ ast$db const std string table Name const std string column Name const row values record sqldb db const std string tableName const std string columnName const row values	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{record(sqldb $\\ast$db, const std\\+::string \\&table\\+Name, const std\\+::string \\&column\\+Name, const row \\&values)}{record(sqldb *db, const std::string &tableName, const std::string &columnName, const row &values)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::{\\bf record} ($/;"	b
texorpdfstring record sqldb $ ast$db const std string tablename const std string id Column Name record sqldb db const std string tablename const std string idColumnName	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{record(sqldb $\\ast$db, const std\\+::string \\&tablename, const std\\+::string \\&id\\+Column\\+Name)}{record(sqldb *db, const std::string &tablename, const std::string &idColumnName)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::{\\bf record} ($/;"	b
texorpdfstring refresh _ by const std string name refresh_by const std string name	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{refresh\\+\\_\\+by(const std\\+::string \\&name)}{refresh_by(const std::string &name)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::refresh\\+\\_\\+by ($/;"	b
texorpdfstring refresh _ by const std string name refresh_by const std string name	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{refresh\\+\\_\\+by(const std\\+::string \\&name)}{refresh_by(const std::string &name)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::refresh\\+\\_\\+by ($/;"	b
texorpdfstring refresh _ by const std string name refresh_by const std string name	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{refresh\\+\\_\\+by(const std\\+::string \\&name)}{refresh_by(const std::string &name)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::refresh\\+\\_\\+by ($/;"	b
texorpdfstring refresh refresh	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{refresh()}{refresh()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::refresh ($/;"	b
texorpdfstring refresh refresh	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{refresh()}{refresh()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::refresh ($/;"	b
texorpdfstring refresh refresh	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{refresh()}{refresh()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::refresh ($/;"	b
texorpdfstring reset 0 reset 0	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{reset()=0}{reset()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::statement\\+::reset ($/;"	b
texorpdfstring reset 0 reset 0	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsubsection[{\\texorpdfstring{reset()=0}{reset()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::resultset\\+\\_\\+impl\\+::reset ($/;"	b
texorpdfstring reset 0 reset 0	latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{reset()=0}{reset()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::statement\\+::reset ($/;"	b
texorpdfstring reset reset	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1bind__mapping.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::bind\\+\\_\\+mapping\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::binding\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::statement\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+::binding\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+::resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+::statement\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+\\_\\+binding\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::postgres\\+\\_\\+statement\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1query.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual void arg3\\+::db\\+::query\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::select\\+\\_\\+query\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite\\+::resultset\\+::reset ($/;"	b
texorpdfstring reset reset	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{reset()}{reset()}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite\\+::statement\\+::reset ($/;"	b
texorpdfstring result 0 result 0	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{result()=0}{result()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::statement\\+::result ($/;"	b
texorpdfstring result 0 result 0	latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{result()=0}{result()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual bool arg3\\+::db\\+::statement\\+::result ($/;"	b
texorpdfstring result result	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{result()}{result()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+::statement\\+::result ($/;"	b
texorpdfstring result result	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{result()}{result()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::result ($/;"	b
texorpdfstring result result	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{result()}{result()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+::statement\\+::result ($/;"	b
texorpdfstring result result	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsubsection[{\\texorpdfstring{result()}{result()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::postgres\\+\\_\\+statement\\+::result ($/;"	b
texorpdfstring result result	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{result()}{result()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::result ($/;"	b
texorpdfstring result result	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{result()}{result()}}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sqlite\\+::statement\\+::result ($/;"	b
texorpdfstring results 0 results 0	html/latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{results()=0}{results()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf resultset} arg3\\+::db\\+::statement\\+::results ($/;"	b
texorpdfstring results 0 results 0	latex/classarg3_1_1db_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{results()=0}{results()=0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf resultset\\+\\_\\+type} arg3\\+::db\\+::statement\\+::results ($/;"	b
texorpdfstring results results	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{results()}{results()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset\\+\\_\\+type} arg3\\+::db\\+::mysql\\+::statement\\+::results ($/;"	b
texorpdfstring results results	latex/classarg3_1_1db_1_1mysql__statement.tex	/^\\subsubsection[{\\texorpdfstring{results()}{results()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset} arg3\\+::db\\+::mysql\\+\\_\\+statement\\+::results ($/;"	b
texorpdfstring results results	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{results()}{results()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset\\+\\_\\+type} arg3\\+::db\\+::postgres\\+::statement\\+::results ($/;"	b
texorpdfstring results results	latex/classarg3_1_1db_1_1postgres__statement.tex	/^\\subsubsection[{\\texorpdfstring{results()}{results()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset} arg3\\+::db\\+::postgres\\+\\_\\+statement\\+::results ($/;"	b
texorpdfstring results results	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{results()}{results()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset} arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::results ($/;"	b
texorpdfstring results results	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{results()}{results()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf resultset\\+\\_\\+type} arg3\\+::db\\+::sqlite\\+::statement\\+::results ($/;"	b
texorpdfstring resultset const std shared _ ptr$ $ resultset _ impl $ $ impl resultset const std shared_ptr resultset_impl impl	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{resultset(const std\\+::shared\\+\\_\\+ptr$<$ resultset\\+\\_\\+impl $>$ \\&impl)}{resultset(const std::shared_ptr< resultset_impl > &impl)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::resultset\\+::resultset ($/;"	b
texorpdfstring resultset const std shared _ ptr$ $ resultset _ impl $ $ impl resultset const std shared_ptr resultset_impl impl	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{resultset(const std\\+::shared\\+\\_\\+ptr$<$ resultset\\+\\_\\+impl $>$ \\&impl)}{resultset(const std::shared_ptr< resultset_impl > &impl)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::resultset\\+::resultset ($/;"	b
texorpdfstring resultset mysql db $ ast$db const std shared _ ptr$ $ M Y S Q L _ R E S $ $ res resultset mysql db db const std shared_ptr MYSQL_RES res	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{resultset(mysql\\+::db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&res)}{resultset(mysql::db *db, const std::shared_ptr< MYSQL_RES > &res)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::resultset\\+::resultset ($/;"	b
texorpdfstring resultset postgres db $ ast$db const std shared _ ptr$ $ P Gresult $ $ stmt resultset postgres db db const std shared_ptr PGresult stmt	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{resultset(postgres\\+::db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ P\\+Gresult $>$ \\&stmt)}{resultset(postgres::db *db, const std::shared_ptr< PGresult > &stmt)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+::resultset\\+::resultset ($/;"	b
texorpdfstring resultset sqlite db $ ast$db const std shared _ ptr$ $ sqlite3 _ stmt $ $ stmt resultset sqlite db db const std shared_ptr sqlite3_stmt stmt	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{resultset(sqlite\\+::db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ sqlite3\\+\\_\\+stmt $>$ \\&stmt)}{resultset(sqlite::db *db, const std::shared_ptr< sqlite3_stmt > &stmt)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqlite\\+::resultset\\+::resultset ($/;"	b
texorpdfstring row const std shared _ ptr$ $ row _ impl $ $ impl row const std shared_ptr row_impl impl	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{row(const std\\+::shared\\+\\_\\+ptr$<$ row\\+\\_\\+impl $>$ \\&impl)}{row(const std::shared_ptr< row_impl > &impl)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::row\\+::row ($/;"	b
texorpdfstring row mysql db $ ast$db const std shared _ ptr$ $ M Y S Q L _ R E S $ $ res M Y S Q L _ R O W row row mysql db db const std shared_ptr MYSQL_RES res MYSQL_ROW row	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{row(mysql\\+::db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&res, M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+O\\+W row)}{row(mysql::db *db, const std::shared_ptr< MYSQL_RES > &res, MYSQL_ROW row)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::row\\+::row ($/;"	b
texorpdfstring row postgres db $ ast$db const std shared _ ptr$ $ P Gresult $ $ stmt int row row postgres db db const std shared_ptr PGresult stmt int row	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{row(postgres\\+::db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ P\\+Gresult $>$ \\&stmt, int row)}{row(postgres::db *db, const std::shared_ptr< PGresult > &stmt, int row)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+::row\\+::row ($/;"	b
texorpdfstring row row	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{row()}{row()}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::row\\+::row ($/;"	b
texorpdfstring row sqlite db $ ast$db const std shared _ ptr$ $ sqlite3 _ stmt $ $ stmt row sqlite db db const std shared_ptr sqlite3_stmt stmt	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{row(sqlite\\+::db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ sqlite3\\+\\_\\+stmt $>$ \\&stmt)}{row(sqlite::db *db, const std::shared_ptr< sqlite3_stmt > &stmt)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqlite\\+::row\\+::row ($/;"	b
texorpdfstring save save	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{save()}{save()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::save ($/;"	b
texorpdfstring save save	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{save()}{save()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::save ($/;"	b
texorpdfstring save save	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{save()}{save()}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ bool {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::save ($/;"	b
texorpdfstring schema const schema const	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{schema() const }{schema() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::shared\\+\\_\\+ptr$<${\\bf schema\\+\\_\\+type}$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf schema} ($/;"	b
texorpdfstring schema const schema const	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{schema() const }{schema() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::shared\\+\\_\\+ptr$<${\\bf schema\\+\\_\\+type}$>$ {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::{\\bf schema} ($/;"	b
texorpdfstring schema const schema const	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{schema() const }{schema() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ std\\+::shared\\+\\_\\+ptr$<${\\bf schema\\+\\_\\+type}$>$ {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::{\\bf schema} ($/;"	b
texorpdfstring schema sqldb $ ast$db const std string tablename schema sqldb db const std string tablename	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{schema(sqldb $\\ast$db, const std\\+::string \\&tablename)}{schema(sqldb *db, const std::string &tablename)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::schema\\+::schema ($/;"	b
texorpdfstring schemas schemas	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{schemas()}{schemas()}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf schema\\+\\_\\+factory}$\\ast$ arg3\\+::db\\+::sqldb\\+::schemas ($/;"	b
texorpdfstring select _ query const std shared _ ptr$ $ schema $ $ schema select_query const std shared_ptr schema schema	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{select\\+\\_\\+query(const std\\+::shared\\+\\_\\+ptr$<$ schema $>$ \\&schema)}{select_query(const std::shared_ptr< schema > &schema)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::select\\+\\_\\+query\\+::select\\+\\_\\+query ($/;"	b
texorpdfstring select _ query sqldb $ ast$db const std string table Name const std vector$ $ std string $ $ columns select_query sqldb db const std string tableName const std vector std string columns	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{select\\+\\_\\+query(sqldb $\\ast$db, const std\\+::string \\&table\\+Name, const std\\+::vector$<$ std\\+::string $>$ \\&columns)}{select_query(sqldb *db, const std::string &tableName, const std::vector< std::string > &columns)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::select\\+\\_\\+query\\+::select\\+\\_\\+query ($/;"	b
texorpdfstring select _ query sqldb $ ast$db const std string table Name select_query sqldb db const std string tableName	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{select\\+\\_\\+query(sqldb $\\ast$db, const std\\+::string \\&table\\+Name)}{select_query(sqldb *db, const std::string &tableName)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::select\\+\\_\\+query\\+::select\\+\\_\\+query ($/;"	b
texorpdfstring set _ cache _ level cache level level set_cache_level cache level level	latex/classarg3_1_1db_1_1sqlite_1_1db.tex	/^\\subsubsection[{\\texorpdfstring{set\\+\\_\\+cache\\+\\_\\+level(cache\\+::level level)}{set_cache_level(cache::level level)}}]{\\setlength{\\rightskip}{0pt plus 5cm}void arg3\\+::db\\+::sqlite\\+::db\\+::set\\+\\_\\+cache\\+\\_\\+level ($/;"	b
texorpdfstring set _ flags int value set_flags int value	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{set\\+\\_\\+flags(int value)}{set_flags(int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf modify\\+\\_\\+query}\\& arg3\\+::db\\+::modify\\+\\_\\+query\\+::set\\+\\_\\+flags ($/;"	b
texorpdfstring set _ flags int value set_flags int value	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{set\\+\\_\\+flags(int value)}{set_flags(int value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf modify\\+\\_\\+query}\\& arg3\\+::db\\+::modify\\+\\_\\+query\\+::set\\+\\_\\+flags ($/;"	b
texorpdfstring set _ id const sql _ value value set_id const sql_value value	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{set\\+\\_\\+id(const sql\\+\\_\\+value \\&value)}{set_id(const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::set\\+\\_\\+id ($/;"	b
texorpdfstring set _ id const sql _ value value set_id const sql_value value	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{set\\+\\_\\+id(const sql\\+\\_\\+value \\&value)}{set_id(const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::set\\+\\_\\+id ($/;"	b
texorpdfstring set _ id const sql _ value value set_id const sql_value value	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{set\\+\\_\\+id(const sql\\+\\_\\+value \\&value)}{set_id(const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::set\\+\\_\\+id ($/;"	b
texorpdfstring set const std string name const sql _ value value set const std string name const sql_value value	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{set(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{set(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::set ($/;"	b
texorpdfstring set const std string name const sql _ value value set const std string name const sql_value value	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{set(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{set(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::set ($/;"	b
texorpdfstring set const std string name const sql _ value value set const std string name const sql_value value	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{set(const std\\+::string \\&name, const sql\\+\\_\\+value \\&value)}{set(const std::string &name, const sql_value &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::set ($/;"	b
texorpdfstring size const 0 size const 0	latex/classarg3_1_1db_1_1resultset__impl.tex	/^\\subsubsection[{\\texorpdfstring{size() const  =0}{size() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual size\\+\\_\\+t arg3\\+::db\\+::resultset\\+\\_\\+impl\\+::size ($/;"	b
texorpdfstring size const 0 size const 0	latex/classarg3_1_1db_1_1row__impl.tex	/^\\subsubsection[{\\texorpdfstring{size() const  =0}{size() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual size\\+\\_\\+t arg3\\+::db\\+::row\\+\\_\\+impl\\+::size ($/;"	b
texorpdfstring size const size const	html/latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+::binding\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+::resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+::row\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+row\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql__cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql__cached__row.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+\\_\\+cached\\+\\_\\+row\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql__resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+\\_\\+resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql__row.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+\\_\\+row\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql__stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1mysql__stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+row\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::postgres\\+::binding\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1postgres_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::postgres\\+::resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1postgres_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::postgres\\+::row\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::postgres\\+\\_\\+binding\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::row\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::schema\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::sql\\+\\_\\+time\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1sqlite_1_1cached__resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1sqlite_1_1cached__row.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+row\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1sqlite_1_1resultset.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::sqlite\\+::resultset\\+::size ($/;"	b
texorpdfstring size const size const	latex/classarg3_1_1db_1_1sqlite_1_1row.tex	/^\\subsubsection[{\\texorpdfstring{size() const }{size() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}size\\+\\_\\+t arg3\\+::db\\+::sqlite\\+::row\\+::size ($/;"	b
texorpdfstring sql _ time time _ t value formats format T I M E S T A M P sql_time time_t value formats format TIMESTAMP	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+time(time\\+\\_\\+t value, formats format=\\+T\\+I\\+M\\+E\\+S\\+T\\+A\\+M\\+P)}{sql_time(time_t value, formats format=TIMESTAMP)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sql\\+\\_\\+time\\+::sql\\+\\_\\+time ($/;"	b
texorpdfstring sql _ type const sql_type const	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+type() const }{sql_type() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::mysql\\+\\_\\+column\\+::sql\\+\\_\\+type ($/;"	b
texorpdfstring sql _ type const sql_type const	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+type() const }{sql_type() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+column\\+::sql\\+\\_\\+type ($/;"	b
texorpdfstring sql _ type const sql_type const	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+type() const }{sql_type() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::postgres\\+\\_\\+cached\\+\\_\\+column\\+::sql\\+\\_\\+type ($/;"	b
texorpdfstring sql _ type const sql_type const	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+type() const }{sql_type() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::postgres\\+\\_\\+column\\+::sql\\+\\_\\+type ($/;"	b
texorpdfstring sql _ type size _ t index const sql_type size_t index const	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+type(size\\+\\_\\+t index) const }{sql_type(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::mysql\\+::binding\\+::sql\\+\\_\\+type ($/;"	b
texorpdfstring sql _ type size _ t index const sql_type size_t index const	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+type(size\\+\\_\\+t index) const }{sql_type(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::sql\\+\\_\\+type ($/;"	b
texorpdfstring sql _ type size _ t index const sql_type size_t index const	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+type(size\\+\\_\\+t index) const }{sql_type(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::postgres\\+::binding\\+::sql\\+\\_\\+type ($/;"	b
texorpdfstring sql _ type size _ t index const sql_type size_t index const	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+type(size\\+\\_\\+t index) const }{sql_type(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}int arg3\\+::db\\+::postgres\\+\\_\\+binding\\+::sql\\+\\_\\+type ($/;"	b
texorpdfstring sql _ value const sql _ time value sql_value const sql_time value	latex/classarg3_1_1db_1_1sql__value.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+value(const sql\\+\\_\\+time \\&value)}{sql_value(const sql_time &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sql\\+\\_\\+value\\+::sql\\+\\_\\+value ($/;"	b
texorpdfstring sql _ value sql_value	latex/classarg3_1_1db_1_1sql__value.tex	/^\\subsubsection[{\\texorpdfstring{sql\\+\\_\\+value()}{sql_value()}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sql\\+\\_\\+value\\+::sql\\+\\_\\+value ($/;"	b
texorpdfstring sqldb const uri info sqldb const uri info	latex/classarg3_1_1db_1_1sqldb.tex	/^\\subsubsection[{\\texorpdfstring{sqldb(const uri \\&info)}{sqldb(const uri &info)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqldb\\+::sqldb ($/;"	b
texorpdfstring sqlite3 _ statement sqlite3 _ db $ ast$db sqlite3_statement sqlite3_db db	latex/classarg3_1_1db_1_1sqlite3__statement.tex	/^\\subsubsection[{\\texorpdfstring{sqlite3\\+\\_\\+statement(sqlite3\\+\\_\\+db $\\ast$db)}{sqlite3_statement(sqlite3_db *db)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqlite3\\+\\_\\+statement\\+::sqlite3\\+\\_\\+statement ($/;"	b
texorpdfstring statement mysql db $ ast$db statement mysql db db	latex/classarg3_1_1db_1_1mysql_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{statement(mysql\\+::db $\\ast$db)}{statement(mysql::db *db)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::statement\\+::statement ($/;"	b
texorpdfstring statement postgres db $ ast$db statement postgres db db	latex/classarg3_1_1db_1_1postgres_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{statement(postgres\\+::db $\\ast$db)}{statement(postgres::db *db)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::postgres\\+::statement\\+::statement ($/;"	b
texorpdfstring statement sqlite db $ ast$db statement sqlite db db	latex/classarg3_1_1db_1_1sqlite_1_1statement.tex	/^\\subsubsection[{\\texorpdfstring{statement(sqlite\\+::db $\\ast$db)}{statement(sqlite::db *db)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::sqlite\\+::statement\\+::statement ($/;"	b
texorpdfstring stmt _ column const std string name const std shared _ ptr$ $ binding $ $ bindings size _ t position stmt_column const std string name const std shared_ptr binding bindings size_t position	latex/classarg3_1_1db_1_1mysql_1_1stmt__column.tex	/^\\subsubsection[{\\texorpdfstring{stmt\\+\\_\\+column(const std\\+::string \\&name, const std\\+::shared\\+\\_\\+ptr$<$ binding $>$ \\&bindings, size\\+\\_\\+t position)}{stmt_column(const std::string &name, const std::shared_ptr< binding > &bindings, size_t position)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+column\\+::stmt\\+\\_\\+column ($/;"	b
texorpdfstring stmt _ resultset mysql db $ ast$db const std shared _ ptr$ $ M Y S Q L _ S T M T $ $ stmt stmt_resultset mysql db db const std shared_ptr MYSQL_STMT stmt	latex/classarg3_1_1db_1_1mysql_1_1stmt__resultset.tex	/^\\subsubsection[{\\texorpdfstring{stmt\\+\\_\\+resultset(mysql\\+::db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+S\\+T\\+M\\+T $>$ \\&stmt)}{stmt_resultset(mysql::db *db, const std::shared_ptr< MYSQL_STMT > &stmt)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+resultset\\+::stmt\\+\\_\\+resultset ($/;"	b
texorpdfstring stmt _ row mysql db $ ast$db const std shared _ ptr$ $ M Y S Q L _ S T M T $ $ stmt const std shared _ ptr$ $ M Y S Q L _ R E S $ $ metadata const std shared _ ptr$ $ mysql binding $ $ fields stmt_row mysql db db const std shared_ptr MYSQL_STMT stmt const std shared_ptr MYSQL_RES metadata const std shared_ptr mysql binding fields	latex/classarg3_1_1db_1_1mysql_1_1stmt__row.tex	/^\\subsubsection[{\\texorpdfstring{stmt\\+\\_\\+row(mysql\\+::db $\\ast$db, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+S\\+T\\+M\\+T $>$ \\&stmt, const std\\+::shared\\+\\_\\+ptr$<$ M\\+Y\\+S\\+Q\\+L\\+\\_\\+\\+R\\+E\\+S $>$ \\&metadata, const std\\+::shared\\+\\_\\+ptr$<$ mysql\\+::binding $>$ \\&fields)}{stmt_row(mysql::db *db, const std::shared_ptr< MYSQL_STMT > &stmt, const std::shared_ptr< MYSQL_RES > &metadata, const std::shared_ptr< mysql::binding > &fields)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+row\\+::stmt\\+\\_\\+row ($/;"	b
texorpdfstring table _ name const std string value table_name const std string value	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{table\\+\\_\\+name(const std\\+::string \\&value)}{table_name(const std::string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf modify\\+\\_\\+query}\\& arg3\\+::db\\+::modify\\+\\_\\+query\\+::table\\+\\_\\+name ($/;"	b
texorpdfstring table _ name const std string value table_name const std string value	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{table\\+\\_\\+name(const std\\+::string \\&value)}{table_name(const std::string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf modify\\+\\_\\+query}\\& arg3\\+::db\\+::modify\\+\\_\\+query\\+::table\\+\\_\\+name ($/;"	b
texorpdfstring table _ name const std string value table_name const std string value	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{table\\+\\_\\+name(const std\\+::string \\&value)}{table_name(const std::string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf select\\+\\_\\+query}\\& arg3\\+::db\\+::select\\+\\_\\+query\\+::table\\+\\_\\+name ($/;"	b
texorpdfstring table _ name const table_name const	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{table\\+\\_\\+name() const }{table_name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::modify\\+\\_\\+query\\+::table\\+\\_\\+name ($/;"	b
texorpdfstring table _ name const table_name const	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{table\\+\\_\\+name() const }{table_name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::modify\\+\\_\\+query\\+::table\\+\\_\\+name ($/;"	b
texorpdfstring table _ name const table_name const	latex/classarg3_1_1db_1_1schema.tex	/^\\subsubsection[{\\texorpdfstring{table\\+\\_\\+name() const }{table_name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::schema\\+::table\\+\\_\\+name ($/;"	b
texorpdfstring table _ name const table_name const	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{table\\+\\_\\+name() const }{table_name() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::select\\+\\_\\+query\\+::table\\+\\_\\+name ($/;"	b
texorpdfstring to _ bool const to_bool const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+bool() const }{to_bool() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}bool arg3\\+::db\\+::sql\\+\\_\\+time\\+::to\\+\\_\\+bool ($/;"	b
texorpdfstring to _ gmtime const to_gmtime const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+gmtime() const }{to_gmtime() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}struct tm$\\ast$ arg3\\+::db\\+::sql\\+\\_\\+time\\+::to\\+\\_\\+gmtime ($/;"	b
texorpdfstring to _ llong const to_llong const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+llong() const }{to_llong() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}long long arg3\\+::db\\+::sql\\+\\_\\+time\\+::to\\+\\_\\+llong ($/;"	b
texorpdfstring to _ string const 0 to_string const 0	html/latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const  =0}{to_string() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::modify\\+\\_\\+query\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ string const 0 to_string const 0	latex/classarg3_1_1db_1_1modify__query.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const  =0}{to_string() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::modify\\+\\_\\+query\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ string const to_string const	html/latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const }{to_string() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::delete\\+\\_\\+query\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ string const to_string const	html/latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const }{to_string() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::insert\\+\\_\\+query\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ string const to_string const	html/latex/classarg3_1_1db_1_1update__query.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const }{to_string() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::update\\+\\_\\+query\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ string const to_string const	latex/classarg3_1_1db_1_1delete__query.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const }{to_string() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::delete\\+\\_\\+query\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ string const to_string const	latex/classarg3_1_1db_1_1insert__query.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const }{to_string() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::insert\\+\\_\\+query\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ string const to_string const	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const }{to_string() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::select\\+\\_\\+query\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ string const to_string const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const }{to_string() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::string arg3\\+::db\\+::sql\\+\\_\\+time\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ string const to_string const	latex/classarg3_1_1db_1_1update__query.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+string() const }{to_string() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual std\\+::string arg3\\+::db\\+::update\\+\\_\\+query\\+::to\\+\\_\\+string ($/;"	b
texorpdfstring to _ time const to_time const	latex/classarg3_1_1db_1_1sql__value.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+time() const }{to_time() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sql\\+\\_\\+time} arg3\\+::db\\+::sql\\+\\_\\+value\\+::to\\+\\_\\+time ($/;"	b
texorpdfstring to _ ullong const to_ullong const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+ullong() const }{to_ullong() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}unsigned long long arg3\\+::db\\+::sql\\+\\_\\+time\\+::to\\+\\_\\+ullong ($/;"	b
texorpdfstring to _ ulong const to_ulong const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+ulong() const }{to_ulong() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}unsigned long arg3\\+::db\\+::sql\\+\\_\\+time\\+::to\\+\\_\\+ulong ($/;"	b
texorpdfstring to _ value const 0 to_value const 0	html/latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const  =0}{to_value() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual sql\\+\\_\\+value arg3\\+::db\\+::column\\+\\_\\+impl\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const 0 to_value const 0	latex/classarg3_1_1db_1_1column__impl.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const  =0}{to_value() const  =0}}]{\\setlength{\\rightskip}{0pt plus 5cm}virtual {\\bf sql\\+\\_\\+value} arg3\\+::db\\+::column\\+\\_\\+impl\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	html/latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}sql\\+\\_\\+value arg3\\+::db\\+::column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sql\\+\\_\\+value} arg3\\+::db\\+::column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1mysql_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sql\\+\\_\\+value} arg3\\+::db\\+::mysql\\+::column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1mysql_1_1stmt__column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sql\\+\\_\\+value} arg3\\+::db\\+::mysql\\+::stmt\\+\\_\\+column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1mysql__column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}sql\\+\\_\\+value arg3\\+::db\\+::mysql\\+\\_\\+column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1mysql__stmt__column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}sql\\+\\_\\+value arg3\\+::db\\+::mysql\\+\\_\\+stmt\\+\\_\\+column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1postgres_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sql\\+\\_\\+value} arg3\\+::db\\+::postgres\\+::column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1postgres__cached__column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}sql\\+\\_\\+value arg3\\+::db\\+::postgres\\+\\_\\+cached\\+\\_\\+column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1postgres__column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}sql\\+\\_\\+value arg3\\+::db\\+::postgres\\+\\_\\+column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1sqlite3__cached__column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}sql\\+\\_\\+value arg3\\+::db\\+::sqlite3\\+\\_\\+cached\\+\\_\\+column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1sqlite3__column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}sql\\+\\_\\+value arg3\\+::db\\+::sqlite3\\+\\_\\+column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1sqlite_1_1cached__column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sql\\+\\_\\+value} arg3\\+::db\\+::sqlite\\+::cached\\+\\_\\+column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value const to_value const	latex/classarg3_1_1db_1_1sqlite_1_1column.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value() const }{to_value() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sql\\+\\_\\+value} arg3\\+::db\\+::sqlite\\+::column\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value size _ t index const to_value size_t index const	latex/classarg3_1_1db_1_1mysql_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value(size\\+\\_\\+t index) const }{to_value(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sql\\+\\_\\+value} arg3\\+::db\\+::mysql\\+::binding\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value size _ t index const to_value size_t index const	latex/classarg3_1_1db_1_1mysql__binding.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value(size\\+\\_\\+t index) const }{to_value(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}sql\\+\\_\\+value arg3\\+::db\\+::mysql\\+\\_\\+binding\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value size _ t index const to_value size_t index const	latex/classarg3_1_1db_1_1postgres_1_1binding.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value(size\\+\\_\\+t index) const }{to_value(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf sql\\+\\_\\+value} arg3\\+::db\\+::postgres\\+::binding\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ value size _ t index const to_value size_t index const	latex/classarg3_1_1db_1_1postgres__binding.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+value(size\\+\\_\\+t index) const }{to_value(size_t index) const }}]{\\setlength{\\rightskip}{0pt plus 5cm}sql\\+\\_\\+value arg3\\+::db\\+::postgres\\+\\_\\+binding\\+::to\\+\\_\\+value ($/;"	b
texorpdfstring to _ wstring const to_wstring const	latex/classarg3_1_1db_1_1sql__time.tex	/^\\subsubsection[{\\texorpdfstring{to\\+\\_\\+wstring() const }{to_wstring() const }}]{\\setlength{\\rightskip}{0pt plus 5cm}std\\+::wstring arg3\\+::db\\+::sql\\+\\_\\+time\\+::to\\+\\_\\+wstring ($/;"	b
texorpdfstring unset const std string name unset const std string name	html/latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{unset(const std\\+::string \\&name)}{unset(const std::string &name)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::unset ($/;"	b
texorpdfstring unset const std string name unset const std string name	latex/classarg3_1_1db_1_1base__record.tex	/^\\subsubsection[{\\texorpdfstring{unset(const std\\+::string \\&name)}{unset(const std::string &name)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::base\\+\\_\\+record}$<$ T $>$\\+::unset ($/;"	b
texorpdfstring unset const std string name unset const std string name	latex/classarg3_1_1db_1_1record.tex	/^\\subsubsection[{\\texorpdfstring{unset(const std\\+::string \\&name)}{unset(const std::string &name)}}]{\\setlength{\\rightskip}{0pt plus 5cm}template$<$typename T$>$ void {\\bf arg3\\+::db\\+::record}$<$ T $>$\\+::unset ($/;"	b
texorpdfstring uri _ type const std string url uri_type const std string url	latex/structarg3_1_1db_1_1uri__type.tex	/^\\subsubsection[{\\texorpdfstring{uri\\+\\_\\+type(const std\\+::string \\&url)}{uri_type(const std::string &url)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::uri\\+\\_\\+type\\+::uri\\+\\_\\+type ($/;"	b
texorpdfstring uri const std string url uri const std string url	html/latex/structarg3_1_1db_1_1uri.tex	/^\\subsubsection[{\\texorpdfstring{uri(const std\\+::string \\&url)}{uri(const std::string &url)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::uri\\+::uri ($/;"	b
texorpdfstring uri const std string url uri const std string url	latex/structarg3_1_1db_1_1uri.tex	/^\\subsubsection[{\\texorpdfstring{uri(const std\\+::string \\&url)}{uri(const std::string &url)}}]{\\setlength{\\rightskip}{0pt plus 5cm}arg3\\+::db\\+::uri\\+::uri ($/;"	b
texorpdfstring where const std string value where const std string value	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{where(const std\\+::string \\&value)}{where(const std::string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf where\\+\\_\\+clause}\\& arg3\\+::db\\+::select\\+\\_\\+query\\+::where ($/;"	b
texorpdfstring where const std string value where const std string value	latex/classarg3_1_1db_1_1update__query.tex	/^\\subsubsection[{\\texorpdfstring{where(const std\\+::string \\&value)}{where(const std::string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf where\\+\\_\\+clause}\\& arg3\\+::db\\+::update\\+\\_\\+query\\+::where ($/;"	b
texorpdfstring where const string value where const string value	html/latex/classarg3_1_1db_1_1update__query.tex	/^\\subsubsection[{\\texorpdfstring{where(const string \\&value)}{where(const string &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf where\\+\\_\\+clause}\\& arg3\\+::db\\+::update\\+\\_\\+query\\+::where ($/;"	b
texorpdfstring where const where _ clause value where const where_clause value	html/latex/classarg3_1_1db_1_1update__query.tex	/^\\subsubsection[{\\texorpdfstring{where(const where\\+\\_\\+clause \\&value)}{where(const where_clause &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf update\\+\\_\\+query}\\& arg3\\+::db\\+::update\\+\\_\\+query\\+::where ($/;"	b
texorpdfstring where const where _ clause value where const where_clause value	latex/classarg3_1_1db_1_1select__query.tex	/^\\subsubsection[{\\texorpdfstring{where(const where\\+\\_\\+clause \\&value)}{where(const where_clause &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf select\\+\\_\\+query}\\& arg3\\+::db\\+::select\\+\\_\\+query\\+::where ($/;"	b
texorpdfstring where const where _ clause value where const where_clause value	latex/classarg3_1_1db_1_1update__query.tex	/^\\subsubsection[{\\texorpdfstring{where(const where\\+\\_\\+clause \\&value)}{where(const where_clause &value)}}]{\\setlength{\\rightskip}{0pt plus 5cm}{\\bf update\\+\\_\\+query}\\& arg3\\+::db\\+::update\\+\\_\\+query\\+::where ($/;"	b
throwRuntimeError	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/example/basic_assertions.cpp	/^void throwRuntimeError() {$/;"	f
throw_exception	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^    static const ThrowException<std::exception> throw_exception;$/;"	m	namespace:bandit::Matchers
throw_exception	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ThrowException.h	/^    static const ThrowException<std::exception> throw_exception;$/;"	m	namespace:bandit::Matchers
to	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        MatchProxy<T> to;$/;"	m	class:bandit::Matchers::ValueProxy
to	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        MatchProxy<T> to;$/;"	m	class:bandit::Matchers::ValueProxy
to_binary	libs/variant/src/variant.cpp	/^    binary variant::complex::to_binary() const$/;"	f	class:arg3::variant::complex
to_binary	libs/variant/src/variant.cpp	/^    binary variant::to_binary() const$/;"	f	class:arg3::variant
to_bool	libs/variant/src/variant.cpp	/^    bool variant::complex::to_bool() const$/;"	f	class:arg3::variant::complex
to_bool	libs/variant/src/variant.cpp	/^    bool variant::to_bool() const$/;"	f	class:arg3::variant
to_bool	src/sql_value.cpp	/^        bool sql_time::to_bool() const$/;"	f	class:arg3::db::sql_time
to_char	libs/variant/src/variant.cpp	/^    char variant::complex::to_char() const$/;"	f	class:arg3::variant::complex
to_char	libs/variant/src/variant.cpp	/^    char variant::to_char() const$/;"	f	class:arg3::variant
to_char	libs/variant/src/variant.cpp	/^    char variant::to_char(const char def) const$/;"	f	class:arg3::variant
to_complex	libs/variant/src/variant.cpp	/^    std::shared_ptr<variant::complex> variant::to_complex() const$/;"	f	class:arg3::variant
to_cstring	libs/variant/src/variant.cpp	/^    const char *variant::complex::to_cstring() const$/;"	f	class:arg3::variant::complex
to_cstring	libs/variant/src/variant.cpp	/^    const char *variant::to_cstring() const$/;"	f	class:arg3::variant
to_cstring	libs/variant/src/variant.cpp	/^    const char *variant::to_cstring(const char *def) const$/;"	f	class:arg3::variant
to_double	libs/variant/src/variant.cpp	/^    double variant::complex::to_double() const$/;"	f	class:arg3::variant::complex
to_double	libs/variant/src/variant.cpp	/^    double variant::to_double() const$/;"	f	class:arg3::variant
to_double	libs/variant/src/variant.cpp	/^    double variant::to_double(const double def) const$/;"	f	class:arg3::variant
to_float	libs/variant/src/variant.cpp	/^    float variant::complex::to_float() const$/;"	f	class:arg3::variant::complex
to_float	libs/variant/src/variant.cpp	/^    float variant::to_float() const$/;"	f	class:arg3::variant
to_float	libs/variant/src/variant.cpp	/^    float variant::to_float(const float def) const$/;"	f	class:arg3::variant
to_gmtime	src/sql_value.cpp	/^        struct tm *sql_time::to_gmtime() const$/;"	f	class:arg3::db::sql_time
to_int	libs/variant/src/variant.cpp	/^    int variant::complex::to_int() const$/;"	f	class:arg3::variant::complex
to_int	libs/variant/src/variant.cpp	/^    int variant::to_int() const$/;"	f	class:arg3::variant
to_int	libs/variant/src/variant.cpp	/^    int variant::to_int(const int def) const$/;"	f	class:arg3::variant
to_int	libs/variant/tests/variant.test.cpp	/^    int to_int() const$/;"	f	class:complex_val
to_ldouble	libs/variant/src/variant.cpp	/^    long double variant::complex::to_ldouble() const$/;"	f	class:arg3::variant::complex
to_ldouble	libs/variant/src/variant.cpp	/^    long double variant::to_ldouble() const$/;"	f	class:arg3::variant
to_ldouble	libs/variant/src/variant.cpp	/^    long double variant::to_ldouble(const long double def) const$/;"	f	class:arg3::variant
to_llong	libs/variant/src/variant.cpp	/^    long long variant::complex::to_llong() const$/;"	f	class:arg3::variant::complex
to_llong	libs/variant/src/variant.cpp	/^    long long variant::to_llong() const$/;"	f	class:arg3::variant
to_llong	libs/variant/src/variant.cpp	/^    long long variant::to_llong(const long long def) const$/;"	f	class:arg3::variant
to_llong	src/sql_value.cpp	/^        long long sql_time::to_llong() const$/;"	f	class:arg3::db::sql_time
to_localtime	src/sql_value.cpp	/^        struct tm *sql_time::to_localtime() const$/;"	f	class:arg3::db::sql_time
to_long	libs/variant/src/variant.cpp	/^    long variant::complex::to_long() const$/;"	f	class:arg3::variant::complex
to_long	libs/variant/src/variant.cpp	/^    long variant::to_long() const$/;"	f	class:arg3::variant
to_long	libs/variant/src/variant.cpp	/^    long variant::to_long(const long def) const$/;"	f	class:arg3::variant
to_long	libs/variant/tests/variant.test.cpp	/^    long to_long() const$/;"	f	class:complex_val
to_not	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        MatchProxy<T> to_not;$/;"	m	class:bandit::Matchers::ValueProxy
to_not	tests/vendor/bandit/bandit/assertion_frameworks/matchers/ValueProxy.h	/^        MatchProxy<T> to_not;$/;"	m	class:bandit::Matchers::ValueProxy
to_pointer	libs/variant/src/variant.cpp	/^    const void *variant::complex::to_pointer() const$/;"	f	class:arg3::variant::complex
to_pointer	libs/variant/src/variant.cpp	/^    const void *variant::to_pointer() const$/;"	f	class:arg3::variant
to_ptr	src/mysql/binding.cpp	/^                void *to_ptr(const T &value)$/;"	f	namespace:arg3::db::mysql::helper
to_string	html/join_clause_h/Classes/join_clause/index.html	/^<h3><a name="to_string">to_string<\/a><\/h3>$/;"	a
to_string	html/modify_query_h/Classes/delete_query/index.html	/^<h3><a name="to_string">to_string<\/a><\/h3>$/;"	a
to_string	html/modify_query_h/Classes/insert_query/index.html	/^<h3><a name="to_string">to_string<\/a><\/h3>$/;"	a
to_string	html/modify_query_h/Classes/modify_query/index.html	/^<h3><a name="to_string">to_string<\/a><\/h3>$/;"	a
to_string	html/modify_query_h/Classes/update_query/index.html	/^<h3><a name="to_string">to_string<\/a><\/h3>$/;"	a
to_string	libs/variant/src/binary.cpp	/^    std::string binary::to_string() const$/;"	f	class:arg3::binary
to_string	libs/variant/src/binary.cpp	/^    std::string to_string(const arg3::binary &p)$/;"	f	namespace:arg3
to_string	libs/variant/src/variant.cpp	/^    std::string to_string(const arg3::variant &value)$/;"	f	namespace:arg3
to_string	libs/variant/src/variant.cpp	/^    string to_string(const variant::complex &value)$/;"	f	namespace:arg3
to_string	libs/variant/src/variant.cpp	/^    string variant::complex::to_string() const$/;"	f	class:arg3::variant::complex
to_string	libs/variant/src/variant.cpp	/^    string variant::to_string() const$/;"	f	class:arg3::variant
to_string	libs/variant/src/variant.cpp	/^    string variant::to_string(const string &def) const$/;"	f	class:arg3::variant
to_string	libs/variant/tests/variant.test.cpp	/^    std::string to_string() const$/;"	f	class:complex_val
to_string	src/delete_query.cpp	/^        string delete_query::to_string() const$/;"	f	class:arg3::db::delete_query
to_string	src/insert_query.cpp	/^        string insert_query::to_string() const$/;"	f	class:arg3::db::insert_query
to_string	src/join_clause.cpp	/^        string join_clause::to_string() const$/;"	f	class:arg3::db::join_clause
to_string	src/select_query.cpp	/^        string select_query::to_string() const$/;"	f	class:arg3::db::select_query
to_string	src/sql_value.cpp	/^        std::string to_string(const sql_null_type &null)$/;"	f	namespace:arg3::db
to_string	src/sql_value.cpp	/^        string sql_time::to_string() const$/;"	f	class:arg3::db::sql_time
to_string	src/update_query.cpp	/^        string update_query::to_string() const$/;"	f	class:arg3::db::update_query
to_string	src/where_clause.cpp	/^        string where_clause::to_string() const$/;"	f	class:arg3::db::where_clause
to_string	tests/db.test.h	/^    std::string to_string()$/;"	f	class:user
to_time	src/sql_value.cpp	/^        sql_time sql_value::to_time() const$/;"	f	class:arg3::db::sql_value
to_uchar	libs/variant/src/variant.cpp	/^    unsigned char variant::complex::to_uchar() const$/;"	f	class:arg3::variant::complex
to_uchar	libs/variant/src/variant.cpp	/^    unsigned char variant::to_uchar() const$/;"	f	class:arg3::variant
to_uchar	libs/variant/src/variant.cpp	/^    unsigned char variant::to_uchar(const unsigned char def) const$/;"	f	class:arg3::variant
to_uint	libs/variant/src/variant.cpp	/^    unsigned variant::complex::to_uint() const$/;"	f	class:arg3::variant::complex
to_uint	libs/variant/src/variant.cpp	/^    unsigned variant::to_uint() const$/;"	f	class:arg3::variant
to_uint	libs/variant/src/variant.cpp	/^    unsigned variant::to_uint(const unsigned def) const$/;"	f	class:arg3::variant
to_ullong	libs/variant/src/variant.cpp	/^    unsigned long long variant::complex::to_ullong() const$/;"	f	class:arg3::variant::complex
to_ullong	libs/variant/src/variant.cpp	/^    unsigned long long variant::to_ullong() const$/;"	f	class:arg3::variant
to_ullong	libs/variant/src/variant.cpp	/^    unsigned long long variant::to_ullong(const unsigned long long def) const$/;"	f	class:arg3::variant
to_ullong	src/sql_value.cpp	/^        unsigned long long sql_time::to_ullong() const$/;"	f	class:arg3::db::sql_time
to_ulong	libs/variant/src/variant.cpp	/^    unsigned long variant::complex::to_ulong() const$/;"	f	class:arg3::variant::complex
to_ulong	libs/variant/src/variant.cpp	/^    unsigned long variant::to_ulong() const$/;"	f	class:arg3::variant
to_ulong	libs/variant/src/variant.cpp	/^    unsigned long variant::to_ulong(const unsigned long def) const$/;"	f	class:arg3::variant
to_ulong	src/sql_value.cpp	/^        unsigned long sql_time::to_ulong() const$/;"	f	class:arg3::db::sql_time
to_value	html/column_h/Classes/column/index.html	/^<h3><a name="to_value">to_value<\/a><\/h3>$/;"	a
to_value	html/column_h/Classes/column_impl/index.html	/^<h3><a name="to_value">to_value<\/a><\/h3>$/;"	a
to_value	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<h3><a name="to_value">to_value<\/a><\/h3>$/;"	a
to_value	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<h3><a name="to_value">to_value<\/a><\/h3>$/;"	a
to_value	html/mysql_column_h/Classes/mysql_column/index.html	/^<h3><a name="to_value">to_value<\/a><\/h3>$/;"	a
to_value	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<h3><a name="to_value">to_value<\/a><\/h3>$/;"	a
to_value	src/column.cpp	/^        sql_value column::to_value() const$/;"	f	class:arg3::db::column
to_value	src/mysql/binding.cpp	/^                sql_value to_value(MYSQL_BIND *binding)$/;"	f	namespace:arg3::db::mysql::data_mapper
to_value	src/mysql/binding.cpp	/^                sql_value to_value(int type, const char *value, size_t length)$/;"	f	namespace:arg3::db::mysql::data_mapper
to_value	src/mysql/binding.cpp	/^            sql_value binding::to_value(size_t index) const$/;"	f	class:arg3::db::mysql::binding
to_value	src/mysql/column.cpp	/^            sql_value column::to_value() const$/;"	f	class:arg3::db::mysql::column
to_value	src/mysql/column.cpp	/^            sql_value stmt_column::to_value() const$/;"	f	class:arg3::db::mysql::stmt_column
to_value	src/postgres/binding.cpp	/^                sql_value to_value(Oid type, const char *value, int len)$/;"	f	namespace:arg3::db::postgres::data_mapper
to_value	src/postgres/binding.cpp	/^            sql_value binding::to_value(size_t index) const$/;"	f	class:arg3::db::postgres::binding
to_value	src/postgres/column.cpp	/^            sql_value column::to_value() const$/;"	f	class:arg3::db::postgres::column
to_value	src/sqlite/column.cpp	/^                sql_value to_value(const shared_ptr<sqlite3_stmt> &stmt, int column)$/;"	f	namespace:arg3::db::sqlite::data_mapper
to_value	src/sqlite/column.cpp	/^            sql_value cached_column::to_value() const$/;"	f	class:arg3::db::sqlite::cached_column
to_value	src/sqlite/column.cpp	/^            sql_value column::to_value() const$/;"	f	class:arg3::db::sqlite::column
to_wchar	libs/variant/src/variant.cpp	/^    wchar_t variant::complex::to_wchar() const$/;"	f	class:arg3::variant::complex
to_wchar	libs/variant/src/variant.cpp	/^    wchar_t variant::to_wchar() const$/;"	f	class:arg3::variant
to_wchar	libs/variant/src/variant.cpp	/^    wchar_t variant::to_wchar(const wchar_t def) const$/;"	f	class:arg3::variant
to_wcstring	libs/variant/src/variant.cpp	/^    const wchar_t *variant::complex::to_wcstring() const$/;"	f	class:arg3::variant::complex
to_wcstring	libs/variant/src/variant.cpp	/^    const wchar_t *variant::to_wcstring() const$/;"	f	class:arg3::variant
to_wcstring	libs/variant/src/variant.cpp	/^    const wchar_t *variant::to_wcstring(const wchar_t *def) const$/;"	f	class:arg3::variant
to_wstring	libs/variant/src/variant.cpp	/^    wstring variant::complex::to_wstring() const$/;"	f	class:arg3::variant::complex
to_wstring	libs/variant/src/variant.cpp	/^    wstring variant::to_wstring() const$/;"	f	class:arg3::variant
to_wstring	libs/variant/src/variant.cpp	/^    wstring variant::to_wstring(const wstring &def) const$/;"	f	class:arg3::variant
to_wstring	src/sql_value.cpp	/^        wstring sql_time::to_wstring() const$/;"	f	class:arg3::db::sql_time
toggleFolder	html/dynsections.js	/^function toggleFolder(id)$/;"	f
toggleFolder	html/html/dynsections.js	/^function toggleFolder(id)$/;"	f
toggleInherit	html/dynsections.js	/^function toggleInherit(id)$/;"	f
toggleInherit	html/html/dynsections.js	/^function toggleInherit(id)$/;"	f
toggleLevel	html/dynsections.js	/^function toggleLevel(level)$/;"	f
toggleLevel	html/html/dynsections.js	/^function toggleLevel(level)$/;"	f
toggleVisibility	html/dynsections.js	/^function toggleVisibility(linkObj)$/;"	f
toggleVisibility	html/html/dynsections.js	/^function toggleVisibility(linkObj)$/;"	f
top	html/alloc_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/base_record_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/bindable_h/Classes/bindable/index.html	/^<a name="top"><\/a>$/;"	a
top	html/bindable_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/column_h/Classes/column/index.html	/^<a name="top"><\/a>$/;"	a
top	html/column_h/Classes/column_impl/index.html	/^<a name="top"><\/a>$/;"	a
top	html/column_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/exception_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/join_clause_h/Classes/join_clause/index.html	/^<a name="top"><\/a>$/;"	a
top	html/join_clause_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/log_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/modify_query_h/Classes/delete_query/index.html	/^<a name="top"><\/a>$/;"	a
top	html/modify_query_h/Classes/insert_query/index.html	/^<a name="top"><\/a>$/;"	a
top	html/modify_query_h/Classes/modify_query/index.html	/^<a name="top"><\/a>$/;"	a
top	html/modify_query_h/Classes/update_query/index.html	/^<a name="top"><\/a>$/;"	a
top	html/modify_query_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_binding_h/Classes/mysql_binding/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_binding_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_column_h/Classes/mysql_cached_column/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_column_h/Classes/mysql_column/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_column_h/Classes/mysql_stmt_column/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_column_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_db_h/Classes/mysql_db/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_db_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_resultset_h/Classes/mysql_cached_resultset/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_resultset_h/Classes/mysql_resultset/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_resultset_h/Classes/mysql_stmt_resultset/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_resultset_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_row_h/Classes/mysql_cached_row/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_row_h/Classes/mysql_row/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_row_h/Classes/mysql_stmt_row/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_row_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_statement_h/Classes/mysql_statement/index.html	/^<a name="top"><\/a>$/;"	a
top	html/mysql_statement_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_binding_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_column_h/Classes/postgres_cached_column/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_column_h/Classes/postgres_column/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_column_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_db_h/Classes/postgres_db/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_db_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_resultset_h/Classes/postgres_cached_resultset/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_resultset_h/Classes/postgres_resultset/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_resultset_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_row_h/Classes/postgres_cached_row/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_row_h/Classes/postgres_row/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_row_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_statement_h/Classes/postgres_statement/index.html	/^<a name="top"><\/a>$/;"	a
top	html/postgres_statement_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/query_h/Classes/query/index.html	/^<a name="top"><\/a>$/;"	a
top	html/query_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/resultset_h/Classes/resultset/index.html	/^<a name="top"><\/a>$/;"	a
top	html/resultset_h/Classes/resultset_impl/index.html	/^<a name="top"><\/a>$/;"	a
top	html/resultset_h/Classes/resultset_iterator/index.html	/^<a name="top"><\/a>$/;"	a
top	html/resultset_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/row_h/Classes/row/index.html	/^<a name="top"><\/a>$/;"	a
top	html/row_h/Classes/row_impl/index.html	/^<a name="top"><\/a>$/;"	a
top	html/row_h/Classes/row_iterator/index.html	/^<a name="top"><\/a>$/;"	a
top	html/row_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/schema_factory_h/Classes/schema_factory/index.html	/^<a name="top"><\/a>$/;"	a
top	html/schema_factory_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/schema_h/Classes/schema/index.html	/^<a name="top"><\/a>$/;"	a
top	html/schema_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/Classes/select_query/index.html	/^<a name="top"><\/a>$/;"	a
top	html/select_query_h/Classes/ARG3_DB_SELECT_QUERY_H_multideclaration_block/index.html	/^<a name="top"><\/a>$/;"	a
top	html/select_query_h/Classes/arg3/index.html	/^<a name="top"><\/a>$/;"	a
top	html/select_query_h/Classes/select_query/index.html	/^<a name="top"><\/a>$/;"	a
top	html/select_query_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sql_value_h/Classes/sql_value/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sql_value_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqldb_h/Classes/ARG3_DB_SQLDB_H_multideclaration_block/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqldb_h/Classes/arg3/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqldb_h/Classes/sqldb/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqldb_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_column_h/Classes/sqlite3_cached_column/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_column_h/Classes/sqlite3_column/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_column_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_db_h/Classes/sqlite3_db/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_db_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_resultset_h/Classes/sqlite3_cached_resultset/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_resultset_h/Classes/sqlite3_resultset/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_resultset_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_row_h/Classes/sqlite3_cached_row/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_row_h/Classes/sqlite3_row/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_row_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_statement_h/Classes/sqlite3_statement/index.html	/^<a name="top"><\/a>$/;"	a
top	html/sqlite3_statement_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/statement_h/Classes/statement/index.html	/^<a name="top"><\/a>$/;"	a
top	html/statement_h/index.html	/^<a name="top"><\/a>$/;"	a
top	html/where_clause_h/Classes/where_clause/index.html	/^<a name="top"><\/a>$/;"	a
top	html/where_clause_h/index.html	/^<a name="top"><\/a>$/;"	a
tr_concat	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  template <typename L3> inline L3 tr_concat(const Nil&, const Nil&) { return Nil(); }    $/;"	f	namespace:snowhouse
tr_concat	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  template <typename L3> inline L3 tr_concat(const Nil&, const Nil&) { return Nil(); }    $/;"	f	namespace:snowhouse
trace	src/log.cpp	/^            void trace(const char *const format, ...)$/;"	f	namespace:arg3::db::log
type	html/join_clause_h/index.html	/^<h3><a name="type">type<\/a><\/h3>$/;"	a
type	libs/variant/src/variant.cpp	/^    variant::types variant::type() const$/;"	f	class:arg3::variant
type	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  const int type;$/;"	m	struct:option::Descriptor
type	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  int type() const$/;"	f	class:option::Option
type	src/bindable.h	/^            typedef std::unordered_map<std::string, std::set<unsigned>> type;$/;"	t	class:arg3::db::bind_mapping
type	src/join_clause.h	/^            typedef enum { none, natural, inner, left_outer, right_outer, full_outer, cross } type;$/;"	t	class:arg3::db::join_clause	typeref:enum:arg3::db::join_clause::__anon6
type	src/schema.h	/^            std::string type;$/;"	m	struct:arg3::db::column_definition
type	tests/vendor/bandit/bandit/external/optionparser.h	/^  const int type;$/;"	m	struct:option::Descriptor
type	tests/vendor/bandit/bandit/external/optionparser.h	/^  int type() const$/;"	f	class:option::Option
type_	libs/variant/src/variant.h	/^        types type_;$/;"	m	class:arg3::variant
type_	src/join_clause.h	/^            type type_;$/;"	m	class:arg3::db::join_clause
type_	src/sqlite/column.h	/^                int type_;$/;"	m	class:arg3::db::sqlite::cached_column
type_concat	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct type_concat $/;"	s	namespace:snowhouse
type_concat	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  template <typename L2> struct type_concat<Nil, L2> { typedef L2 t; };$/;"	s	namespace:snowhouse
type_concat	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  struct type_concat $/;"	s	namespace:snowhouse
type_concat	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/fluent/constraintlist.h	/^  template <typename L2> struct type_concat<Nil, L2> { typedef L2 t; };$/;"	s	namespace:snowhouse
type_name	libs/variant/src/variant.cpp	/^    std::string variant::type_name() const$/;"	f	class:arg3::variant
typedef-members	html/html/sql__value_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	html/html/where__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	html/join__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	html/sql__value_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	html/sqldb_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
typedef-members	html/where__clause_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"><\/a>$/;"	a
types	libs/variant/src/variant.h	/^        typedef enum { NULLTYPE, NUMBER, UNUMBER, REAL, BINARY, STRING, WSTRING, CHAR, WCHAR, BOOL, COMPLEX } types;$/;"	t	class:arg3::variant	typeref:enum:arg3::variant::__anon1
types_	src/postgres/binding.h	/^                Oid *types_;$/;"	m	class:arg3::db::postgres::binding
unset	src/record.h	/^            void unset(const std::string &name)$/;"	f	class:arg3::db::record
untag	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static Option* untag(Option* ptr)$/;"	f	class:option::Option
untag	tests/vendor/bandit/bandit/external/optionparser.h	/^  static Option* untag(Option* ptr)$/;"	f	class:option::Option
unum_	libs/variant/src/variant.h	/^            unsigned long long unum_;$/;"	m	union:arg3::variant::__anon2
updateStripes	html/dynsections.js	/^function updateStripes()$/;"	f
updateStripes	html/html/dynsections.js	/^function updateStripes()$/;"	f
update_length	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    void update_length()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
update_length	tests/vendor/bandit/bandit/external/optionparser.h	/^    void update_length()$/;"	f	class:option::PrintUsageImplementation::LinePartIterator
update_query	html/modify_query_h/Classes/update_query/index.html	/^<h1><a name="update_query">update_query<\/a><\/h1>$/;"	a
update_query	src/update_query.cpp	/^        update_query::update_query(const std::shared_ptr<schema> &schema, const std::vector<std::string> &columns) : modify_query(schema)$/;"	f	class:arg3::db::update_query
update_query	src/update_query.cpp	/^        update_query::update_query(const update_query &other)$/;"	f	class:arg3::db::update_query
update_query	src/update_query.cpp	/^        update_query::update_query(sqldb *db, const std::string &tableName) : modify_query(db)$/;"	f	class:arg3::db::update_query
update_query	src/update_query.cpp	/^        update_query::update_query(sqldb *db, const std::string &tableName, const std::vector<std::string> &columns) : modify_query(db)$/;"	f	class:arg3::db::update_query
update_query	src/update_query.cpp	/^        update_query::update_query(update_query &&other)$/;"	f	class:arg3::db::update_query
update_query	src/update_query.h	/^        class update_query : public modify_query$/;"	c	namespace:arg3::db
upmax	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^  static void upmax(int& i1, int i2)$/;"	f	struct:option::PrintUsageImplementation
upmax	tests/vendor/bandit/bandit/external/optionparser.h	/^  static void upmax(int& i1, int i2)$/;"	f	struct:option::PrintUsageImplementation
uri	src/sqldb.h	/^        typedef struct uri_type uri;$/;"	t	namespace:arg3::db	typeref:struct:arg3::db::uri_type
uri_type	src/sqldb.h	/^            uri_type()$/;"	f	struct:arg3::db::uri_type
uri_type	src/sqldb.h	/^            uri_type(const std::string &url)$/;"	f	struct:arg3::db::uri_type
uri_type	src/sqldb.h	/^        struct uri_type {$/;"	s	namespace:arg3::db
usage	libs/variant/tests/vendor/bandit/bandit/options.h	/^        static const option::Descriptor* usage()$/;"	f	struct:bandit::detail::options
usage	tests/vendor/bandit/bandit/options.h	/^        static const option::Descriptor* usage()$/;"	f	struct:bandit::detail::options
user	src/sqldb.h	/^            std::string protocol, user, password, host, port, path, query, value;$/;"	m	struct:arg3::db::uri_type
user	tests/db.test.h	/^    user(arg3::db::sqldb *db = testdb) : record(db, TABLE_NAME, "id")$/;"	f	class:user
user	tests/db.test.h	/^    user(const arg3::db::row &values, arg3::db::sqldb *db = testdb) : record(db, TABLE_NAME, "id", values)$/;"	f	class:user
user	tests/db.test.h	/^    user(const user &other) : record(other)$/;"	f	class:user
user	tests/db.test.h	/^    user(long long id, arg3::db::sqldb *db = testdb) : record(db, TABLE_NAME, "id", id)$/;"	f	class:user
user	tests/db.test.h	/^    user(user &&other) : record(std::move(other))$/;"	f	class:user
user	tests/db.test.h	/^class user : public arg3::db::record<user>$/;"	c
userstream	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    const Temporary& userstream;$/;"	m	struct:option::PrintUsageImplementation::TemporaryWriter
userstream	tests/vendor/bandit/bandit/external/optionparser.h	/^    const Temporary& userstream;$/;"	m	struct:option::PrintUsageImplementation::TemporaryWriter
util	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^namespace bandit { namespace specs { namespace util {$/;"	n	namespace:bandit::specs
util	tests/vendor/bandit/specs/util/argv_helper.h	/^namespace bandit { namespace specs { namespace util {$/;"	n	namespace:bandit::specs
val_	libs/variant/src/binary.h	/^        void *val_;$/;"	m	class:arg3::binary
val_	libs/variant/tests/variant.test.cpp	/^    int val_;$/;"	m	class:complex_val	file:
value	libs/variant/src/binary.cpp	/^    void *binary::value() const$/;"	f	class:arg3::binary
value	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^      static const bool value = sizeof(check(std::cout << x)) == sizeof(yes);$/;"	m	struct:snowhouse::detail::is_output_streamable
value	src/sqldb.h	/^            std::string protocol, user, password, host, port, path, query, value;$/;"	m	struct:arg3::db::uri_type
value	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^      static const bool value = sizeof(check(std::cout << x)) == sizeof(yes);$/;"	m	struct:snowhouse::detail::is_output_streamable
value_	src/mysql/binding.h	/^                MYSQL_BIND *value_;$/;"	m	class:arg3::db::mysql::binding
value_	src/mysql/column.h	/^                MYSQL_ROW value_;$/;"	m	class:arg3::db::mysql::column
value_	src/mysql/column.h	/^                std::shared_ptr<mysql::binding> value_;$/;"	m	class:arg3::db::mysql::stmt_column
value_	src/resultset.h	/^            NonConst value_;$/;"	m	class:arg3::db::resultset_iterator
value_	src/sql_value.h	/^            time_t value_;$/;"	m	class:arg3::db::sql_time
value_	src/sqlite/column.h	/^                sql_value value_;$/;"	m	class:arg3::db::sqlite::cached_column
value_	src/where_clause.h	/^            std::string value_;$/;"	m	class:arg3::db::where_clause
values	src/insert_query.h	/^            insert_query &values(const T &value, const List &... argv)$/;"	f	class:arg3::db::insert_query
values	src/update_query.h	/^            update_query &values(const T &value, const List &... argv)$/;"	f	class:arg3::db::update_query
values_	src/postgres/binding.h	/^                char **values_;$/;"	m	class:arg3::db::postgres::binding
values_	src/record.h	/^            std::unordered_map<std::string, sql_value> values_;$/;"	m	class:arg3::db::record
var-members	html/html/sql__value_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	html/log_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
var-members	html/sql__value_8h.html	/^<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"><\/a>$/;"	a
variant	libs/variant/src/variant.cpp	/^    variant::variant() : type_(NULLTYPE), num_(0)$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(bool value) : type_(BOOL), num_(value), size_(sizeof(bool))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(char c) : type_(CHAR), num_(c), size_(sizeof(char))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(const binary &bin) : type_(BINARY), ptr_(bin), size_(bin.size())$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(const char *str) : type_(STRING), str_(str == nullptr ? "" : str), size_(str == nullptr ? 0 : strlen(str))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(const nullptr_t &null) : type_(NULLTYPE), num_(0), size_(0)$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(const std::shared_ptr<complex> &c) : type_(COMPLEX), compl_(c), size_(c->size())$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(const string &str) : type_(STRING), str_(str), size_(str.size())$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(const variant &other) : type_(NULLTYPE), num_(0), size_(0)$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(const wchar_t *str) : type_(WSTRING), wstr_(str == nullptr ? L"" : str), size_(str == nullptr ? 0 : wcslen(str))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(const wstring &str) : type_(WSTRING), wstr_(str), size_(str.size())$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(double d) : type_(REAL), real_(d), size_(sizeof(double))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(float f) : type_(REAL), real_(f), size_(sizeof(float))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(int i) : type_(NUMBER), num_(i), size_(sizeof(int))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(long double ld) : type_(REAL), real_(ld), size_(sizeof(long double))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(long l) : type_(NUMBER), num_(l), size_(sizeof(long))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(long long ll) : type_(NUMBER), num_(ll), size_(sizeof(long long))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(short s) : type_(NUMBER), num_(s), size_(sizeof(short))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(unsigned char uc) : type_(CHAR), unum_(uc), size_(sizeof(unsigned char))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(unsigned long long ull) : type_(UNUMBER), unum_(ull), size_(sizeof(unsigned long long))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(unsigned long ul) : type_(UNUMBER), unum_(ul), size_(sizeof(unsigned long))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(unsigned short us) : type_(UNUMBER), unum_(us), size_(sizeof(unsigned short))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(unsigned ui) : type_(UNUMBER), unum_(ui), size_(sizeof(unsigned))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(variant &&other) : type_(NULLTYPE), num_(0), size_(0)$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.cpp	/^    variant::variant(wchar_t wc) : type_(WCHAR), num_(wc), size_(sizeof(wchar_t))$/;"	f	class:arg3::variant
variant	libs/variant/src/variant.h	/^    class variant$/;"	c	namespace:arg3
version	libs/variant/tests/vendor/bandit/bandit/options.h	/^      bool version() const$/;"	f	struct:bandit::detail::options
version	tests/vendor/bandit/bandit/options.h	/^      bool version() const$/;"	f	struct:bandit::detail::options
visual_studio_failure_formatter	libs/variant/tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^  struct visual_studio_failure_formatter : public failure_formatter$/;"	s	namespace:bandit::detail
visual_studio_failure_formatter	tests/vendor/bandit/bandit/failure_formatters/visual_studio_failure_formatter.h	/^  struct visual_studio_failure_formatter : public failure_formatter$/;"	s	namespace:bandit::detail
voidfunc_t	libs/variant/tests/vendor/bandit/bandit/bandit.h	/^  typedef std::function<void ()> voidfunc_t;$/;"	t	namespace:bandit::detail
voidfunc_t	tests/vendor/bandit/bandit/bandit.h	/^  typedef std::function<void ()> voidfunc_t;$/;"	t	namespace:bandit::detail
warn	src/log.cpp	/^            void warn(const char *const format, ...)$/;"	f	namespace:arg3::db::log
where	src/delete_query.cpp	/^        delete_query &delete_query::where(const where_clause &value)$/;"	f	class:arg3::db::delete_query
where	src/delete_query.cpp	/^        where_clause &delete_query::where(const string &value)$/;"	f	class:arg3::db::delete_query
where	src/delete_query.h	/^            delete_query &where(const std::string &value, const List &... args)$/;"	f	class:arg3::db::delete_query
where	src/delete_query.h	/^            delete_query &where(const where_clause &value, const List &... args)$/;"	f	class:arg3::db::delete_query
where	src/select_query.cpp	/^        select_query &select_query::where(const where_clause &value)$/;"	f	class:arg3::db::select_query
where	src/select_query.cpp	/^        where_clause &select_query::where(const string &value)$/;"	f	class:arg3::db::select_query
where	src/select_query.h	/^            select_query &where(const std::string &value, const List &... args)$/;"	f	class:arg3::db::select_query
where	src/select_query.h	/^            select_query &where(const where_clause &value, const List &... args)$/;"	f	class:arg3::db::select_query
where	src/update_query.cpp	/^        update_query &update_query::where(const where_clause &value)$/;"	f	class:arg3::db::update_query
where	src/update_query.cpp	/^        where_clause &update_query::where(const string &value)$/;"	f	class:arg3::db::update_query
where	src/update_query.h	/^            update_query &where(const std::string &value, const List &... args)$/;"	f	class:arg3::db::update_query
where	src/update_query.h	/^            update_query &where(const where_clause &value, const List &... args)$/;"	f	class:arg3::db::update_query
where	src/where_clause.h	/^        typedef where_clause where;$/;"	t	namespace:arg3::db
where(conststring)	html/modify_query_h/Classes/update_query/index.html	/^<h3><a name="where(conststring)">where(const string &)<\/a><\/h3>$/;"	a
where(constwhere_clause)	html/modify_query_h/Classes/update_query/index.html	/^<h3><a name="where(constwhere_clause)">where(const where_clause &)<\/a><\/h3>$/;"	a
where_	src/delete_query.h	/^            where_clause where_;$/;"	m	class:arg3::db::delete_query
where_	src/select_query.h	/^            where_clause where_;$/;"	m	class:arg3::db::select_query
where_	src/update_query.h	/^            where_clause where_;$/;"	m	class:arg3::db::update_query
where_clause	html/where_clause_h/Classes/where_clause/index.html	/^<h1><a name="where_clause">where_clause<\/a><\/h1>$/;"	a
where_clause	src/where_clause.cpp	/^        where_clause::where_clause()$/;"	f	class:arg3::db::where_clause
where_clause	src/where_clause.cpp	/^        where_clause::where_clause(const string &value) : value_(value)$/;"	f	class:arg3::db::where_clause
where_clause	src/where_clause.cpp	/^        where_clause::where_clause(const where_clause &other) : value_(other.value_), and_(other.and_), or_(other.or_)$/;"	f	class:arg3::db::where_clause
where_clause	src/where_clause.cpp	/^        where_clause::where_clause(where_clause &&other) : value_(std::move(other.value_)), and_(std::move(other.and_)), or_(std::move(other.or_))$/;"	f	class:arg3::db::where_clause
where_clause	src/where_clause.h	/^        class where_clause$/;"	c	namespace:arg3::db
where_clause.h	html/where_clause_h/index.html	/^<h1><a name="where_clause.h">where_clause.h<\/a><\/h1>$/;"	a
white	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* white() const$/;"	f	struct:bandit::detail::colorizer
white	tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* white() const$/;"	f	struct:bandit::detail::colorizer
width	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int width;$/;"	m	class:option::PrintUsageImplementation::LineWrapper
width	tests/vendor/bandit/bandit/external/optionparser.h	/^    int width;$/;"	m	class:option::PrintUsageImplementation::LineWrapper
with_after_each	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    void with_after_each(detail::voidfunc_t call)$/;"	f	struct:bandit::fakes::fake_context
with_after_each	tests/vendor/bandit/specs/fakes/fake_context.h	/^    void with_after_each(detail::voidfunc_t call)$/;"	f	struct:bandit::fakes::fake_context
with_before_each	libs/variant/tests/vendor/bandit/specs/fakes/fake_context.h	/^    void with_before_each(detail::voidfunc_t call)$/;"	f	struct:bandit::fakes::fake_context
with_before_each	tests/vendor/bandit/specs/fakes/fake_context.h	/^    void with_before_each(detail::voidfunc_t call)$/;"	f	struct:bandit::fakes::fake_context
within	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        BeCloseTo<T>& within(float threshold)$/;"	f	class:bandit::Matchers::BeCloseTo
within	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeCloseTo.h	/^        BeCloseTo<T>& within(float threshold)$/;"	f	class:bandit::Matchers::BeCloseTo
work_stm_	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    std::stringstream work_stm_;$/;"	m	struct:bandit::detail::xunit_reporter
work_stm_	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    std::stringstream work_stm_;$/;"	m	struct:bandit::detail::xunit_reporter
workhorse	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^inline bool Parser::workhorse(bool gnu, const Descriptor usage[], int numargs, const char** args, Action& action,$/;"	f	class:option::Parser
workhorse	tests/vendor/bandit/bandit/external/optionparser.h	/^inline bool Parser::workhorse(bool gnu, const Descriptor usage[], int numargs, const char** args, Action& action,$/;"	f	class:option::Parser
write	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    Function* write;$/;"	m	struct:option::PrintUsageImplementation::FunctionWriter
write	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    Syscall* write;$/;"	m	struct:option::PrintUsageImplementation::SyscallWriter
write	libs/variant/tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    void write(std::ostream& stm)$/;"	f	struct:bandit::detail::test_run_summary
write	tests/vendor/bandit/bandit/external/optionparser.h	/^    Function* write;$/;"	m	struct:option::PrintUsageImplementation::FunctionWriter
write	tests/vendor/bandit/bandit/external/optionparser.h	/^    Syscall* write;$/;"	m	struct:option::PrintUsageImplementation::SyscallWriter
write	tests/vendor/bandit/bandit/reporters/test_run_summary.h	/^    void write(std::ostream& stm)$/;"	f	struct:bandit::detail::test_run_summary
write_one_line	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    void write_one_line(IStringWriter& write)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
write_one_line	tests/vendor/bandit/bandit/external/optionparser.h	/^    void write_one_line(IStringWriter& write)$/;"	f	class:option::PrintUsageImplementation::LineWrapper
wrote_something	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    bool wrote_something;$/;"	m	class:option::PrintUsageImplementation::LineWrapper
wrote_something	tests/vendor/bandit/bandit/external/optionparser.h	/^    bool wrote_something;$/;"	m	class:option::PrintUsageImplementation::LineWrapper
wstr_	libs/variant/src/variant.h	/^            std::wstring wstr_;$/;"	m	union:arg3::variant::__anon2
x	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^      static const T& x;$/;"	m	struct:snowhouse::detail::is_output_streamable
x	libs/variant/tests/vendor/bandit/bandit/external/optionparser.h	/^    int x;$/;"	m	class:option::PrintUsageImplementation::LineWrapper
x	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^      static const T& x;$/;"	m	struct:snowhouse::detail::is_output_streamable
x	tests/vendor/bandit/bandit/external/optionparser.h	/^    int x;$/;"	m	class:option::PrintUsageImplementation::LineWrapper
xdescribe	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void xdescribe(const char* desc, detail::voidfunc_t func,$/;"	f	namespace:bandit
xdescribe	tests/vendor/bandit/bandit/grammar.h	/^  inline void xdescribe(const char* desc, detail::voidfunc_t func,$/;"	f	namespace:bandit
xit	libs/variant/tests/vendor/bandit/bandit/grammar.h	/^  inline void xit(const char* desc, detail::voidfunc_t func, detail::listener& listener=detail::registered_listener())$/;"	f	namespace:bandit
xit	tests/vendor/bandit/bandit/grammar.h	/^  inline void xit(const char* desc, detail::voidfunc_t func, detail::listener& listener=detail::registered_listener())$/;"	f	namespace:bandit
xunit_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    xunit_reporter(const failure_formatter& formatter)$/;"	f	struct:bandit::detail::xunit_reporter
xunit_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    xunit_reporter(std::ostream& stm, const failure_formatter& formatter)$/;"	f	struct:bandit::detail::xunit_reporter
xunit_reporter	libs/variant/tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^  struct xunit_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
xunit_reporter	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    xunit_reporter(const failure_formatter& formatter)$/;"	f	struct:bandit::detail::xunit_reporter
xunit_reporter	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^    xunit_reporter(std::ostream& stm, const failure_formatter& formatter)$/;"	f	struct:bandit::detail::xunit_reporter
xunit_reporter	tests/vendor/bandit/bandit/reporters/xunit_reporter.h	/^  struct xunit_reporter : public progress_reporter$/;"	s	namespace:bandit::detail
yellow	libs/variant/tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* yellow() const$/;"	f	struct:bandit::detail::colorizer
yellow	tests/vendor/bandit/bandit/reporters/colorizer.h	/^    const char* yellow() const$/;"	f	struct:bandit::detail::colorizer
yes	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    typedef char yes;$/;"	t	namespace:snowhouse::detail
yes	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/stringize.h	/^    typedef char yes;$/;"	t	namespace:snowhouse::detail
~AssertionException	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/assertionexception.h	/^      virtual ~AssertionException() throw()$/;"	f	class:snowhouse::AssertionException
~BeFalsy	tests/vendor/bandit/bandit/assertion_frameworks/matchers/BeFalsy.h	/^        ~BeFalsy() {}$/;"	f	class:bandit::Matchers::BeFalsy
~ExceptionStorage	libs/variant/tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    ~ExceptionStorage()$/;"	f	class:snowhouse::ExceptionStorage
~ExceptionStorage	tests/vendor/bandit/bandit/assertion_frameworks/snowhouse/snowhouse/exceptions.h	/^    ~ExceptionStorage()$/;"	f	class:snowhouse::ExceptionStorage
~argv_helper	libs/variant/tests/vendor/bandit/specs/util/argv_helper.h	/^    ~argv_helper()$/;"	f	struct:bandit::specs::util::argv_helper
~argv_helper	tests/vendor/bandit/specs/util/argv_helper.h	/^    ~argv_helper()$/;"	f	struct:bandit::specs::util::argv_helper
~assertion_exception	tests/vendor/bandit/bandit/assertion_exception.h	/^    virtual ~assertion_exception() throw()$/;"	f	struct:bandit::detail::assertion_exception
~binary	libs/variant/src/binary.cpp	/^    binary::~binary()$/;"	f	class:arg3::binary
~bind_mapping	src/bindable.cpp	/^        bind_mapping::~bind_mapping()$/;"	f	class:arg3::db::bind_mapping
~binding	src/mysql/binding.cpp	/^            binding::~binding()$/;"	f	class:arg3::db::mysql::binding
~binding	src/postgres/binding.cpp	/^            binding::~binding()$/;"	f	class:arg3::db::postgres::binding
~cached_column	src/sqlite/column.cpp	/^            cached_column::~cached_column()$/;"	f	class:arg3::db::sqlite::cached_column
~cached_resultset	src/sqlite/resultset.cpp	/^            cached_resultset::~cached_resultset()$/;"	f	class:arg3::db::sqlite::cached_resultset
~cached_row	src/sqlite/row.cpp	/^            cached_row::~cached_row()$/;"	f	class:arg3::db::sqlite::cached_row
~column	src/mysql/column.cpp	/^            column::~column()$/;"	f	class:arg3::db::mysql::column
~column	src/postgres/column.cpp	/^            column::~column()$/;"	f	class:arg3::db::postgres::column
~column	src/sqlite/column.cpp	/^            column::~column()$/;"	f	class:arg3::db::sqlite::column
~context	libs/variant/tests/vendor/bandit/bandit/context.h	/^        virtual ~context() {}$/;"	f	class:bandit::detail::context
~context	tests/vendor/bandit/bandit/context.h	/^        virtual ~context() {}$/;"	f	class:bandit::detail::context
~db	src/mysql/db.cpp	/^            db::~db()$/;"	f	class:arg3::db::mysql::db
~db	src/postgres/db.cpp	/^            db::~db()$/;"	f	class:arg3::db::postgres::db
~db	src/sqlite/db.cpp	/^            db::~db()$/;"	f	class:arg3::db::sqlite::db
~delete_query	src/delete_query.cpp	/^        delete_query::~delete_query()$/;"	f	class:arg3::db::delete_query
~insert_query	src/insert_query.cpp	/^        insert_query::~insert_query()$/;"	f	class:arg3::db::insert_query
~join_clause	src/join_clause.cpp	/^        join_clause::~join_clause()$/;"	f	class:arg3::db::join_clause
~listener	libs/variant/tests/vendor/bandit/bandit/listener.h	/^    virtual ~listener() {}$/;"	f	struct:bandit::detail::listener
~listener	tests/vendor/bandit/bandit/listener.h	/^    virtual ~listener() {}$/;"	f	struct:bandit::detail::listener
~modify_query	src/modify_query.cpp	/^        modify_query::~modify_query()$/;"	f	class:arg3::db::modify_query
~query	src/query.cpp	/^        query::~query()$/;"	f	class:arg3::db::query
~record	src/record.h	/^            virtual ~record()$/;"	f	class:arg3::db::record
~resultset	src/mysql/resultset.cpp	/^            resultset::~resultset()$/;"	f	class:arg3::db::mysql::resultset
~resultset	src/postgres/resultset.cpp	/^            resultset::~resultset()$/;"	f	class:arg3::db::postgres::resultset
~resultset	src/resultset.cpp	/^        resultset::~resultset()$/;"	f	class:arg3::db::resultset
~resultset	src/sqlite/resultset.cpp	/^            resultset::~resultset()$/;"	f	class:arg3::db::sqlite::resultset
~resultset_iterator	src/resultset.h	/^            ~resultset_iterator()$/;"	f	class:arg3::db::resultset_iterator
~row	src/mysql/row.cpp	/^            row::~row()$/;"	f	class:arg3::db::mysql::row
~row	src/postgres/row.cpp	/^            row::~row()$/;"	f	class:arg3::db::postgres::row
~row	src/row.cpp	/^        row::~row()$/;"	f	class:arg3::db::row
~row	src/sqlite/row.cpp	/^            row::~row()$/;"	f	class:arg3::db::sqlite::row
~row_iterator	src/row.h	/^            virtual ~row_iterator()$/;"	f	class:arg3::db::row_iterator
~run_policy	libs/variant/tests/vendor/bandit/bandit/run_policies/run_policy.h	/^    virtual ~run_policy() {}$/;"	f	struct:bandit::detail::run_policy
~run_policy	tests/vendor/bandit/bandit/run_policies/run_policy.h	/^    virtual ~run_policy() {}$/;"	f	struct:bandit::detail::run_policy
~schema	src/schema.cpp	/^        schema::~schema()$/;"	f	class:arg3::db::schema
~select_query	src/select_query.cpp	/^        select_query::~select_query()$/;"	f	class:arg3::db::select_query
~sql_time	src/sql_value.cpp	/^        sql_time::~sql_time()$/;"	f	class:arg3::db::sql_time
~statement	src/mysql/statement.cpp	/^            statement::~statement()$/;"	f	class:arg3::db::mysql::statement
~statement	src/postgres/statement.cpp	/^            statement::~statement()$/;"	f	class:arg3::db::postgres::statement
~statement	src/sqlite/statement.cpp	/^            statement::~statement()$/;"	f	class:arg3::db::sqlite::statement
~stmt_column	src/mysql/column.cpp	/^            stmt_column::~stmt_column()$/;"	f	class:arg3::db::mysql::stmt_column
~stmt_resultset	src/mysql/resultset.cpp	/^            stmt_resultset::~stmt_resultset()$/;"	f	class:arg3::db::mysql::stmt_resultset
~stmt_row	src/mysql/row.cpp	/^            stmt_row::~stmt_row()$/;"	f	class:arg3::db::mysql::stmt_row
~update_query	src/update_query.cpp	/^        update_query::~update_query()$/;"	f	class:arg3::db::update_query
~user	tests/db.test.h	/^    ~user()$/;"	f	class:user
~variant	libs/variant/src/variant.cpp	/^    variant::~variant()$/;"	f	class:arg3::variant
~where_clause	src/where_clause.cpp	/^        where_clause::~where_clause()$/;"	f	class:arg3::db::where_clause
